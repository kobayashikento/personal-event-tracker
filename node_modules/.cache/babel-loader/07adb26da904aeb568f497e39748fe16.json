{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/MainMenu.js\";\nimport React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { useState } from 'react'; // import styles\n\nimport { makeStyles, createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles'; // import core ui \n\nimport CssBaseline from '@material-ui/core/CssBaseline'; // import files \n\nimport Sidebar from '../components/Sidebar.js'; //import Appbar from '../components/Appbar.js';\n\nimport styles from '../assets/jss/components/mainmenuStyle.js';\nimport routes from '../routes.js';\nimport themes from '../assets/data/themes.json';\nconst useStyles = makeStyles(styles);\nexport default function MainMenu() {\n  const classes = useStyles();\n  var theme;\n  themes.forEach(th => {\n    if (typeof th != undefined) {\n      if (th.themeName === \"default\") {\n        theme = th;\n      }\n    }\n  }); // states \n\n  const [activeTheme, setTheme] = useState(theme);\n  const [didChange, setChange] = useState(false); // theme is an object that follows the themes.json scheme\n\n  const handleChange = newtheme => {\n    console.log(newtheme);\n    setTheme(newtheme);\n  }; // check if the theme exists \n\n\n  const checknotChanged = () => {\n    themes.map(theme => {\n      return Object.keys(theme) === Object.keys(activeTheme);\n    });\n    return false;\n  };\n\n  const handleSideBarClick = () => {\n    console.log(checknotChanged());\n\n    if (didChange) {}\n  }; // set it to defualt until a file manager is code\n\n\n  const switchRoutes = /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, routes.map((prop, index) => {\n    return /*#__PURE__*/React.createElement(Route, {\n      key: index,\n      path: prop.path,\n      render: props => /*#__PURE__*/React.createElement(prop.component, Object.assign({}, props, {\n        theme: activeTheme,\n        handleChange: theme => handleChange(theme),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 44\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    });\n  }));\n  let muiTheme = createMuiTheme({\n    overrides: {\n      MuiListItem: {\n        root: {\n          \"&$selected\": {\n            backgroundColor: activeTheme.colors.secondary\n          },\n          \"&:hover\": {\n            backgroundColor: activeTheme.colors.tertiary + \"!important\"\n          }\n        }\n      }\n    }\n  });\n  muiTheme = responsiveFontSizes(muiTheme);\n  return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: muiTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    routes: routes,\n    theme: activeTheme,\n    handleSideBarClick: () => handleSideBarClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.contentsWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, switchRoutes)));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/MainMenu.js"],"names":["React","Switch","Route","useState","makeStyles","createMuiTheme","responsiveFontSizes","ThemeProvider","MuiThemeProvider","CssBaseline","Sidebar","styles","routes","themes","useStyles","MainMenu","classes","theme","forEach","th","undefined","themeName","activeTheme","setTheme","didChange","setChange","handleChange","newtheme","console","log","checknotChanged","map","Object","keys","handleSideBarClick","switchRoutes","prop","index","path","props","muiTheme","overrides","MuiListItem","root","backgroundColor","colors","secondary","tertiary","wrapper","contentsWrapper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { useState } from 'react';\n\n// import styles\nimport { makeStyles, createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\n\n// import core ui \nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n// import files \nimport Sidebar from '../components/Sidebar.js';\n//import Appbar from '../components/Appbar.js';\nimport styles from '../assets/jss/components/mainmenuStyle.js';\n\nimport routes from '../routes.js';\n\nimport themes from '../assets/data/themes.json';\nconst useStyles = makeStyles(styles);\n\nexport default function MainMenu() {\n    const classes = useStyles();\n\n    var theme;\n    themes.forEach(th => {\n        if (typeof (th) != undefined) {\n            if (th.themeName === \"default\") {\n                theme = th;\n            }\n        }\n    })\n\n    // states \n    const [activeTheme, setTheme] = useState(theme);\n    const [didChange, setChange] = useState(false);\n\n    // theme is an object that follows the themes.json scheme\n    const handleChange = (newtheme) => {\n        console.log(newtheme)\n        setTheme(newtheme);\n    }\n\n    // check if the theme exists \n    const checknotChanged = () =>{\n        themes.map(theme => {\n            return (Object.keys(theme)===Object.keys(activeTheme));\n        })\n        return false; \n    }\n\n    const handleSideBarClick = () => {\n        console.log(checknotChanged());\n        if (didChange) {\n             \n        }\n    }\n\n    // set it to defualt until a file manager is code\n\n    const switchRoutes = (\n        <Switch>\n            {routes.map((prop, index) => {\n                return (\n                    <Route\n                        key={index}\n                        path={prop.path}\n                        render={(props) => <prop.component {...props} theme={activeTheme} handleChange={(theme) => handleChange(theme)} />}\n                    >\n                    </Route>\n                );\n            })}\n        </Switch>\n    );\n\n    let muiTheme = createMuiTheme({\n        overrides: {\n            MuiListItem: {\n                root: {\n                    \"&$selected\": {\n                        backgroundColor: activeTheme.colors.secondary,\n                    },\n                    \"&:hover\": {\n                        backgroundColor: activeTheme.colors.tertiary + \"!important\",\n                    },\n                }\n            },\n        },\n    })\n\n    muiTheme = responsiveFontSizes(muiTheme)\n\n    return (\n        <MuiThemeProvider theme={muiTheme}>\n            <CssBaseline />\n            <div className={classes.wrapper}>\n                {/* Remove Appbar for now */}\n                {/* <Appbar\n                    routes={routes}\n                /> */}\n                <Sidebar\n                    routes={routes}\n                    theme={activeTheme}\n                    handleSideBarClick={()=>handleSideBarClick()}\n                />\n                <div className={classes.contentsWrapper}>\n                    {switchRoutes}\n                </div>\n            </div>\n        </MuiThemeProvider>\n    );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}