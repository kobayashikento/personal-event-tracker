{"ast":null,"code":"import _objectSpread from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{titleCase}from'../../assets/styles/masterStyle.js';// import recharts\nimport{ScatterChart,XAxis,YAxis,Scatter,Tooltip,Legend,ResponsiveContainer}from'recharts';// import material ui core \nimport IconButton from'@material-ui/core/IconButton';import Typography from'@material-ui/core/Typography';import Autocomplete from'@material-ui/lab/Autocomplete';import TextField from'@material-ui/core/TextField';import{makeStyles}from'@material-ui/core/styles';import moment from'moment';// import material ui icons \nimport ChevronLeftIcon from'@material-ui/icons/ChevronLeft';import ChevronRightIcon from'@material-ui/icons/ChevronRight';import styles from'../../assets/styles/views/gym/gymgraphStyle.js';import dog from'../../assets/images/15224-cute-doggie.gif';var useStyles=makeStyles(styles);export default function DashGraph(props){var classes=useStyles();var numEntries=0;//states\nvar _React$useState=React.useState({selectedStart:props.start,selectedEnd:props.end}),_React$useState2=_slicedToArray(_React$useState,2),state=_React$useState2[0],setState=_React$useState2[1];var handleWeekChange=function handleWeekChange(direction){if(direction==='right'&&!state.selectedEnd.isSame(moment())){setState(_objectSpread(_objectSpread({},state),{},{selectedEnd:state.selectedEnd.add(props.amount,props.type)}));setState(_objectSpread(_objectSpread({},state),{},{selectedStart:state.selectedStart.add(props.amount,props.type)}));}else if(direction==='left'){setState(_objectSpread(_objectSpread({},state),{},{selectedEnd:state.selectedEnd.subtract(props.amount,props.type)}));setState(_objectSpread(_objectSpread({},state),{},{selectedStart:state.selectedStart.subtract(props.amount,props.type)}));}};// function that selects data based on the selected workout and date range \nvar filteredByDate=function filteredByDate(){if(props.selectedData===null){return[];}else{return{name:props.selectedData.name,workoutdata:props.selectedData.data.map(function(data){if(moment(data.date).isBetween(state.selectedStart,state.selectedEnd)){return{data:data};}})};}};var createData=function createData(array){var temp=[];array.workoutdata.map(function(workout){if(workout!==undefined){numEntries=numEntries+1;temp.push({\"time\":moment(workout.data.date).valueOf(),\"value\":workout.data.weight});}});return temp;};var getScatterData=function getScatterData(){numEntries=0;if(filteredByDate().length===0){return/*#__PURE__*/React.createElement(Scatter,{data:[],line:{stroke:props.theme.colors.primary},lineJointType:\"monotoneX\",lineType:\"joint\",legendType:\"line\"});}else{return/*#__PURE__*/React.createElement(Scatter,{data:createData(filteredByDate()),line:{stroke:props.theme.colors.primary},lineJointType:\"monotoneX\",lineType:\"joint\",legendType:\"circle\",fill:props.theme.colors.secondary,name:\" \"+filteredByDate().name});}};return/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",flexDirection:\"column\",height:\"76vh\"}},/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",marginTop:\"32px\",marginLeft:\"auto\",marginRight:\"auto\"}},/*#__PURE__*/React.createElement(IconButton,{style:{marginLeft:\"16px\"},onClick:function onClick(){return handleWeekChange('left');}},/*#__PURE__*/React.createElement(ChevronLeftIcon,null)),/*#__PURE__*/React.createElement(\"div\",{style:{marginRight:\"5vw\",marginLeft:\"5vw\"}},/*#__PURE__*/React.createElement(Typography,{variant:\"h5\",component:\"h1\",style:{textAlign:\"center\"}},state.selectedStart.format('MMMM D'),\" - \",state.selectedEnd.format('MMMM D')),/*#__PURE__*/React.createElement(Typography,{style:{textAlign:\"center\",padding:\"8px\"},variant:\"subtitle1\",color:\"textSecondary\"},getScatterData().props.data.length,\" - Total Entries\")),/*#__PURE__*/React.createElement(IconButton,{style:{marginRight:\"16px\"},onClick:function onClick(){return handleWeekChange('right');}},/*#__PURE__*/React.createElement(ChevronRightIcon,null))),getScatterData().props.data.length===0?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{style:{marginTop:\"25%\",textAlign:\"center\"},variant:\"subtitle1\",component:\"h1\",color:\"textSecondary\"},\"No Data Available\"),/*#__PURE__*/React.createElement(\"img\",{className:classes.run,src:dog})):null,getScatterData().props.data.length===1?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{style:{marginTop:\"25%\",textAlign:\"center\"},variant:\"subtitle1\",component:\"h1\",color:\"textSecondary\"},\"No Enough Data Points\"),/*#__PURE__*/React.createElement(\"img\",{className:classes.run,src:dog})):null,/*#__PURE__*/React.createElement(ResponsiveContainer,{minHeight:100,width:\"100%\",height:\"100%\"},/*#__PURE__*/React.createElement(ScatterChart,{className:classes.chart,margin:{top:0,right:45,left:24,bottom:54}},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"time\",domain:['auto','auto'],name:\"Time\",tickFormatter:function tickFormatter(unixTime){return moment(unixTime).format('MM-DD-YYYY');},type:\"number\"}),/*#__PURE__*/React.createElement(YAxis,{dataKey:\"value\",name:\"Weight\",domain:['auto','auto'],unit:\"lbs\"}),getScatterData(),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Legend,{height:36,wrapperStyle:{top:10,left:25}}))));}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/src/views/Gym/GymGraph.js"],"names":["React","titleCase","ScatterChart","XAxis","YAxis","Scatter","Tooltip","Legend","ResponsiveContainer","IconButton","Typography","Autocomplete","TextField","makeStyles","moment","ChevronLeftIcon","ChevronRightIcon","styles","dog","useStyles","DashGraph","props","classes","numEntries","useState","selectedStart","start","selectedEnd","end","state","setState","handleWeekChange","direction","isSame","add","amount","type","subtract","filteredByDate","selectedData","name","workoutdata","data","map","date","isBetween","createData","array","temp","workout","undefined","push","valueOf","weight","getScatterData","length","stroke","theme","colors","primary","secondary","display","flexDirection","height","marginTop","marginLeft","marginRight","textAlign","format","padding","run","chart","top","right","left","bottom","unixTime"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    titleCase\n} from '../../assets/styles/masterStyle.js';\n\n// import recharts\nimport {\n    ScatterChart, XAxis, YAxis, Scatter, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\n// import material ui core \nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\n\n// import material ui icons \nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport styles from '../../assets/styles/views/gym/gymgraphStyle.js';\n\nimport dog from '../../assets/images/15224-cute-doggie.gif';\n\nconst useStyles = makeStyles(styles);\n\nexport default function DashGraph(props) {\n    const classes = useStyles();\n    let numEntries = 0;\n    //states\n    const [state, setState] = React.useState(\n        {\n            selectedStart: props.start,\n            selectedEnd: props.end,\n        }\n    )\n    const handleWeekChange = (direction) => {\n        if (direction === 'right' && !state.selectedEnd.isSame(moment())) {\n            setState({ ...state, selectedEnd: state.selectedEnd.add(props.amount, props.type) });\n            setState({ ...state, selectedStart: state.selectedStart.add(props.amount, props.type) });\n        } else if (direction === 'left') {\n            setState({ ...state, selectedEnd: state.selectedEnd.subtract(props.amount, props.type) });\n            setState({ ...state, selectedStart: state.selectedStart.subtract(props.amount, props.type) });\n        }\n    }\n\n    // function that selects data based on the selected workout and date range \n    const filteredByDate = () => {\n        if (props.selectedData === null) {\n            return []\n        } else {\n            return {\n                name: props.selectedData.name,\n                workoutdata:\n                    props.selectedData.data.map(data => {\n                        if (moment(data.date).isBetween(state.selectedStart, state.selectedEnd)) {\n                            return {\n                                data\n                            };\n                        }\n                    })\n            };\n        }\n    }\n\n    const createData = (array) => {\n        let temp = [];\n        array.workoutdata.map(workout => {\n            if (workout !== undefined) {\n                numEntries = numEntries + 1;\n                temp.push({\n                    \"time\": moment(workout.data.date).valueOf(),\n                    \"value\": workout.data.weight\n                })\n            }\n        })\n        return temp;\n    }\n\n    const getScatterData = () => {\n        numEntries = 0;\n        if (filteredByDate().length === 0) {\n            return (\n                <Scatter\n                    data={[]}\n                    line={{ stroke: props.theme.colors.primary }}\n                    lineJointType='monotoneX'\n                    lineType='joint'\n                    legendType=\"line\"\n                />\n            );\n        } else {\n            return (\n                <Scatter\n                    data={\n                        createData(filteredByDate())\n                    }\n                    line={{ stroke: props.theme.colors.primary }}\n                    lineJointType='monotoneX'\n                    lineType='joint'\n                    legendType=\"circle\"\n                    fill={props.theme.colors.secondary}\n                    name={\" \" + filteredByDate().name}\n                />\n            );\n        }\n    }\n\n    return (\n        <div style={{ display: \"flex\", flexDirection: \"column\", height: \"76vh\" }}>\n            <div style={{ display: \"flex\", marginTop: \"32px\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n                <IconButton style={{ marginLeft: \"16px\" }} onClick={() => handleWeekChange('left')}>\n                    <ChevronLeftIcon />\n                </IconButton>\n                <div style={{ marginRight: \"5vw\", marginLeft: \"5vw\" }}>\n                    <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: \"center\" }}>\n                        {state.selectedStart.format('MMMM D')} - {state.selectedEnd.format('MMMM D')}\n                    </Typography>\n                    <Typography style={{ textAlign: \"center\", padding: \"8px\" }} variant=\"subtitle1\" color=\"textSecondary\">\n                        {getScatterData().props.data.length} - Total Entries\n                    </Typography>\n                </div>\n                <IconButton style={{ marginRight: \"16px\" }} onClick={() => handleWeekChange('right')}>\n                    <ChevronRightIcon />\n                </IconButton>\n            </div>\n            {getScatterData().props.data.length === 0 ?\n                <div>\n                    <Typography style={{ marginTop: \"25%\", textAlign: \"center\" }} variant=\"subtitle1\" component=\"h1\" color=\"textSecondary\">\n                        No Data Available\n                        </Typography>\n                    <img className={classes.run} src={dog} />\n                </div>\n                : null}\n            {getScatterData().props.data.length === 1 ?\n                <div>\n                    <Typography style={{ marginTop: \"25%\", textAlign: \"center\" }} variant=\"subtitle1\" component=\"h1\" color=\"textSecondary\">\n                        No Enough Data Points\n                        </Typography>\n                    <img className={classes.run} src={dog} />\n                </div>\n                : null}\n            <ResponsiveContainer minHeight={100} width=\"100%\" height=\"100%\">\n                <ScatterChart\n                    className={classes.chart}\n                    margin={{ top: 0, right: 45, left: 24, bottom: 54 }}>\n                    <XAxis dataKey='time'\n                        domain={['auto', 'auto']}\n                        name='Time'\n                        tickFormatter={(unixTime) => moment(unixTime).format('MM-DD-YYYY')}\n                        type='number'\n                    />\n                    <YAxis dataKey='value' name='Weight' domain={['auto', 'auto']} unit=\"lbs\" />\n                    {getScatterData()}\n                    <Tooltip />\n                    <Legend height={36} wrapperStyle={{ top: 10, left: 25 }} />\n                </ScatterChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}