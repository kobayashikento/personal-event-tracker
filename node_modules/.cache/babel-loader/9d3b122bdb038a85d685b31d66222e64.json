{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/DashBoard/GymInputForm.js\";\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport MaterialTable from 'material-table';\nimport styles from '../../assets/styles/components/forms/gyminputformStyle.js';\nimport workouts from '../../assets/data/workouts.json';\nimport routines from '../../assets/data/workoutRoutine.json';\nconst useStyle = makeStyles(styles);\nexport default function GymInputForm(props) {\n  //props workout = workoutRoutine object\n  const classes = useStyle(); // states \n\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n  const [state, setState] = React.useState({\n    workouts: props.workouts,\n    routine: props.routine.routineName\n  });\n\n  const handleChange = event => {\n    const name = event.target.name;\n    setState({ ...state,\n      [name]: event.target.value\n    });\n  };\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  }; // styles\n\n\n  const StyleInputLabel = withStyles({\n    root: {\n      fontSize: \"1rem\"\n    }\n  })(InputLabel);\n  const StyledSelect = withStyles({\n    root: {\n      textTransform: \"capitalize\"\n    }\n  })(Select);\n  const StyledTable = withStyles({\n    root: {\n      marginLeft: \"1rem\",\n      marginRight: \"1rem\"\n    }\n  })(MaterialTable); // settings for the material table\n\n  const tableColumns = [{\n    title: 'Set',\n    field: 'set',\n    editable: 'never'\n  }, {\n    title: 'Reps',\n    field: 'reps',\n    type: 'numeric'\n  }, {\n    title: 'Weight',\n    field: 'weight',\n    type: 'numeric'\n  }];\n  const tableData = [];\n\n  for (var i = 1; i <= state.workouts.sets; i++) {\n    tableData.push({\n      set: i,\n      reps: 0,\n      weight: 0\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formcontrol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StyleInputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, \"Workout\"), /*#__PURE__*/React.createElement(StyledSelect, {\n    native: true,\n    value: state.workouts.workout.name,\n    onChange: handleChange,\n    label: \"Workout\",\n    name: \"workout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, state.workouts.workout.name), workouts.map((workout, index) => {\n    if (workout.name !== state.workouts.workout.name) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 41\n        }\n      }, workout.name);\n    }\n  }))), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formcontrol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StyleInputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Routine\"), /*#__PURE__*/React.createElement(StyledSelect, {\n    native: true,\n    value: state.routine,\n    onChange: handleChange,\n    label: \"Workout\",\n    name: \"routine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, state.routine), routines.map((routine, index) => {\n    if (routine.routineName !== state.routine) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 41\n        }\n      }, routine.routineName);\n    }\n  }))), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: \"Date\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    InputProps: {\n      className: classes.datepicker\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(StyledTable, {\n    columns: tableColumns,\n    data: tableData,\n    options: {\n      search: false,\n      showTitle: false,\n      filtering: false,\n      sorting: false\n    },\n    cellEditable: {\n      onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\n        return new Promise((resolve, reject) => {\n          console.log('newValue: ' + newValue);\n          setTimeout(resolve, 1000);\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/DashBoard/GymInputForm.js"],"names":["React","makeStyles","withStyles","Paper","FormControl","InputLabel","Select","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","MaterialTable","styles","workouts","routines","useStyle","GymInputForm","props","classes","selectedDate","setSelectedDate","useState","Date","state","setState","routine","routineName","handleChange","event","name","target","value","handleDateChange","date","StyleInputLabel","root","fontSize","StyledSelect","textTransform","StyledTable","marginLeft","marginRight","tableColumns","title","field","editable","type","tableData","i","sets","push","set","reps","weight","paper","select","formcontrol","workout","map","index","className","datepicker","search","showTitle","filtering","sorting","onCellEditApproved","newValue","oldValue","rowData","columnDef","Promise","resolve","reject","console","log","setTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { makeStyles, withStyles } from '@material-ui/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport MaterialTable from 'material-table'\n\nimport styles from '../../assets/styles/components/forms/gyminputformStyle.js';\n\nimport workouts from '../../assets/data/workouts.json';\nimport routines from '../../assets/data/workoutRoutine.json';\n\nconst useStyle = makeStyles(styles);\n\nexport default function GymInputForm(props) {\n    //props workout = workoutRoutine object\n    const classes = useStyle();\n\n    // states \n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n    const [state, setState] = React.useState({\n        workouts: props.workouts,\n        routine: props.routine.routineName\n    });\n    const handleChange = (event) => {\n        const name = event.target.name;\n        setState({ ...state, [name]: event.target.value });\n    };\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n    };\n\n    // styles\n    const StyleInputLabel = withStyles({\n        root: {\n            fontSize: \"1rem\"\n        },\n    })(InputLabel)\n    const StyledSelect = withStyles({\n        root: {\n            textTransform: \"capitalize\"\n        }\n    })(Select)\n    const StyledTable = withStyles({\n        root: {\n            marginLeft: \"1rem\",\n            marginRight: \"1rem\",\n        }\n    })(MaterialTable)\n\n    // settings for the material table\n    const tableColumns = [\n        { title: 'Set', field: 'set', editable: 'never' },\n        { title: 'Reps', field: 'reps', type: 'numeric' },\n        { title: 'Weight', field: 'weight', type: 'numeric' }\n    ];\n    const tableData = []\n    for (var i = 1; i <= state.workouts.sets; i++) {\n        tableData.push({ set: i, reps: 0, weight: 0 })\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <div className={classes.select}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <FormControl variant=\"outlined\" className={classes.formcontrol}>\n                        <StyleInputLabel >Workout</StyleInputLabel>\n                        <StyledSelect\n                            native\n                            value={state.workouts.workout.name}\n                            onChange={handleChange}\n                            label=\"Workout\"\n                            name=\"workout\"\n                        >\n                            <option >{state.workouts.workout.name}</option>\n                            {workouts.map((workout, index) => {\n                                if (workout.name !== state.workouts.workout.name) {\n                                    return (\n                                        <option key={index}>{workout.name}</option>\n                                    )\n                                }\n                            })}\n                        </StyledSelect>\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className={classes.formcontrol}>\n                        <StyleInputLabel >Routine</StyleInputLabel>\n                        <StyledSelect\n                            native\n                            value={state.routine}\n                            onChange={handleChange}\n                            label=\"Workout\"\n                            name=\"routine\"\n                        >\n                            <option >{state.routine}</option>\n                            {routines.map((routine, index) => {\n                                if (routine.routineName !== state.routine) {\n                                    return (\n                                        <option key={index}>{routine.routineName}</option>\n                                    )\n                                }\n                            })}\n                        </StyledSelect>\n                    </FormControl>\n                    <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"MM/dd/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"Date\"\n                        value={selectedDate}\n                        onChange={handleDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                        InputProps={{ className: classes.datepicker }}\n                    />\n                </MuiPickersUtilsProvider>\n            </div>\n            <StyledTable\n                columns={tableColumns}\n                data={tableData}\n                options={{\n                    search: false,\n                    showTitle: false,\n                    filtering: false,\n                    sorting: false\n                }}\n                cellEditable={{\n                    onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\n                        return new Promise((resolve, reject) => {\n                            console.log('newValue: ' + newValue);\n                            setTimeout(resolve, 1000);\n                        });\n                    }\n                }}\n            />\n        </Paper>\n    );\n}"]},"metadata":{},"sourceType":"module"}