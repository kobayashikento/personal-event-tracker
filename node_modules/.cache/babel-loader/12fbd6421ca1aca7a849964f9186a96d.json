{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymGraph.js\";\nimport React from 'react'; // import recharts\n\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Bar, Cell } from 'recharts'; // import material ui core \n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport styles from '../../assets/styles/views/dashboard/dashgraphStyle.js';\nconst useStyles = makeStyles(styles);\nexport default function DashGraph(props) {\n  const classes = useStyles();\n\n  const titleCase = str => {\n    var splitStr = str.toLowerCase().split(' ');\n\n    for (var i = 0; i < splitStr.length; i++) {\n      splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n\n    return splitStr.join(' ');\n  };\n\n  const getData = () => {\n    if (props.data === []) {\n      return [{\n        \"date\": () => {\n          return new Date().toDateString();\n        },\n        \"weight\": 0\n      }];\n    }\n  };\n\n  console.log(getData);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymGraph.js"],"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Bar","Cell","makeStyles","Paper","Button","styles","useStyles","DashGraph","props","classes","titleCase","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","getData","data","Date","toDateString","console","log","paper"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SACIC,SADJ,EACeC,IADf,EACqBC,KADrB,EAC4BC,KAD5B,EACmCC,aADnC,EACkDC,OADlD,EAC2DC,MAD3D,EACmEC,GADnE,EACwEC,IADxE,QAEO,UAFP,C,CAIA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,MAAP,MAAmB,uDAAnB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAACG,MAAD,CAA5B;AAEA,eAAe,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;AAErC,QAAMC,OAAO,GAAGH,SAAS,EAAzB;;AAEA,QAAMI,SAAS,GAAIC,GAAD,IAAS;AACvB,QAAIC,QAAQ,GAAGD,GAAG,CAACE,WAAJ,GAAkBC,KAAlB,CAAwB,GAAxB,CAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCH,MAAAA,QAAQ,CAACG,CAAD,CAAR,GAAcH,QAAQ,CAACG,CAAD,CAAR,CAAYE,MAAZ,CAAmB,CAAnB,EAAsBC,WAAtB,KAAsCN,QAAQ,CAACG,CAAD,CAAR,CAAYI,SAAZ,CAAsB,CAAtB,CAApD;AACH;;AACD,WAAOP,QAAQ,CAACQ,IAAT,CAAc,GAAd,CAAP;AACH,GAND;;AAQA,QAAMC,OAAO,GAAG,MAAM;AAClB,QAAIb,KAAK,CAACc,IAAN,KAAe,EAAnB,EAAuB;AACnB,aAAQ,CACJ;AACI,gBAAQ,MAAM;AAAC,iBAAO,IAAIC,IAAJ,GAAWC,YAAX,EAAP;AAAiC,SADpD;AAEI,kBAAU;AAFd,OADI,CAAR;AAMH;AACJ,GATD;;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEA,sBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEZ,OAAO,CAACkB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAaH","sourcesContent":["import React from 'react';\n\n// import recharts\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Bar, Cell\n} from 'recharts';\n\n// import material ui core \nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport styles from '../../assets/styles/views/dashboard/dashgraphStyle.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function DashGraph(props) {\n\n    const classes = useStyles();\n\n    const titleCase = (str) => {\n        var splitStr = str.toLowerCase().split(' ');\n        for (var i = 0; i < splitStr.length; i++) {\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n        }\n        return splitStr.join(' ');\n    }\n\n    const getData = () => {\n        if (props.data === []) {\n            return ([\n                {\n                    \"date\": () => {return new Date().toDateString()},\n                    \"weight\": 0\n                },\n            ]);\n        }\n    }\n\n    console.log(getData)\n\n    return (\n        <Paper className={classes.paper}>\n            {/* <LineChart width={500} height={400} data={getData}\n                margin={{ top: 30, right: 50, left: 20, bottom: 5 }}>\n                <XAxis dataKey=\"date\" />\n                <YAxis dataKey=\"weight\" domain={['auto', 'auto']} />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend height={36} wrapperStyle={{ top: 0, left: 25 }} />\n                <Line name={titleCase(\"temp\")} type=\"monotone\" dataKey=\"weight\" />\n            </LineChart> */}\n        </Paper>\n    );\n}"]},"metadata":{},"sourceType":"module"}