{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/components/list/DrawerList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames'; // import material ui \n\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse'; // import styles from MUI\n\nimport { makeStyles } from '@material-ui/core/styles'; // import files \n\nimport styles from '../../assets/styles/components/list/drawerlistStyle.js';\nimport { gymRoutes } from '../../routes.js';\nconst useStyles = makeStyles(styles);\nexport default function DrawerList(props) {\n  const classes = useStyles(); // states\n\n  const [open, setOpen] = React.useState(true);\n\n  const handleListItemClick = (event, index) => {\n    props.handleListItemClick(index);\n  };\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var gymLinks = gymRoutes.map(prop => {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: prop.path,\n      className: classes.item,\n      key: prop.name,\n      style: {\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      className: classNames(classes.drawerButtonNested),\n      onClick: event => handleListItemClick(event, 1),\n      selected: props.selectedIndex === index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: prop.name,\n      disableTypography: true,\n      className: classes.buttonText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    })));\n  });\n\n  const gymdrawerItems = (index, Icon, name, path) => {\n    if (name === \"Gym\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        selected: props.selectedIndex === index,\n        className: classNames(classes.drawerButtonItem),\n        key: name,\n        onClick: handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: classes.buttonIcon,\n        fontSize: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ListItemText, {\n        disableTypography: true,\n        className: classes.buttonText,\n        primary: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }), open ? /*#__PURE__*/React.createElement(ExpandMore, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(ExpandLess, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(Collapse, {\n        in: open,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        component: \"div\",\n        disablePadding: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, gymLinks)));\n    } else {\n      return /*#__PURE__*/React.createElement(Link, {\n        to: path,\n        className: classes.item,\n        key: index,\n        style: {\n          textDecoration: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        selected: props.selectedIndex === index,\n        className: classNames(classes.drawerButton),\n        key: name,\n        onClick: event => handleListItemClick(event, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: classes.buttonIcon,\n        fontSize: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ListItemText, {\n        disableTypography: true,\n        className: classes.buttonText,\n        primary: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      })));\n    }\n  }; //reccusively create the list items for the drawer\n\n\n  var drawerItems = /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, props.routes.map((prop, index) => {\n    return gymdrawerItems(index, prop.icon, prop.name, prop.path);\n  }));\n  return drawerItems;\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/components/list/DrawerList.js"],"names":["React","Link","classNames","List","ListItemText","ListItem","DragHandleIcon","ExpandLess","ExpandMore","Collapse","makeStyles","styles","gymRoutes","useStyles","DrawerList","props","classes","open","setOpen","useState","handleListItemClick","event","index","handleClick","gymLinks","map","prop","path","item","name","textDecoration","drawerButtonNested","selectedIndex","buttonText","gymdrawerItems","Icon","drawerButtonItem","buttonIcon","drawerButton","drawerItems","list","routes","icon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// import material ui \nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\n\n// import styles from MUI\nimport { makeStyles } from '@material-ui/core/styles';\n\n// import files \nimport styles from '../../assets/styles/components/list/drawerlistStyle.js';\n\nimport { gymRoutes } from '../../routes.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function DrawerList(props) {\n    const classes = useStyles();\n\n    // states\n    const [open, setOpen] = React.useState(true);\n    const handleListItemClick = (event, index) => {\n        props.handleListItemClick(index);\n    };\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    var gymLinks = (\n        gymRoutes.map((prop) => {\n            return (\n                <Link\n                    to={prop.path}\n                    className={classes.item}\n                    key={prop.name}\n                    style={{ textDecoration: \"none\" }}\n                >\n                    <ListItem\n                        button\n                        className={classNames(classes.drawerButtonNested)}\n                        onClick={(event) => handleListItemClick(event, 1)}\n                        selected={props.selectedIndex === index}\n                    >\n                        <ListItemText\n                            primary={prop.name}\n                            disableTypography\n                            className={classes.buttonText}\n                        />\n                    </ListItem>\n                </Link>\n            );\n        })\n    );\n\n    const gymdrawerItems = (index, Icon, name, path) => {\n        if (name === \"Gym\") {\n            return (\n                <React.Fragment key={index} >\n                    < ListItem\n                        button\n                        selected={props.selectedIndex === index}\n                        className={classNames(classes.drawerButtonItem)}\n                        key={name}\n                        onClick={handleClick}\n                    >\n                        <Icon\n                            className={classes.buttonIcon}\n                            fontSize=\"default\"\n                        />\n                        <ListItemText\n                            disableTypography\n                            className={classes.buttonText}\n                            primary={name}\n                        />\n                        {open ? <ExpandMore /> : <ExpandLess />}\n                    </ListItem >\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            {gymLinks}\n                        </List>\n                    </Collapse>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <Link\n                    to={path}\n                    className={classes.item}\n                    key={index}\n                    style={{ textDecoration: \"none\" }}\n                >\n                    <ListItem\n                        button\n                        selected={props.selectedIndex === index}\n                        className={\n                            classNames(classes.drawerButton)\n                        }\n                        key={name}\n                        onClick={(event) => handleListItemClick(event, index)}\n                    >\n                        <Icon\n                            className={classes.buttonIcon}\n                            fontSize=\"default\"\n                        />\n                        <ListItemText\n                            disableTypography\n                            className={classes.buttonText}\n                            primary={name}\n                        />\n                    </ListItem>\n                </Link>\n            );\n        }\n    };\n\n    //reccusively create the list items for the drawer\n    var drawerItems = (\n        <List className={classes.list}>\n            {props.routes.map((prop, index) => {\n                return (\n                    gymdrawerItems(index, prop.icon, prop.name, prop.path)\n                );\n            })}\n        </List >\n    );\n\n    return (\n        drawerItems\n    );\n}"]},"metadata":{},"sourceType":"module"}