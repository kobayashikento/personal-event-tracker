{"ast":null,"code":"// generate random events for the calendar \nimport data from '../../assets/data/dashEvents.json'; // sorts the json file and returns an array that is used to populate the progress calendar \n// where the indexs are 0=all activities, 1=piano, 2=gym, 3=none\n// return all the activties and their values \n\nfunction getAllActivity() {\n  var allAct = [];\n  var pianoAct = [];\n  var gymAct = [];\n  var noAct = [];\n  data.forEach(event => {\n    // 4 cases\n    // case 1: array of all events\n    allAct.push({\n      day: event.day,\n      value: getNumActivity(event)\n    }); //case 2: array of only a single activity\n\n    switch (getNumActivity(event)) {\n      case 3:\n        pianoAct.push({\n          day: event.day,\n          value: 1\n        });\n        gymAct.push({\n          day: event.day,\n          value: 1\n        });\n        break;\n\n      case 2:\n        pianoAct.push({\n          day: event.day,\n          value: 1\n        });\n        break;\n\n      case 1:\n        gymAct.push({\n          day: event.day,\n          value: 1\n        });\n        break;\n\n      case 0:\n        noAct.push({\n          day: event.day,\n          value: 1\n        });\n        break;\n\n      default:\n    }\n  });\n  return [allAct, pianoAct, gymAct, noAct];\n} // 3=all, 2=piano, 1=gym, 0=none\n\n\nfunction getNumActivity(event) {\n  if (event.activity.length === 2) {\n    return 3;\n  } else if (event.activity.length === 1) {\n    if (event.activity[0].name === \"gym\") {\n      return 1;\n    } else {\n      return 2;\n    }\n  } else {\n    return 0;\n  }\n} // get avg per month\n\n\nfunction getEventsDetail(eventName) {\n  // format \n  // data = [{\n  //      name: name of event \n  //      events: [{\n  //                  monthName: \n  //                   days: [{\n  //                          date: date object for the corresponding month \n  //                          }]\n  //              }]\n  // }]\n  var eventDetailsArr = [{\n    name: eventName,\n    events: []\n  }];\n  data.forEach(d => {\n    console.log();\n\n    if (d.activity.name === eventName) {\n      if (!monthExists(d.date.getMonth())) {\n        eventDetailsArr.events.push({\n          monthName: d.date.getMonth(),\n          days: [{\n            date: d.date\n          }]\n        });\n      } else {\n        var index = eventDetailsArr.events.indexOf(d.date.getMonth());\n        eventDetailsArr.events[index].days.push({\n          date: d.date\n        });\n      }\n    }\n  });\n  console.log(eventDetailsArr);\n  return eventDetailsArr;\n}\n\nfunction monthExists(data, month) {\n  var exists = false;\n  data.events.forEach(event => {\n    if (event.monthName === month) {\n      return true;\n    }\n  });\n  return exists;\n}\n\nexport default {\n  getAllActivity,\n  getEventsDetail\n};","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/DashBoard/dashFunctions.js"],"names":["data","getAllActivity","allAct","pianoAct","gymAct","noAct","forEach","event","push","day","value","getNumActivity","activity","length","name","getEventsDetail","eventName","eventDetailsArr","events","d","console","log","monthExists","date","getMonth","monthName","days","index","indexOf","month","exists"],"mappings":"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","sourcesContent":["// generate random events for the calendar \nimport data from '../../assets/data/dashEvents.json';\n\n// sorts the json file and returns an array that is used to populate the progress calendar \n// where the indexs are 0=all activities, 1=piano, 2=gym, 3=none\n// return all the activties and their values \nfunction getAllActivity() {\n    var allAct = [];\n    var pianoAct = [];\n    var gymAct = [];\n    var noAct = [];\n    data.forEach(event => {\n        // 4 cases\n        // case 1: array of all events\n        allAct.push({\n            day: event.day,\n            value: getNumActivity(event)\n        })\n        //case 2: array of only a single activity\n        switch (getNumActivity(event)) {\n            case 3: pianoAct.push({\n                day: event.day,\n                value: 1\n            })\n                gymAct.push({\n                    day: event.day,\n                    value: 1\n                })\n                break;\n            case 2: pianoAct.push({\n                day: event.day,\n                value: 1\n            })\n                break;\n            case 1: gymAct.push({\n                day: event.day,\n                value: 1\n            })\n                break;\n            case 0: noAct.push({\n                day: event.day,\n                value: 1\n            })\n                break;\n            default:\n        }\n    })\n    return [allAct, pianoAct, gymAct, noAct];\n}\n\n// 3=all, 2=piano, 1=gym, 0=none\nfunction getNumActivity(event) {\n    if (event.activity.length === 2) {\n        return 3;\n    } else if (event.activity.length === 1) {\n        if (event.activity[0].name === \"gym\") {\n            return 1\n        } else {\n            return 2;\n        }\n    } else {\n        return 0;\n    }\n}\n\n// get avg per month\nfunction getEventsDetail(eventName) {\n    // format \n    // data = [{\n    //      name: name of event \n    //      events: [{\n    //                  monthName: \n    //                   days: [{\n    //                          date: date object for the corresponding month \n    //                          }]\n    //              }]\n    // }]\n    var eventDetailsArr = [{\n        name: eventName,\n        events: []\n    }];\n    data.forEach(d => {\n        console.log()\n        if (d.activity.name === eventName) {\n            if (!monthExists(d.date.getMonth())) {\n                eventDetailsArr.events.push(\n                    {\n                        monthName: d.date.getMonth(),\n                        days: [{\n                            date: d.date\n                        }]\n                    }\n                )\n            } else {\n                var index = eventDetailsArr.events.indexOf(d.date.getMonth())\n                eventDetailsArr.events[index].days.push({\n                    date: d.date\n                })\n            }\n        }\n    })\n    console.log(eventDetailsArr)\n    return eventDetailsArr;\n}\n\nfunction monthExists(data, month) {\n    var exists = false;\n    data.events.forEach(event => {\n        if (event.monthName === month) {\n            return true;\n        }\n    })\n    return exists;\n}\n\nexport default {\n    getAllActivity,\n    getEventsDetail\n}"]},"metadata":{},"sourceType":"module"}