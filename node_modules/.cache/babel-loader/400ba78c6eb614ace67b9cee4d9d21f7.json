{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymContainer.js\";\nimport React from 'react';\nimport { useRef, useLayoutEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MaterialTable from 'material-table';\nimport styles from '../../assets/styles/views/gym/gymcontainerStyle.js';\nimport { icons } from '../../assets/styles/masterStyle.js';\nimport GymGraph from './GymGraph.js'; // data\n\nimport workoutData from '../../assets/data/gymData.json';\nconst useStyles = makeStyles(styles);\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nexport default function GymContainer(props) {\n  const classes = useStyles();\n  const targetRef = useRef(); // states \n\n  const [state, setState] = React.useState({\n    width: 0,\n    height: 0,\n    dataColumn: [{\n      title: 'Date',\n      field: 'date',\n      type: 'date'\n    }, {\n      title: 'Workout',\n      field: 'workout'\n    }, {\n      title: 'Muscle Group',\n      field: 'group'\n    }, {\n      title: 'Movement',\n      field: 'movement'\n    }, {\n      title: 'Reps',\n      field: 'rep'\n    }, {\n      title: 'Weight',\n      field: 'weight',\n      type: 'numeric'\n    }]\n  });\n\n  const handleChange = (event, newValue) => {\n    props.handleChange(newValue);\n  };\n\n  useLayoutEffect(() => {\n    if (targetRef.current) {\n      setState({ ...state,\n        width: targetRef.current.offsetWidth,\n        height: targetRef.current.offsetHeight\n      });\n    }\n  }, []); // Functions \n\n  const titleCase = str => {\n    var splitStr = str.toLowerCase().split(' ');\n\n    for (var i = 0; i < splitStr.length; i++) {\n      splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n\n    return splitStr.join(' ');\n  };\n\n  const getManageData = () => {\n    var temp = [];\n    workoutData.map(workout => {\n      workout.data.map(prop => {\n        temp.push({\n          date: prop.date,\n          workout: titleCase(workout.workout.name),\n          group: titleCase(workout.workout.musclegroup),\n          movement: titleCase(workout.workout.movement),\n          rep: prop.rep,\n          weight: prop.weight\n        });\n      });\n    });\n    return temp;\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: props.fullView ? classes.paper : classes.paperHidden,\n    ref: targetRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: props.value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n    className: classes.tab,\n    label: \"Statistics\"\n  }, a11yProps(0), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    className: classes.tab,\n    label: \"Manage Data\"\n  }, a11yProps(1), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    className: classes.tab,\n    label: \"Manage Workouts\"\n  }, a11yProps(2), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    className: classes.tab,\n    label: \"Manage Routines\"\n  }, a11yProps(3), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(TabPanel, {\n    className: classes.tabpanel,\n    value: props.value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GymGraph, {\n    data: props.selectedData,\n    start: props.start,\n    end: props.end,\n    theme: props.theme,\n    width: state.width,\n    height: state.height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: props.value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    className: classes.manageDataTable,\n    columns: state.dataColumn,\n    data: getManageData(),\n    options: {\n      grouping: true,\n      showTitle: false,\n      pageSize: 8\n    },\n    icons: icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: props.value,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    className: classes.manageDataTable,\n    columns: [{\n      title: 'Date',\n      field: 'date',\n      type: 'date'\n    }, {\n      title: 'Workout',\n      field: 'workout'\n    }, {\n      title: 'Muscle Group',\n      field: 'group'\n    }, {\n      title: 'Movement',\n      field: 'movement'\n    }, {\n      title: 'Weight',\n      field: 'weight',\n      type: 'numeric'\n    }],\n    data: getManageData(),\n    options: {\n      grouping: true,\n      showTitle: false,\n      pageSize: 8\n    },\n    icons: icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: props.value,\n    index: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \"Item Three\"));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymContainer.js"],"names":["React","useRef","useLayoutEffect","PropTypes","Paper","makeStyles","Box","AppBar","Tabs","Tab","MaterialTable","styles","icons","GymGraph","workoutData","useStyles","TabPanel","props","children","value","index","other","height","propTypes","node","any","isRequired","a11yProps","id","GymContainer","classes","targetRef","state","setState","useState","width","dataColumn","title","field","type","handleChange","event","newValue","current","offsetWidth","offsetHeight","titleCase","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","getManageData","temp","map","workout","data","prop","push","date","name","group","musclegroup","movement","rep","weight","fullView","paper","paperHidden","tab","tabpanel","selectedData","start","end","theme","manageDataTable","grouping","showTitle","pageSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,OAAOC,MAAP,MAAmB,oDAAnB;AAEA,SAASC,KAAT,QAAsB,oCAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AAGA,MAAMC,SAAS,GAAGV,UAAU,CAACM,MAAD,CAA5B;;AAEA,SAASK,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0B,OAAGC;AAA7B,MAAuCJ,KAA7C;AACA,sBACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,MAAM,EAAEE,KAAK,KAAKC,KAFtB;AAGI,IAAA,EAAE,EAAG,4BAA2BA,KAAM,EAH1C;AAII,uBAAkB,uBAAsBA,KAAM;AAJlD,KAKQC,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOKF,KAAK,KAAKC,KAAV,iBACG,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,QADL,CARR,CADJ;AAeH;;AAEDF,QAAQ,CAACO,SAAT,GAAqB;AACjBL,EAAAA,QAAQ,EAAEf,SAAS,CAACqB,IADH;AAEjBJ,EAAAA,KAAK,EAAEjB,SAAS,CAACsB,GAAV,CAAcC,UAFJ;AAGjBP,EAAAA,KAAK,EAAEhB,SAAS,CAACsB,GAAV,CAAcC;AAHJ,CAArB;;AAMA,SAASC,SAAT,CAAmBP,KAAnB,EAA0B;AACtB,SAAO;AACHQ,IAAAA,EAAE,EAAG,uBAAsBR,KAAM,EAD9B;AAEH,qBAAkB,4BAA2BA,KAAM;AAFhD,GAAP;AAIH;;AAED,eAAe,SAASS,YAAT,CAAsBZ,KAAtB,EAA6B;AACxC,QAAMa,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAMgB,SAAS,GAAG9B,MAAM,EAAxB,CAFwC,CAIxC;;AACA,QAAM,CAAC+B,KAAD,EAAQC,QAAR,IAAoBjC,KAAK,CAACkC,QAAN,CAAe;AACrCC,IAAAA,KAAK,EAAE,CAD8B;AAC3Bb,IAAAA,MAAM,EAAE,CADmB;AAErCc,IAAAA,UAAU,EAAE,CACJ;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE,MAAxB;AAAgCC,MAAAA,IAAI,EAAE;AAAtC,KADI,EAEJ;AAAEF,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAFI,EAGJ;AAAED,MAAAA,KAAK,EAAE,cAAT;AAAyBC,MAAAA,KAAK,EAAE;AAAhC,KAHI,EAIJ;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAJI,EAKJ;AAAED,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KALI,EAMJ;AAAED,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,KAAK,EAAE,QAA1B;AAAoCC,MAAAA,IAAI,EAAE;AAA1C,KANI;AAFyB,GAAf,CAA1B;;AAWA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtCzB,IAAAA,KAAK,CAACuB,YAAN,CAAmBE,QAAnB;AACH,GAFD;;AAIAxC,EAAAA,eAAe,CAAC,MAAM;AAClB,QAAI6B,SAAS,CAACY,OAAd,EAAuB;AACnBV,MAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELG,QAAAA,KAAK,EAAEJ,SAAS,CAACY,OAAV,CAAkBC,WAFpB;AAGLtB,QAAAA,MAAM,EAAES,SAAS,CAACY,OAAV,CAAkBE;AAHrB,OAAD,CAAR;AAKH;AACJ,GARc,EAQZ,EARY,CAAf,CApBwC,CA8BxC;;AACA,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACvB,QAAIC,QAAQ,GAAGD,GAAG,CAACE,WAAJ,GAAkBC,KAAlB,CAAwB,GAAxB,CAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCH,MAAAA,QAAQ,CAACG,CAAD,CAAR,GAAcH,QAAQ,CAACG,CAAD,CAAR,CAAYE,MAAZ,CAAmB,CAAnB,EAAsBC,WAAtB,KAAsCN,QAAQ,CAACG,CAAD,CAAR,CAAYI,SAAZ,CAAsB,CAAtB,CAApD;AACH;;AACD,WAAOP,QAAQ,CAACQ,IAAT,CAAc,GAAd,CAAP;AACH,GAND;;AASA,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAIC,IAAI,GAAG,EAAX;AACA5C,IAAAA,WAAW,CAAC6C,GAAZ,CAAgBC,OAAO,IAAI;AACvBA,MAAAA,OAAO,CAACC,IAAR,CAAaF,GAAb,CAAiBG,IAAI,IAAI;AACrBJ,QAAAA,IAAI,CAACK,IAAL,CAAU;AACNC,UAAAA,IAAI,EAAEF,IAAI,CAACE,IADL;AAENJ,UAAAA,OAAO,EAAEd,SAAS,CAACc,OAAO,CAACA,OAAR,CAAgBK,IAAjB,CAFZ;AAGNC,UAAAA,KAAK,EAAEpB,SAAS,CAACc,OAAO,CAACA,OAAR,CAAgBO,WAAjB,CAHV;AAINC,UAAAA,QAAQ,EAAEtB,SAAS,CAACc,OAAO,CAACA,OAAR,CAAgBQ,QAAjB,CAJb;AAKNC,UAAAA,GAAG,EAAEP,IAAI,CAACO,GALJ;AAMNC,UAAAA,MAAM,EAAER,IAAI,CAACQ;AANP,SAAV;AAQH,OATD;AAUH,KAXD;AAYA,WAAOZ,IAAP;AACH,GAfD;;AAiBA,sBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,SAAS,EAAEzC,KAAK,CAACsD,QAAN,GAAiBzC,OAAO,CAAC0C,KAAzB,GAAiC1C,OAAO,CAAC2C,WAAzE;AAAsF,IAAA,GAAG,EAAE1C,SAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,KAAK,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEd,KAAK,CAACE,KADjB;AAEI,IAAA,QAAQ,EAAEqB,YAFd;AAGI,IAAA,cAAc,EAAC,SAHnB;AAII,IAAA,SAAS,EAAC,SAJd;AAKI,IAAA,OAAO,EAAC,YALZ;AAMI,IAAA,aAAa,EAAC,MANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC4C,GAAxB;AAA6B,IAAA,KAAK,EAAC;AAAnC,KAAoD/C,SAAS,CAAC,CAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARJ,eASI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEG,OAAO,CAAC4C,GAAxB;AAA6B,IAAA,KAAK,EAAC;AAAnC,KAAqD/C,SAAS,CAAC,CAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATJ,eAUI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEG,OAAO,CAAC4C,GAAxB;AAA6B,IAAA,KAAK,EAAC;AAAnC,KAAyD/C,SAAS,CAAC,CAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVJ,eAWI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEG,OAAO,CAAC4C,GAAxB;AAA6B,IAAA,KAAK,EAAC;AAAnC,KAAyD/C,SAAS,CAAC,CAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXJ,CADJ,CADJ,eAgBI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEG,OAAO,CAAC6C,QAA7B;AAAuC,IAAA,KAAK,EAAE1D,KAAK,CAACE,KAApD;AAA2D,IAAA,KAAK,EAAE,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEF,KAAK,CAAC2D,YADhB;AAEI,IAAA,KAAK,EAAE3D,KAAK,CAAC4D,KAFjB;AAGI,IAAA,GAAG,EAAE5D,KAAK,CAAC6D,GAHf;AAII,IAAA,KAAK,EAAE7D,KAAK,CAAC8D,KAJjB;AAKI,IAAA,KAAK,EAAE/C,KAAK,CAACG,KALjB;AAMI,IAAA,MAAM,EAAEH,KAAK,CAACV,MANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAhBJ,eA0BI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAK,CAACE,KAAvB;AAA8B,IAAA,KAAK,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AACI,IAAA,SAAS,EAAEW,OAAO,CAACkD,eADvB;AAEI,IAAA,OAAO,EAAEhD,KAAK,CAACI,UAFnB;AAGI,IAAA,IAAI,EAAEqB,aAAa,EAHvB;AAII,IAAA,OAAO,EAAE;AACLwB,MAAAA,QAAQ,EAAE,IADL;AAELC,MAAAA,SAAS,EAAE,KAFN;AAGLC,MAAAA,QAAQ,EAAE;AAHL,KAJb;AASI,IAAA,KAAK,EAAEvE,KATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA1BJ,eAuCI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEK,KAAK,CAACE,KAAvB;AAA8B,IAAA,KAAK,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,aAAD;AACQ,IAAA,SAAS,EAAEW,OAAO,CAACkD,eAD3B;AAEQ,IAAA,OAAO,EAAE,CACL;AAAE3C,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE,MAAxB;AAAgCC,MAAAA,IAAI,EAAE;AAAtC,KADK,EAEL;AAAEF,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAFK,EAGL;AAAED,MAAAA,KAAK,EAAE,cAAT;AAAyBC,MAAAA,KAAK,EAAE;AAAhC,KAHK,EAIL;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAJK,EAKL;AAAED,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,KAAK,EAAE,QAA1B;AAAoCC,MAAAA,IAAI,EAAE;AAA1C,KALK,CAFjB;AASQ,IAAA,IAAI,EAAEkB,aAAa,EAT3B;AAUQ,IAAA,OAAO,EAAE;AACLwB,MAAAA,QAAQ,EAAE,IADL;AAELC,MAAAA,SAAS,EAAE,KAFN;AAGLC,MAAAA,QAAQ,EAAE;AAHL,KAVjB;AAeQ,IAAA,KAAK,EAAEvE,KAff;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAvCJ,eA0DI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEK,KAAK,CAACE,KAAvB;AAA8B,IAAA,KAAK,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1DJ,CADJ;AAgEH","sourcesContent":["import React from 'react'\nimport { useRef, useLayoutEffect } from 'react'\nimport PropTypes from 'prop-types';\n\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MaterialTable from 'material-table';\n\nimport styles from '../../assets/styles/views/gym/gymcontainerStyle.js';\n\nimport { icons } from '../../assets/styles/masterStyle.js';\nimport GymGraph from './GymGraph.js';\n\n// data\nimport workoutData from '../../assets/data/gymData.json';\n\n\nconst useStyles = makeStyles(styles);\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box style={{ height: \"100%\" }}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nexport default function GymContainer(props) {\n    const classes = useStyles();\n    const targetRef = useRef();\n\n    // states \n    const [state, setState] = React.useState({ \n        width: 0, height: 0, \n        dataColumn: [\n                { title: 'Date', field: 'date', type: 'date' },\n                { title: 'Workout', field: 'workout' },\n                { title: 'Muscle Group', field: 'group' },\n                { title: 'Movement', field: 'movement' },\n                { title: 'Reps', field: 'rep' },\n                { title: 'Weight', field: 'weight', type: 'numeric' }]\n        \n    })\n    const handleChange = (event, newValue) => {\n        props.handleChange(newValue);\n    };\n\n    useLayoutEffect(() => {\n        if (targetRef.current) {\n            setState({\n                ...state,\n                width: targetRef.current.offsetWidth,\n                height: targetRef.current.offsetHeight\n            });\n        }\n    }, []);\n\n    // Functions \n    const titleCase = (str) => {\n        var splitStr = str.toLowerCase().split(' ');\n        for (var i = 0; i < splitStr.length; i++) {\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n        }\n        return splitStr.join(' ');\n    };\n\n\n    const getManageData = () => {\n        var temp = [];\n        workoutData.map(workout => {\n            workout.data.map(prop => {\n                temp.push({\n                    date: prop.date,\n                    workout: titleCase(workout.workout.name),\n                    group: titleCase(workout.workout.musclegroup),\n                    movement: titleCase(workout.workout.movement),\n                    rep: prop.rep,\n                    weight: prop.weight\n                })\n            })\n        })\n        return temp;\n    }\n\n    return (\n        <Paper elevation={3} className={props.fullView ? classes.paper : classes.paperHidden} ref={targetRef}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={props.value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    <Tab className={classes.tab} label=\"Statistics\" {...a11yProps(0)} />\n                    <Tab className={classes.tab} label=\"Manage Data\" {...a11yProps(1)} />\n                    <Tab className={classes.tab} label=\"Manage Workouts\" {...a11yProps(2)} />\n                    <Tab className={classes.tab} label=\"Manage Routines\" {...a11yProps(3)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel className={classes.tabpanel} value={props.value} index={0} >\n                <GymGraph\n                    data={props.selectedData}\n                    start={props.start}\n                    end={props.end}\n                    theme={props.theme}\n                    width={state.width}\n                    height={state.height}\n                />\n            </TabPanel>\n            <TabPanel value={props.value} index={1} >\n                <MaterialTable\n                    className={classes.manageDataTable}\n                    columns={state.dataColumn}\n                    data={getManageData()}\n                    options={{\n                        grouping: true,\n                        showTitle: false,\n                        pageSize: 8\n                    }}\n                    icons={icons}\n                />\n            </TabPanel>\n            <TabPanel value={props.value} index={2}>\n            <MaterialTable\n                    className={classes.manageDataTable}\n                    columns={[\n                        { title: 'Date', field: 'date', type: 'date' },\n                        { title: 'Workout', field: 'workout' },\n                        { title: 'Muscle Group', field: 'group' },\n                        { title: 'Movement', field: 'movement' },\n                        { title: 'Weight', field: 'weight', type: 'numeric' },\n                    ]}\n                    data={getManageData()}\n                    options={{\n                        grouping: true,\n                        showTitle: false,\n                        pageSize: 8\n                    }}\n                    icons={icons}\n                />\n            </TabPanel>\n            <TabPanel value={props.value} index={3}>\n                Item Three\n            </TabPanel>\n        </Paper>\n    );\n}"]},"metadata":{},"sourceType":"module"}