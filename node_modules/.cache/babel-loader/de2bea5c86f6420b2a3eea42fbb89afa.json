{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/DashBoard/DashContainer.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // import material ui cores\n\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia'; // import material ui icons \n\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\nimport MaterialTable from 'material-table';\nimport workoutRoutine from '../../assets/data/workoutRoutine.json';\nimport CountDownTimer from '../../components/CountDownTimer.js';\nimport styles from '../../assets/styles/views/dashboard/dashcontainerStyle.js';\nimport { icons } from '../../assets/styles/masterStyle.js';\nconst useStyle = makeStyles(styles);\nexport default function DashContainer(props) {\n  // variables\n  const theme = useTheme(styles);\n  const targetRef = React.useRef(); // styles \n\n  const classes = useStyle();\n  const matches = useMediaQuery(theme.breakpoints.up('sm')); // states \n\n  const [state, setState] = React.useState({\n    currentRow: {},\n    selected: true,\n    selectedRowId: 0,\n    pianoCurrentRow: {},\n    pianoSelected: false,\n    pianoSelectedRowId: null,\n    cardIndex: null\n  });\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel, index) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n    props.handleIndexChange(index);\n  };\n\n  const handleCardClick = index => {\n    if (index === state.cardIndex) {\n      setState({ ...state,\n        cardIndex: null\n      });\n    } else {\n      setState({ ...state,\n        cardIndex: index\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.checkedSwitch && expanded !== 'panel1') {\n      setExpanded('panel1');\n    } else if (!props.checkedSwitch & expanded !== false) {\n      setExpanded(false);\n      props.handleIndexChange(0);\n    }\n  }, [props.checkedSwitch]); // functions \n\n  const titleCase = str => {\n    var splitStr = str.toLowerCase().split(' ');\n\n    for (var i = 0; i < splitStr.length; i++) {\n      splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n\n    return splitStr.join(' ');\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Music\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: state.cardIndex === 0 ? 12 : 4,\n    style: {\n      display: state.cardIndex !== 0 && state.cardIndex !== null ? \"none\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    onClick: () => handleCardClick(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, \" Music Library \"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, \" Piano Sheet Library \"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, \" Piano Music Library \"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\")))))) // <div className={classes.container}>\n  //     <div className={classes.toggleText}>\n  //         <Typography color=\"textPrimary\" className={classes.typo} variant=\"h5\">Gym</Typography>\n  //         <FormGroup row>\n  //             <FormControlLabel\n  //                 className={classes.typo}\n  //                 control={<Switch color=\"primary\" checked={props.state.checkedSwitch} onChange={props.handleSwitchChange} name=\"checkedSwitch\" />}\n  //                 label={<Typography className={classes.switchTypo} variant=\"h4\">In the gym</Typography>}\n  //             />\n  //         </FormGroup>\n  //     </div>\n  //     {props.state.checkedSwitch && !matches ? <CountDownTimer /> : null}\n  //     <Accordion\n  //         expanded={expanded === 'panel1'}\n  //         onChange={handleChange('panel1', 1)}\n  //         className={classes.accordion}>\n  //         <AccordionSummary\n  //             className={classes.accordionSummary}\n  //             expandIcon={<ExpandMoreIcon />}\n  //             aria-controls=\"panel1c-content\"\n  //             id=\"panel1c-header\"\n  //         >\n  //             <div className={classes.column}>\n  //                 <ScheduleIcon className={classes.icon} />\n  //                 <Typography className={classes.heading}>Next Workout</Typography>\n  //             </div>\n  //             <div className={classes.column}>\n  //                 <Typography className={classes.secondaryHeading}>Muscle Group : {workoutRoutine[0].routineName}</Typography>\n  //             </div>\n  //         </AccordionSummary>\n  //         <AccordionDetails className={classes.details}>\n  //             <MaterialTable\n  //                 style={{ width: \"100%\" }}\n  //                 columns={[\n  //                     { title: 'Exercise', field: 'exercise', },\n  //                     { title: 'Sets', field: 'sets' },\n  //                     { title: 'Reps', field: 'reps' },\n  //                     { title: 'Rest', field: 'rest' },\n  //                 ]}\n  //                 data={\n  //                     (workoutRoutine[0].workouts.map((routine, index) => {\n  //                         return {\n  //                             exercise: titleCase(routine.workout.name),\n  //                             sets: titleCase(routine.sets),\n  //                             reps: titleCase(routine.reps),\n  //                             rest: titleCase(routine.rest)\n  //                         };\n  //                     }))\n  //                 }\n  //                 options={{\n  //                     showTitle: false,\n  //                     search: false,\n  //                     toolbar: false,\n  //                     rowStyle: rowData => ({\n  //                         backgroundColor:\n  //                             state.selected &&\n  //                                 rowData.tableData.id === state.selectedRowId ? props.theme.colors.primary : \"#fff\"\n  //                     })\n  //                 }}\n  //                 icons={icons}\n  //                 onRowClick={(event, rowData) => {\n  //                     setState({ ...state, currentRow: rowData });\n  //                     if (rowData.tableData.id === state.selectedRowId) {\n  //                         setState({ ...state, selected: false });\n  //                         setState({ ...state, selectedRowId: null });\n  //                     } else {\n  //                         setState({ ...state, selected: true });\n  //                         setState({ ...state, selectedRowId: rowData.tableData.id });\n  //                         props.handleCellChange(rowData.tableData.id + 1)\n  //                     }\n  //                 }}\n  //             />\n  //         </AccordionDetails>\n  //         <Divider />\n  //         <AccordionActions>\n  //             <Link\n  //                 to={\"/main-menu/gym-routine\"}\n  //                 style={{ textDecoration: 'none' }}\n  //             >\n  //                 <Button color=\"secondary\" size=\"large\">More Details</Button>\n  //             </Link>\n  //         </AccordionActions>\n  //     </Accordion>\n  // </div>\n  ;\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/DashBoard/DashContainer.js"],"names":["React","Link","makeStyles","withStyles","useTheme","Typography","Accordion","AccordionSummary","AccordionDetails","AccordionActions","Button","Divider","FormGroup","FormControlLabel","Switch","useMediaQuery","Grid","Card","CardActionArea","CardActions","CardContent","CardMedia","ScheduleIcon","ExpandMoreIcon","LibraryMusicIcon","MaterialTable","workoutRoutine","CountDownTimer","styles","icons","useStyle","DashContainer","props","theme","targetRef","useRef","classes","matches","breakpoints","up","state","setState","useState","currentRow","selected","selectedRowId","pianoCurrentRow","pianoSelected","pianoSelectedRowId","cardIndex","expanded","setExpanded","handleChange","panel","index","event","isExpanded","handleIndexChange","handleCardClick","useEffect","checkedSwitch","titleCase","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","typo","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// import material ui cores\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n// import material ui icons \nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\n\nimport MaterialTable from 'material-table';\n\nimport workoutRoutine from '../../assets/data/workoutRoutine.json';\n\nimport CountDownTimer from '../../components/CountDownTimer.js';\nimport styles from '../../assets/styles/views/dashboard/dashcontainerStyle.js';\n\nimport { icons } from '../../assets/styles/masterStyle.js';\n\nconst useStyle = makeStyles(styles);\n\nexport default function DashContainer(props) {\n    // variables\n    const theme = useTheme(styles);\n    const targetRef = React.useRef();\n    // styles \n    const classes = useStyle();\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n    // states \n    const [state, setState] = React.useState(\n        {\n            currentRow: {},\n            selected: true,\n            selectedRowId: 0,\n            pianoCurrentRow: {},\n            pianoSelected: false,\n            pianoSelectedRowId: null,\n            cardIndex: null\n        }\n    );\n    const [expanded, setExpanded] = React.useState(false);\n    const handleChange = (panel, index) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n        props.handleIndexChange(index);\n    }\n    const handleCardClick = (index) => {\n        if (index === state.cardIndex) {\n            setState({ ...state, cardIndex: null })\n        } else {\n            setState({ ...state, cardIndex: index })\n        }\n    }\n\n    React.useEffect(() => {\n        if (props.checkedSwitch && expanded !== 'panel1') {\n            setExpanded('panel1');\n        } else if (!props.checkedSwitch & expanded !== false) {\n            setExpanded(false)\n            props.handleIndexChange(0)\n        }\n    }, [props.checkedSwitch])\n\n    // functions \n    const titleCase = (str) => {\n        var splitStr = str.toLowerCase().split(' ');\n        for (var i = 0; i < splitStr.length; i++) {\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n        }\n        return splitStr.join(' ');\n    }\n\n    return (\n        <Grid\n            container\n            spacing={5}\n        >\n            <Typography className={classes.typo} variant=\"h5\">Music</Typography>\n            <Grid item xs={(state.cardIndex === 0) ? 12 : 4}\n                style={{ display: (state.cardIndex !== 0 && state.cardIndex !== null) ? \"none\" : \"\" }} >\n                    <Card>\n                        <CardActionArea onClick={() => handleCardClick(0)}>\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\"> Music Library </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                    Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                                    across all continents except Antarctica\n                            </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n            </Grid>\n            <Grid item xs={4}>\n                <Card>\n                    <CardActionArea>\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\"> Piano Sheet Library </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                                across all continents except Antarctica\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </Grid>\n            <Grid item xs={4}>\n                <Card>\n                    <CardActionArea>\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\"> Piano Music Library </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                                across all continents except Antarctica\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </Grid>\n\n\n\n\n            {/* <Accordion expanded={expanded === 'panel3'} onChange={handleChange('panel3', 3)} className={classes.accordion}>\n                <AccordionSummary\n                    className={classes.accordionSummary}\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1c-content\"\n                    id=\"panel1c-header\"\n                >\n                    <div className={classes.column}>\n                        <LibraryMusicIcon className={classes.icon} />\n                        <Typography className={classes.heading}>Piano Pieces</Typography>\n                    </div>\n                    <div className={classes.column}>\n                        <Typography className={classes.secondaryHeading}>In Progress</Typography>\n                    </div>\n                </AccordionSummary>\n                <AccordionDetails >\n                    <MaterialTable\n                        style={{ width: \"100%\" }}\n                        columns={[\n                            { title: 'Piece Name', field: 'name', },\n                            { title: 'Composer', field: 'composer' },\n                            { title: 'Date Added', field: 'date', type: 'numeric' },\n                        ]}\n                        data={[\n                            { name: 'Waltz in C Sharp Minor (Op. 64 No. 2)', composer: 'Chopin', url: 'https://www.youtube.com/embed/SUT_0c2QVzo' },\n                            { name: 'Howls Moving Castle', composer: 'Joe Hisaishi', url: 'https://www.youtube.com/embed/5u5oCjrIu60' },\n                            { name: 'Chopin - Nocturne in E Flat Major (Op. 9 No. 2)', composer: 'Chopin', url: 'https://www.youtube.com/embed/p29JUpsOSTE' },\n                            { name: 'Joe Hisaishi - One Summers Day', composer: 'Joe Hisaishi', url: 'https://www.youtube.com/embed/TK1Ij_-mank' },\n                            { name: 'Kioku', composer: 'Unknown', url: 'https://www.youtube.com/embed/nj93DxZdwUs' }\n                        ]}\n                        options={{\n                            showTitle: false,\n                            rowStyle: rowData => ({\n                                backgroundColor:\n                                    state.pianoSelected &&\n                                        rowData.tableData.id === state.pianoSelectedRowId ? props.theme.colors.primary : \"#fff\"\n                            })\n                        }}\n                        icons={icons}\n                        detailPanel={rowData => {\n                            return (\n                                <iframe\n                                    width=\"100%\"\n                                    height=\"400\"\n                                    src={rowData.url}\n                                    frameBorder=\"0\"\n                                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                                    allowFullScreen\n                                />\n                            )\n                        }}\n                        onRowClick={(event, rowData) => {\n                            setState({ ...state, pianoCurrentRow: rowData });\n                            if (rowData.tableData.id === state.selectedRowId) {\n                                setState({ ...state, pianoSelected: false });\n                                setState({ ...state, pianoSelectedRowId: null });\n\n                            } else {\n                                setState({ ...state, pianoSelected: true });\n                                setState({ ...state, pianoSelectedRowId: rowData.tableData.id });\n                            }\n                        }}\n                    />\n                </AccordionDetails>\n                <Divider />\n                <AccordionActions>\n                    <Button color=\"secondary\" size=\"large\">More Details</Button>\n                </AccordionActions>\n            </Accordion> */}\n\n        </Grid>\n\n        // <div className={classes.container}>\n        //     <div className={classes.toggleText}>\n        //         <Typography color=\"textPrimary\" className={classes.typo} variant=\"h5\">Gym</Typography>\n        //         <FormGroup row>\n        //             <FormControlLabel\n        //                 className={classes.typo}\n        //                 control={<Switch color=\"primary\" checked={props.state.checkedSwitch} onChange={props.handleSwitchChange} name=\"checkedSwitch\" />}\n        //                 label={<Typography className={classes.switchTypo} variant=\"h4\">In the gym</Typography>}\n        //             />\n        //         </FormGroup>\n        //     </div>\n        //     {props.state.checkedSwitch && !matches ? <CountDownTimer /> : null}\n        //     <Accordion\n        //         expanded={expanded === 'panel1'}\n        //         onChange={handleChange('panel1', 1)}\n        //         className={classes.accordion}>\n        //         <AccordionSummary\n        //             className={classes.accordionSummary}\n        //             expandIcon={<ExpandMoreIcon />}\n        //             aria-controls=\"panel1c-content\"\n        //             id=\"panel1c-header\"\n        //         >\n        //             <div className={classes.column}>\n        //                 <ScheduleIcon className={classes.icon} />\n        //                 <Typography className={classes.heading}>Next Workout</Typography>\n        //             </div>\n        //             <div className={classes.column}>\n        //                 <Typography className={classes.secondaryHeading}>Muscle Group : {workoutRoutine[0].routineName}</Typography>\n        //             </div>\n        //         </AccordionSummary>\n        //         <AccordionDetails className={classes.details}>\n        //             <MaterialTable\n        //                 style={{ width: \"100%\" }}\n        //                 columns={[\n        //                     { title: 'Exercise', field: 'exercise', },\n        //                     { title: 'Sets', field: 'sets' },\n        //                     { title: 'Reps', field: 'reps' },\n        //                     { title: 'Rest', field: 'rest' },\n        //                 ]}\n        //                 data={\n        //                     (workoutRoutine[0].workouts.map((routine, index) => {\n        //                         return {\n        //                             exercise: titleCase(routine.workout.name),\n        //                             sets: titleCase(routine.sets),\n        //                             reps: titleCase(routine.reps),\n        //                             rest: titleCase(routine.rest)\n        //                         };\n        //                     }))\n        //                 }\n        //                 options={{\n        //                     showTitle: false,\n        //                     search: false,\n        //                     toolbar: false,\n        //                     rowStyle: rowData => ({\n        //                         backgroundColor:\n        //                             state.selected &&\n        //                                 rowData.tableData.id === state.selectedRowId ? props.theme.colors.primary : \"#fff\"\n        //                     })\n        //                 }}\n        //                 icons={icons}\n        //                 onRowClick={(event, rowData) => {\n        //                     setState({ ...state, currentRow: rowData });\n        //                     if (rowData.tableData.id === state.selectedRowId) {\n        //                         setState({ ...state, selected: false });\n        //                         setState({ ...state, selectedRowId: null });\n        //                     } else {\n        //                         setState({ ...state, selected: true });\n        //                         setState({ ...state, selectedRowId: rowData.tableData.id });\n        //                         props.handleCellChange(rowData.tableData.id + 1)\n        //                     }\n        //                 }}\n        //             />\n        //         </AccordionDetails>\n        //         <Divider />\n        //         <AccordionActions>\n        //             <Link\n        //                 to={\"/main-menu/gym-routine\"}\n        //                 style={{ textDecoration: 'none' }}\n        //             >\n        //                 <Button color=\"secondary\" size=\"large\">More Details</Button>\n        //             </Link>\n        //         </AccordionActions>\n        //     </Accordion>\n\n        // </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}