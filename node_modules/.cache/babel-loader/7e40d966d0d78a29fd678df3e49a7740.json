{"ast":null,"code":"import _defineProperty from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment}from'react';// import material ui cores \nimport{makeStyles,useTheme}from'@material-ui/core/styles';import useMediaQuery from'@material-ui/core/useMediaQuery';import Grid from'@material-ui/core/Grid';import styles from'../../assets/styles/views/dashboard/dashboardStyle.js';import DashContainer from'./DashContainer.js';import DashGraph from'./DashGraph.js';// import function used to generate the arrays for the calendar\nimport gymData from'../../assets/data/gymData.json';import workRoutine from'../../assets/data/workoutRoutine.json';import CountDownTimer from'../../components/CountDownTimer.js';import InputForm from'./GymInputForm.js';var useStyles=makeStyles(styles);export default function DashBoardView(props){var classes=useStyles();var theme=useTheme(styles);var matches=useMediaQuery(theme.breakpoints.up('sm'));// set states\n// need to have a json file that keeps tracks of current workout day probably a user setting file\nvar _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),activeAccordIndex=_React$useState2[0],setActiveAccordIndex=_React$useState2[1];var _React$useState3=React.useState(1),_React$useState4=_slicedToArray(_React$useState3,2),selectedCell=_React$useState4[0],setSelectedCell=_React$useState4[1];var _React$useState5=React.useState({checkedSwitch:false,currGymData:gymData[0],currWorkout:workRoutine[0].workouts[0],routine:workRoutine[0]}),_React$useState6=_slicedToArray(_React$useState5,2),state=_React$useState6[0],setState=_React$useState6[1];var _handleSwitchChange=function handleSwitchChange(event){setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},event.target.name,event.target.checked)));};var _handleCellChange=function handleCellChange(cell){setSelectedCell(cell);};var _handleIndexChange=function handleIndexChange(index){if(activeAccordIndex===index){setActiveAccordIndex(0);}else{setActiveAccordIndex(index);}};React.useEffect(function(){var gymdata=state.currGymData;gymData.map(function(data){if(data.workout.name===state.routine.workouts[selectedCell-1].workout.name){gymdata=data;}});setState(_objectSpread(_objectSpread({},state),{},{currGymData:gymdata,currWorkout:state.routine.workouts[selectedCell-1]}));},[selectedCell]);return/*#__PURE__*/React.createElement(Grid,{container:true,className:classes.container},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,style:{padding:\"20px\"}},/*#__PURE__*/React.createElement(DashContainer,Object.assign({theme:props.theme,handleIndexChange:function handleIndexChange(index){return _handleIndexChange(index);},handleSwitchChange:function handleSwitchChange(event){return _handleSwitchChange(event);},state:state,selectedCell:selectedCell,handleCellChange:function handleCellChange(cell){return _handleCellChange(cell);},checkedSwitch:state.checkedSwitch},props))));}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/src/views/DashBoard/DashBoardView.js"],"names":["React","Fragment","makeStyles","useTheme","useMediaQuery","Grid","styles","DashContainer","DashGraph","gymData","workRoutine","CountDownTimer","InputForm","useStyles","DashBoardView","props","classes","theme","matches","breakpoints","up","useState","activeAccordIndex","setActiveAccordIndex","selectedCell","setSelectedCell","checkedSwitch","currGymData","currWorkout","workouts","routine","state","setState","handleSwitchChange","event","target","name","checked","handleCellChange","cell","handleIndexChange","index","useEffect","gymdata","map","data","workout","container","padding"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\n\n// import material ui cores \nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\n\nimport styles from '../../assets/styles/views/dashboard/dashboardStyle.js';\nimport DashContainer from './DashContainer.js';\nimport DashGraph from './DashGraph.js';\n\n// import function used to generate the arrays for the calendar\nimport gymData from '../../assets/data/gymData.json';\nimport workRoutine from '../../assets/data/workoutRoutine.json';\nimport CountDownTimer from '../../components/CountDownTimer.js';\nimport InputForm from './GymInputForm.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function DashBoardView(props) {\n    const classes = useStyles();\n    const theme = useTheme(styles);\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n\n    // set states\n    // need to have a json file that keeps tracks of current workout day probably a user setting file\n    const [activeAccordIndex, setActiveAccordIndex] = React.useState(0);\n    const [selectedCell, setSelectedCell] = React.useState(1);\n    const [state, setState] = React.useState(\n        {\n            checkedSwitch: false,\n            currGymData: gymData[0],\n            currWorkout: workRoutine[0].workouts[0],\n            routine: workRoutine[0]\n        });\n\n    const handleSwitchChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n    const handleCellChange = (cell) => {\n        setSelectedCell(cell);\n    }\n\n    const handleIndexChange = (index) => {\n        if (activeAccordIndex === index) {\n            setActiveAccordIndex(0);\n        } else {\n            setActiveAccordIndex(index);\n        }\n    }\n    React.useEffect(() => {\n        var gymdata = state.currGymData;\n        gymData.map((data) => {\n            if (data.workout.name === state.routine.workouts[selectedCell - 1].workout.name) {\n                gymdata = data;\n            }\n        })\n        setState({ ...state, currGymData: gymdata, currWorkout: state.routine.workouts[selectedCell - 1] });\n    }, [selectedCell])\n\n\n    return (\n        <Grid\n            container\n            className={classes.container}\n        >\n            <Grid item xs={12} style={{ padding: \"20px\" }}>\n                <DashContainer\n                    theme={props.theme}\n                    handleIndexChange={(index) => handleIndexChange(index)}\n                    handleSwitchChange={(event) => handleSwitchChange(event)}\n                    state={state}\n                    selectedCell={selectedCell}\n                    handleCellChange={(cell) => handleCellChange(cell)}\n                    checkedSwitch={state.checkedSwitch}\n                    {...props}\n                />\n            </Grid>\n        </Grid>\n    );\n}"]},"metadata":{},"sourceType":"module"}