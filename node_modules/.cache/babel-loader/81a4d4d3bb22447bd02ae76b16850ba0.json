{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/DashBoard/DashBoardView.js\";\nimport React, { Fragment } from 'react'; // import material ui cores \n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport styles from '../../assets/styles/views/dashboard/dashboardStyle.js';\nimport DashContainer from './DashContainer.js';\nimport DashGraph from './DashGraph.js'; // import function used to generate the arrays for the calendar\n\nimport gymData from '../../assets/data/gymData.json';\nimport workRoutine from '../../assets/data/workoutRoutine.json';\nimport CountDownTimer from '../../components/CountDownTimer.js';\nimport InputForm from './GymInputForm.js';\nconst useStyles = makeStyles(styles);\nexport default function DashBoardView(props) {\n  const classes = useStyles();\n  const theme = useTheme(styles);\n  const matches = useMediaQuery(theme.breakpoints.up('sm')); // set states\n  // need to have a json file that keeps tracks of current workout day probably a user setting file\n\n  const [currWorkout, setWorkout] = React.useState(workRoutine[0].workouts[0]);\n  const [activeAccordIndex, setActiveAccordIndex] = React.useState(0);\n  const [currGymData, setGymData] = React.useState(gymData[0]);\n  const [selectedCell, setSelectedCell] = React.useState(1);\n  const [state, setState] = React.useState({\n    checkedSwitch: false\n  });\n\n  const handleSwitchChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const handleCellChange = cell => {\n    setSelectedCell(cell);\n  };\n\n  const handleIndexChange = index => {\n    if (activeAccordIndex === index) {\n      setActiveAccordIndex(0);\n    } else {\n      setActiveAccordIndex(index);\n    }\n  };\n\n  React.useEffect(() => {\n    var gymdata = currGymData;\n    gymData.map(data => {\n      if (data.workout.name === workRoutine[0].workouts[selectedCell - 1].workout.name) {\n        gymdata = data;\n      }\n    });\n    setWorkout(workRoutine[0].workouts[selectedCell - 1]);\n    setGymData(gymdata);\n  }, [selectedCell]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: (\"section\", classes.section),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: (\"square\", classes.square),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DashContainer, {\n    theme: props.theme,\n    handleIndexChange: index => handleIndexChange(index),\n    handleSwitchChange: event => handleSwitchChange(event),\n    state: state,\n    selectedCell: selectedCell,\n    handleCellChange: cell => handleCellChange(cell),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tall-rect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, activeAccordIndex === 1 && !state.checkedSwitch && matches && /*#__PURE__*/React.createElement(DashGraph, {\n    gymData: currGymData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }), state.checkedSwitch && matches && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CountDownTimer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(InputForm, {\n    workout: currWorkout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wide-rect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/DashBoard/DashBoardView.js"],"names":["React","Fragment","makeStyles","useTheme","useMediaQuery","styles","DashContainer","DashGraph","gymData","workRoutine","CountDownTimer","InputForm","useStyles","DashBoardView","props","classes","theme","matches","breakpoints","up","currWorkout","setWorkout","useState","workouts","activeAccordIndex","setActiveAccordIndex","currGymData","setGymData","selectedCell","setSelectedCell","state","setState","checkedSwitch","handleSwitchChange","event","target","name","checked","handleCellChange","cell","handleIndexChange","index","useEffect","gymdata","map","data","workout","container","section","square"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\n\n// import material ui cores \nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport styles from '../../assets/styles/views/dashboard/dashboardStyle.js';\nimport DashContainer from './DashContainer.js';\nimport DashGraph from './DashGraph.js';\n\n// import function used to generate the arrays for the calendar\nimport gymData from '../../assets/data/gymData.json';\nimport workRoutine from '../../assets/data/workoutRoutine.json';\nimport CountDownTimer from '../../components/CountDownTimer.js';\nimport InputForm from './GymInputForm.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function DashBoardView(props) {\n    const classes = useStyles();\n    const theme = useTheme(styles);\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n\n    // set states\n    // need to have a json file that keeps tracks of current workout day probably a user setting file\n    const [currWorkout, setWorkout] = React.useState(workRoutine[0].workouts[0]);\n    const [activeAccordIndex, setActiveAccordIndex] = React.useState(0);\n    const [currGymData, setGymData] = React.useState(gymData[0]);\n    const [selectedCell, setSelectedCell] = React.useState(1);\n    const [state, setState] = React.useState({ checkedSwitch: false });\n\n    const handleSwitchChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n    const handleCellChange = (cell) => {\n        setSelectedCell(cell);\n    }\n    const handleIndexChange = (index) => {\n        if (activeAccordIndex === index) {\n            setActiveAccordIndex(0);\n        } else {\n            setActiveAccordIndex(index);\n        }\n    }\n    React.useEffect(() => {\n        var gymdata = currGymData;\n        gymData.map((data) => {\n            if (data.workout.name === workRoutine[0].workouts[selectedCell - 1].workout.name) {\n                gymdata = data;\n            }\n        })\n        setWorkout(workRoutine[0].workouts[selectedCell - 1]);\n        setGymData(gymdata);\n    }, [selectedCell]);\n\n    return (\n        <div className={classes.container}>\n            <section className={\"section\", classes.section}>\n                <div className={\"square\", classes.square}>\n                    <DashContainer\n                        theme={props.theme}\n                        handleIndexChange={(index) => handleIndexChange(index)}\n                        handleSwitchChange={(event) => handleSwitchChange(event)}\n                        state={state}\n                        selectedCell={selectedCell}\n                        handleCellChange={(cell) => handleCellChange(cell)}\n                    />\n                </div>\n                <div className=\"flex-col-2\">\n                    <div className=\"tall-rect\">\n                        {(activeAccordIndex === 1) && !state.checkedSwitch && matches &&\n                            <DashGraph\n                                gymData={currGymData}\n                            />\n                        }\n                        {state.checkedSwitch && matches &&\n                            <Fragment>\n                                <CountDownTimer />\n                                <InputForm \n                                    workout={currWorkout}\n                                />\n                            </Fragment>\n                        }\n                    </div>\n                    <div className=\"wide-rect\">\n\n                    </div>\n                </div>\n            </section>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}