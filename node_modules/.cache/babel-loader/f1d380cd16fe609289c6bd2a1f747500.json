{"ast":null,"code":"import _slicedToArray from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{useRef,useLayoutEffect}from'react';import moment from'moment';import{titleCase}from'../../assets/styles/masterStyle.js';import{makeStyles,useTheme}from'@material-ui/core/styles';import Box from'@material-ui/core/Box';import AppBar from'@material-ui/core/AppBar';import Tabs from'@material-ui/core/Tabs';import Tab from'@material-ui/core/Tab';import Card from'@material-ui/core/Card';import CardActionArea from'@material-ui/core/CardActionArea';import CardActions from'@material-ui/core/CardActions';import CardContent from'@material-ui/core/CardContent';import Typography from'@material-ui/core/Typography';import Autocomplete from'@material-ui/lab/Autocomplete';import TextField from'@material-ui/core/TextField';import MaterialTable from'material-table';import Grid from'@material-ui/core/Grid';import useMediaQuery from'@material-ui/core/useMediaQuery';import styles from'../../assets/styles/views/gym/gymstatisticsStyle.js';import{icons}from'../../assets/styles/masterStyle.js';import GymGraph from'./GymGraph.js';import routineJson from'../../assets/data/workoutRoutine.json';// data\nimport workoutData from'../../assets/data/gymData.json';import workoutJson from'../../assets/data/workouts.json';var useStyles=makeStyles(styles);// Functions for tab panel\nfunction TabPanel(props){var children=props.children,value=props.value,index=props.index,other=_objectWithoutProperties(props,[\"children\",\"value\",\"index\"]);return/*#__PURE__*/React.createElement(\"div\",Object.assign({role:\"tabpanel\",hidden:value!==index,id:\"scrollable-auto-tabpanel-\".concat(index),\"aria-labelledby\":\"scrollable-auto-tab-\".concat(index)},other),value===index&&/*#__PURE__*/React.createElement(Box,{style:{height:\"100%\"}},children));}function a11yProps(index){return{id:\"scrollable-auto-tab-\".concat(index),'aria-controls':\"scrollable-auto-tabpanel-\".concat(index)};}// Functions for display \nvar countGymDays=function countGymDays(){var days=[];workoutData.map(function(workout){workout.data.map(function(day){if(!days.includes(day.date)){days.push(day.date);}});});return days.length;};var options=workoutData.map(function(option){return _objectSpread({name:titleCase(option.workout.name),group:titleCase(option.workout.musclegroup)},option);});export default function GymStatistics(props){var classes=useStyles();// states \nvar targetRef=useRef();//states \nvar _React$useState=React.useState({tabIndex:0,cardIndex:0,selectedData:null,personalbest:[]}),_React$useState2=_slicedToArray(_React$useState,2),state=_React$useState2[0],setState=_React$useState2[1];var handleAutoComplete=function handleAutoComplete(event,values){setState(_objectSpread(_objectSpread({},state),{},{selectedData:values}));};// react state for tabs \nvar handleTabChange=function handleTabChange(event,index){return[setState(_objectSpread(_objectSpread({},state),{},{tabIndex:index}))];};React.useEffect(function(){if(state.selectedData!==null){var pb;var maxWeight=0;state.selectedData.data.map(function(workout){if(workout.weight>maxWeight){pb=workout;}else if(workout.weight===maxWeight){if(moment(workout.date).isBefore(moment(pb.date))){pb=workout;}}});setState(_objectSpread(_objectSpread({},state),{},{personalbest:pb}));}else{setState(_objectSpread(_objectSpread({},state),{},{personalbest:[]}));}},[state.selectedData]);return/*#__PURE__*/React.createElement(Grid,{container:true,className:classes.container,spacing:5,style:{zoom:\"0.9\",height:\"90vh\"}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:7,style:{height:\"inherit\"}},/*#__PURE__*/React.createElement(Card,{style:{height:\"inherit\"}},/*#__PURE__*/React.createElement(CardContent,{style:{padding:\"0px\"}},/*#__PURE__*/React.createElement(AppBar,{position:\"static\",color:\"default\"},/*#__PURE__*/React.createElement(Tabs,{value:state.tabIndex,onChange:handleTabChange,indicatorColor:\"primary\",textColor:\"primary\",variant:\"scrollable\",scrollButtons:\"auto\"},/*#__PURE__*/React.createElement(Tab,Object.assign({className:classes.tab,label:\"2 Weeks\"},a11yProps(0))),/*#__PURE__*/React.createElement(Tab,Object.assign({className:classes.tab,label:\"1 Month\"},a11yProps(1))),/*#__PURE__*/React.createElement(Tab,Object.assign({className:classes.tab,label:\"3 Months\"},a11yProps(2))),/*#__PURE__*/React.createElement(Tab,Object.assign({className:classes.tab,label:\"Custom\"},a11yProps(3))))),/*#__PURE__*/React.createElement(TabPanel,{value:state.tabIndex,index:0},/*#__PURE__*/React.createElement(GymGraph,{data:state.selectedData,theme:props.theme,start:moment().subtract(14,'days'),end:moment(),selectedData:state.selectedData,type:'days',amount:14})),/*#__PURE__*/React.createElement(TabPanel,{value:state.tabIndex,index:1},/*#__PURE__*/React.createElement(GymGraph,{data:state.selectedData,theme:props.theme,start:moment().subtract(1,'months'),end:moment(),selectedData:state.selectedData,type:'months',amount:1})),/*#__PURE__*/React.createElement(TabPanel,{value:state.tabIndex,index:2},/*#__PURE__*/React.createElement(GymGraph,{data:state.selectedData,theme:props.theme,start:moment().subtract(3,'months'),end:moment(),selectedData:state.selectedData,type:'months',amount:3})),/*#__PURE__*/React.createElement(TabPanel,{value:state.tabIndex,index:3})))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:5,ref:targetRef},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:5,style:{height:\"100%\",width:\"100%\",margin:\"0px\"}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Autocomplete,{limitTags:1,options:options.sort(function(a,b){return-b.group.localeCompare(a.group);}),id:\"multiple-limit-tags\",groupBy:function groupBy(option){return option.group;},getOptionLabel:function getOptionLabel(option){return option.name;},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{variant:\"outlined\",label:\"Workouts\",placeholder:\"Workout\"}));},onChange:handleAutoComplete})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Card,{style:{height:\"20vh\"}},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{className:classes.typo,variant:\"subtitle1\",color:\"textSecondary\"},\" One Rep Max \"),/*#__PURE__*/React.createElement(Typography,{className:classes.daysTypo,gutterBottom:true,variant:\"h5\",component:\"h1\"},\" \",countGymDays(),\" \")))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Card,{style:{height:\"20vh\"}},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{className:classes.typo,variant:\"subtitle1\",color:\"textSecondary\"},\" Personal Best \"),state.personalbest.length===0?/*#__PURE__*/React.createElement(Typography,{className:classes.daysTypo,gutterBottom:true,variant:\"h5\",component:\"h1\"},\" No Workout Selected \"):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}},/*#__PURE__*/React.createElement(Typography,{display:\"inline\",className:classes.daysTypo,gutterBottom:true,variant:\"h5\",component:\"h1\"},state.personalbest.weight,\" lbs\"),/*#__PURE__*/React.createElement(Typography,{display:\"inline\",className:classes.typo,variant:\"subtitle1\",color:\"textSecondary\"},\"/ \",state.personalbest.rep,\" reps\")),/*#__PURE__*/React.createElement(Typography,{className:classes.typo,variant:\"subtitle1\",color:\"textSecondary\"},\"Set on - \",state.personalbest.date))))))));{/* <Grid ref={targetRef} className={classes.gymContainer} item xs={(props.tabIndex === 0) ? 8 : 12} >\n                {createTabPanel()}\n            </Grid>\n            <Grid className={classes.gymSelection} item xs={4}>\n               \n            </Grid> */}}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/src/views/Gym/GymStatistics.js"],"names":["React","useRef","useLayoutEffect","moment","titleCase","makeStyles","useTheme","Box","AppBar","Tabs","Tab","Card","CardActionArea","CardActions","CardContent","Typography","Autocomplete","TextField","MaterialTable","Grid","useMediaQuery","styles","icons","GymGraph","routineJson","workoutData","workoutJson","useStyles","TabPanel","props","children","value","index","other","height","a11yProps","id","countGymDays","days","map","workout","data","day","includes","date","push","length","options","option","name","group","musclegroup","GymStatistics","classes","targetRef","useState","tabIndex","cardIndex","selectedData","personalbest","state","setState","handleAutoComplete","event","values","handleTabChange","useEffect","pb","maxWeight","weight","isBefore","container","zoom","padding","tab","theme","subtract","width","margin","sort","a","b","localeCompare","params","typo","daysTypo","display","justifyContent","alignItems","rep"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useRef, useLayoutEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {\n    titleCase\n} from '../../assets/styles/masterStyle.js';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport MaterialTable from 'material-table';\nimport Grid from '@material-ui/core/Grid';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport styles from '../../assets/styles/views/gym/gymstatisticsStyle.js';\n\nimport { icons } from '../../assets/styles/masterStyle.js';\nimport GymGraph from './GymGraph.js';\nimport routineJson from '../../assets/data/workoutRoutine.json';\n\n// data\nimport workoutData from '../../assets/data/gymData.json';\nimport workoutJson from '../../assets/data/workouts.json';\n\nconst useStyles = makeStyles(styles);\n\n// Functions for tab panel\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box style={{ height: \"100%\" }}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\n// Functions for display \nconst countGymDays = () => {\n    let days = [];\n    workoutData.map(workout => {\n        workout.data.map(day => {\n            if (!days.includes(day.date)) {\n                days.push(day.date)\n            }\n        })\n    })\n    return days.length;\n}\n\nconst options = workoutData.map((option) => {\n    return {\n        name: titleCase(option.workout.name), group: titleCase(option.workout.musclegroup),\n        ...option\n    };\n});\n\nexport default function GymStatistics(props) {\n    const classes = useStyles();\n    // states \n    const targetRef = useRef();\n    //states \n    const [state, setState] = React.useState({\n        tabIndex: 0,\n        cardIndex: 0,\n        selectedData: null,\n        personalbest: []\n    })\n    const handleAutoComplete = (event, values) => {\n        setState({ ...state, selectedData: values });\n    }\n    // react state for tabs \n    const handleTabChange = (event, index) => [\n        setState({ ...state, tabIndex: index })\n    ];\n\n    React.useEffect(() => {\n        if (state.selectedData !== null) {\n            let pb;\n            let maxWeight = 0;\n            state.selectedData.data.map(workout => {\n                if (workout.weight > maxWeight) {\n                    pb = workout;\n                } else if (workout.weight === maxWeight) {\n                    if (moment(workout.date).isBefore(moment(pb.date))) {\n                        pb = workout;\n                    }\n                }\n            })\n            setState({ ...state, personalbest: pb })\n        } else {\n            setState({ ...state, personalbest: [] })\n        }\n    }, [state.selectedData])\n\n    return (\n        <Grid\n            container\n            className={classes.container}\n            spacing={5}\n            style={{ zoom: \"0.9\", height: \"90vh\" }}\n        >\n            <Grid item xs={7} style={{ height: \"inherit\" }}>\n                <Card style={{ height: \"inherit\" }}>\n                    <CardContent style={{ padding: \"0px\" }}>\n                        <AppBar position=\"static\" color=\"default\">\n                            <Tabs\n                                value={state.tabIndex}\n                                onChange={handleTabChange}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"auto\"\n                            >\n                                <Tab className={classes.tab} label=\"2 Weeks\" {...a11yProps(0)} />\n                                <Tab className={classes.tab} label=\"1 Month\" {...a11yProps(1)} />\n                                <Tab className={classes.tab} label=\"3 Months\" {...a11yProps(2)} />\n                                <Tab className={classes.tab} label=\"Custom\" {...a11yProps(3)} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={state.tabIndex} index={0} >\n                            <GymGraph\n                                data={state.selectedData}\n                                theme={props.theme}\n                                start={moment().subtract(14, 'days')}\n                                end={moment()}\n                                selectedData={state.selectedData}\n                                type={'days'}\n                                amount={14}\n                            />\n                        </TabPanel>\n                        <TabPanel value={state.tabIndex} index={1} >\n                            <GymGraph\n                                data={state.selectedData}\n                                theme={props.theme}\n                                start={moment().subtract(1, 'months')}\n                                end={moment()}\n                                selectedData={state.selectedData}\n                                type={'months'}\n                                amount={1}\n                            />\n                        </TabPanel>\n                        <TabPanel value={state.tabIndex} index={2}>\n                            <GymGraph\n                                data={state.selectedData}\n                                theme={props.theme}\n                                start={moment().subtract(3, 'months')}\n                                end={moment()}\n                                selectedData={state.selectedData}\n                                type={'months'}\n                                amount={3}\n                            />\n                        </TabPanel>\n                        <TabPanel value={state.tabIndex} index={3}>\n\n                        </TabPanel>\n\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item xs={5} ref={targetRef}>\n                <Grid\n                    container\n                    spacing={5}\n                    style={{ height: \"100%\", width: \"100%\", margin: \"0px\" }}\n                >\n                    <Grid item xs={12}>\n                        <Autocomplete\n                            limitTags={1}\n                            options={options.sort((a, b) => -b.group.localeCompare(a.group))}\n                            id=\"multiple-limit-tags\"\n                            groupBy={(option) => option.group}\n                            getOptionLabel={(option) => option.name}\n                            renderInput={(params) => (\n                                <TextField {...params} variant=\"outlined\" label=\"Workouts\" placeholder=\"Workout\" />\n                            )}\n                            onChange={handleAutoComplete}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Card style={{ height: \"20vh\" }}>\n                            <CardContent>\n                                <Typography className={classes.typo} variant=\"subtitle1\" color=\"textSecondary\"> One Rep Max </Typography>\n                                <Typography className={classes.daysTypo} gutterBottom variant=\"h5\" component=\"h1\"> {countGymDays()} </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Card style={{ height: \"20vh\" }}>\n                            <CardContent>\n                                <Typography className={classes.typo} variant=\"subtitle1\" color=\"textSecondary\"> Personal Best </Typography>\n                                {state.personalbest.length === 0 ?\n                                    <Typography className={classes.daysTypo} gutterBottom variant=\"h5\" component=\"h1\"> No Workout Selected </Typography> :\n                                    <div>\n                                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                            <Typography display=\"inline\" className={classes.daysTypo} gutterBottom variant=\"h5\" component=\"h1\">\n                                                {state.personalbest.weight} lbs\n                                             </Typography>\n                                            <Typography display=\"inline\" className={classes.typo} variant=\"subtitle1\" color=\"textSecondary\">\n                                                / {state.personalbest.rep} reps\n                                                </Typography>\n                                        </div>\n                                        <Typography className={classes.typo} variant=\"subtitle1\" color=\"textSecondary\">\n                                            Set on - {state.personalbest.date}\n                                        </Typography>\n                                    </div>\n                                }\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n    {/* <Grid ref={targetRef} className={classes.gymContainer} item xs={(props.tabIndex === 0) ? 8 : 12} >\n                {createTabPanel()}\n            </Grid>\n            <Grid className={classes.gymSelection} item xs={4}>\n               \n            </Grid> */}\n}"]},"metadata":{},"sourceType":"module"}