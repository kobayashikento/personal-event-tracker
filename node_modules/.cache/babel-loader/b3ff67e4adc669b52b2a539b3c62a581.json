{"ast":null,"code":"// import React from 'react';\n// import { useRef, useLayoutEffect } from 'react'\n// // import material ui cores \n// import { makeStyles } from '@material-ui/core/styles';\n// import Grid from '@material-ui/core/Grid';\n// // generate random events for the calendar \n// import data from '../../assets/data/dashEvents.json';\n// import styles from '../../assets/styles/views/gym/gymStyle.js';\n// import moment from 'moment';\n// import GymSelection from './GymSelection.js';\n// import GymContainer from './GymContainer.js';\n// const useStyles = makeStyles(styles);\n// export default function GymView(props) {\n//     const classes = useStyles();\n//     const targetRef = useRef();\n//     //states \n//     const [state, setState] = React.useState({\n//         selectedData: [],\n//         selectedStartDate: moment().subtract(29, 'days'),\n//         selectedEndDate: moment(),\n//         width: 0, height: 0\n//     })\n//     // react state for tabs \n//     const handleDataSelection = (data) => {\n//         setState({ ...state, selectedData: data })\n//     };\n//     const handleDateChange = (start, end) => {\n//         setState({ ...state, selectedStartDate: start, selectedEndDate: end })\n//     };\n//     useLayoutEffect(() => {\n//         if (targetRef.current) {\n//             setState({\n//                 ...state,\n//                 width: targetRef.current.offsetWidth,\n//                 height: targetRef.current.offsetHeight\n//             });\n//         }\n//     }, [])\n//     return (\n//         <Grid\n//             container\n//             className={classes.container}\n//             spacing={6}\n//         >\n//             <Grid ref={targetRef} className={classes.gymContainer} item xs={(props.tabIndex === 0) ? 8 : 12} >\n//                 <GymContainer\n//                     tabIndex={props.tabIndex}\n//                     handleTabChange={(value) => props.handleTabChange(value)}\n//                     selectedData={state.selectedData}\n//                     start={state.selectedStartDate}\n//                     end={state.selectedEndDate}\n//                     theme={props.theme}\n//                     height={state.height}\n//                     width={state.height}\n//                 />\n//             </Grid>\n//             <Grid className={classes.gymSelection} item xs={4}>\n//                 <GymSelection\n//                     handleDataSelection={(data) => handleDataSelection(data)}\n//                     theme={props.theme}\n//                     start={state.selectedStartDate}\n//                     end={state.selectedEndDate}\n//                     handleDateChange={(start, end) => handleDateChange(start, end)}\n//                     tabIndex={props.tabIndex}\n//                 />\n//             </Grid>\n//         </Grid>\n//     );\n// }","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymView.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\n// import { useRef, useLayoutEffect } from 'react'\n\n// // import material ui cores \n// import { makeStyles } from '@material-ui/core/styles';\n// import Grid from '@material-ui/core/Grid';\n\n// // generate random events for the calendar \n// import data from '../../assets/data/dashEvents.json';\n\n// import styles from '../../assets/styles/views/gym/gymStyle.js';\n\n// import moment from 'moment';\n\n// import GymSelection from './GymSelection.js';\n// import GymContainer from './GymContainer.js';\n\n// const useStyles = makeStyles(styles);\n\n// export default function GymView(props) {\n//     const classes = useStyles();\n//     const targetRef = useRef();\n//     //states \n//     const [state, setState] = React.useState({\n//         selectedData: [],\n//         selectedStartDate: moment().subtract(29, 'days'),\n//         selectedEndDate: moment(),\n//         width: 0, height: 0\n//     })\n\n//     // react state for tabs \n//     const handleDataSelection = (data) => {\n//         setState({ ...state, selectedData: data })\n//     };\n//     const handleDateChange = (start, end) => {\n//         setState({ ...state, selectedStartDate: start, selectedEndDate: end })\n//     };\n\n//     useLayoutEffect(() => {\n//         if (targetRef.current) {\n//             setState({\n//                 ...state,\n//                 width: targetRef.current.offsetWidth,\n//                 height: targetRef.current.offsetHeight\n//             });\n//         }\n//     }, [])\n\n//     return (\n//         <Grid\n//             container\n//             className={classes.container}\n//             spacing={6}\n//         >\n//             <Grid ref={targetRef} className={classes.gymContainer} item xs={(props.tabIndex === 0) ? 8 : 12} >\n//                 <GymContainer\n//                     tabIndex={props.tabIndex}\n//                     handleTabChange={(value) => props.handleTabChange(value)}\n//                     selectedData={state.selectedData}\n//                     start={state.selectedStartDate}\n//                     end={state.selectedEndDate}\n//                     theme={props.theme}\n//                     height={state.height}\n//                     width={state.height}\n//                 />\n//             </Grid>\n//             <Grid className={classes.gymSelection} item xs={4}>\n//                 <GymSelection\n//                     handleDataSelection={(data) => handleDataSelection(data)}\n//                     theme={props.theme}\n//                     start={state.selectedStartDate}\n//                     end={state.selectedEndDate}\n//                     handleDateChange={(start, end) => handleDateChange(start, end)}\n//                     tabIndex={props.tabIndex}\n//                 />\n//             </Grid>\n//         </Grid>\n//     );\n// }"]},"metadata":{},"sourceType":"module"}