{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/MainMenu.js\";\nimport React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { useState } from 'react'; // import styles\n\nimport { makeStyles, createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles'; // import core ui \n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Hidden from '@material-ui/core/Hidden'; // import files \n\nimport Sidebar from '../components/Sidebar.js';\nimport styles from '../assets/styles/components/mainmenuStyle.js';\nimport routes from '../routes.js';\nimport getContrastText from '@tgrx/getcontrasttext';\nimport themes from '../assets/data/themes.json';\nconst useStyles = makeStyles(styles);\nexport default function MainMenu() {\n  const classes = useStyles();\n  var theme;\n  themes.forEach(th => {\n    if (typeof th != undefined) {\n      if (th.themeName === \"default\") {\n        theme = th;\n      }\n    }\n  }); // states \n\n  const [activeTheme, setTheme] = useState(theme);\n  const [didChange, setChange] = useState(false); // theme is an object that follows the themes.json scheme\n\n  const handleChange = newtheme => {\n    setTheme(newtheme);\n  }; // check if the theme exists \n\n\n  const checknotChanged = () => {\n    themes.map(theme => {\n      return Object.keys(theme) === Object.keys(activeTheme);\n    });\n    return false;\n  };\n\n  const handleSideBarClick = () => {\n    console.log(checknotChanged());\n\n    if (didChange) {}\n  }; // set it to defualt until a file manager is code\n\n\n  const switchRoutes = /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, routes.map((prop, index) => {\n    return /*#__PURE__*/React.createElement(Route, {\n      key: index,\n      path: prop.path,\n      render: props => /*#__PURE__*/React.createElement(prop.component, Object.assign({}, props, {\n        theme: activeTheme,\n        handleChange: theme => handleChange(theme),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 44\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    });\n  }));\n  let muiTheme = createMuiTheme({\n    palette: {\n      primary: {\n        main: activeTheme.colors.primary\n      },\n      text: {\n        primary: getContrastText(activeTheme.colors.primarytext),\n        secondary: activeTheme.colors.secondarytext\n      }\n    },\n    overrides: {\n      MuiListItem: {\n        root: {\n          \"&$selected\": {\n            backgroundColor: activeTheme.colors.secondary\n          },\n          \"&:hover\": {\n            backgroundColor: activeTheme.colors.tertiary + \"!important\"\n          }\n        }\n      }\n    }\n  });\n  muiTheme = responsiveFontSizes(muiTheme);\n  return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: muiTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    routes: routes,\n    theme: activeTheme,\n    handleSideBarClick: () => handleSideBarClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.contentsWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, switchRoutes)));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/MainMenu.js"],"names":["React","Switch","Route","useState","makeStyles","createMuiTheme","responsiveFontSizes","ThemeProvider","MuiThemeProvider","CssBaseline","Hidden","Sidebar","styles","routes","getContrastText","themes","useStyles","MainMenu","classes","theme","forEach","th","undefined","themeName","activeTheme","setTheme","didChange","setChange","handleChange","newtheme","checknotChanged","map","Object","keys","handleSideBarClick","console","log","switchRoutes","prop","index","path","props","muiTheme","palette","primary","main","colors","text","primarytext","secondary","secondarytext","overrides","MuiListItem","root","backgroundColor","tertiary","wrapper","contentsWrapper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { useState } from 'react';\n\n// import styles\nimport { makeStyles, createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\n\n// import core ui \nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Hidden from '@material-ui/core/Hidden';\n\n// import files \nimport Sidebar from '../components/Sidebar.js';\nimport styles from '../assets/styles/components/mainmenuStyle.js';\n\nimport routes from '../routes.js';\n\nimport getContrastText from '@tgrx/getcontrasttext'\n\nimport themes from '../assets/data/themes.json';\nconst useStyles = makeStyles(styles);\n\nexport default function MainMenu() {\n    const classes = useStyles();\n\n    var theme;\n    themes.forEach(th => {\n        if (typeof (th) != undefined) {\n            if (th.themeName === \"default\") {\n                theme = th;\n            }\n        }\n    })\n\n    // states \n    const [activeTheme, setTheme] = useState(theme);\n    const [didChange, setChange] = useState(false);\n\n    // theme is an object that follows the themes.json scheme\n    const handleChange = (newtheme) => {\n        setTheme(newtheme);\n    }\n\n    // check if the theme exists \n    const checknotChanged = () => {\n        themes.map(theme => {\n            return (Object.keys(theme) === Object.keys(activeTheme));\n        })\n        return false;\n    }\n\n    const handleSideBarClick = () => {\n        console.log(checknotChanged());\n        if (didChange) {\n\n        }\n    }\n\n    // set it to defualt until a file manager is code\n\n    const switchRoutes = (\n        <Switch>\n            {routes.map((prop, index) => {\n                return (\n                    <Route\n                        key={index}\n                        path={prop.path}\n                        render={(props) => <prop.component {...props} theme={activeTheme} handleChange={(theme) => handleChange(theme)} />}\n                    >\n                    </Route>\n                );\n            })}\n        </Switch>\n    );\n\n    let muiTheme = createMuiTheme({\n        palette: {\n            primary: {\n                main: activeTheme.colors.primary\n            },\n            text:{ \n                primary: getContrastText(activeTheme.colors.primarytext),\n                secondary: activeTheme.colors.secondarytext, \n            }\n        },\n        overrides: {\n            MuiListItem: {\n                root: {\n                    \"&$selected\": {\n                        backgroundColor: activeTheme.colors.secondary,\n                    },\n                    \"&:hover\": {\n                        backgroundColor: activeTheme.colors.tertiary + \"!important\",\n                    },\n                }\n            },\n        },\n    })\n\n    muiTheme = responsiveFontSizes(muiTheme)\n\n    return (\n        <MuiThemeProvider theme={muiTheme}>\n            <CssBaseline />\n            <div className={classes.wrapper}>\n                <Sidebar\n                    routes={routes}\n                    theme={activeTheme}\n                    handleSideBarClick={() => handleSideBarClick()}\n                />\n                <div className={classes.contentsWrapper}>\n                    {switchRoutes}\n                </div>\n            </div>\n        </MuiThemeProvider>\n    );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}