{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymDataManagement.js\";\nimport React from 'react';\nimport { useRef, useLayoutEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { titleCase } from '../../assets/styles/masterStyle.js'; // import material ui core\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MaterialTable from 'material-table';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport styles from '../../assets/styles/views/gym/gymdatamanagementStyle.js';\nimport { icons } from '../../assets/styles/masterStyle.js';\nimport GymGraph from './GymGraph.js';\nimport routineJson from '../../assets/data/workoutRoutine.json'; // data\n\nimport workoutData from '../../assets/data/gymData.json';\nimport workoutJson from '../../assets/data/workouts.json';\nconst useStyles = makeStyles(styles); // tabpanel setting \n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n} // Functions \n\n\nconst getManageData = () => {\n  let temp = [];\n  workoutData.map(workout => {\n    workout.data.map(prop => {\n      temp.push({\n        date: prop.date,\n        workout: titleCase(workout.workout.name),\n        group: titleCase(workout.workout.musclegroup),\n        movement: titleCase(workout.workout.movement),\n        rep: prop.rep,\n        weight: prop.weight\n      });\n    });\n  });\n  return temp;\n};\n\nconst getWorkoutData = () => {\n  let temp = [];\n  workoutJson.map(prop => {\n    temp.push({\n      name: titleCase(prop.name),\n      group: titleCase(prop.musclegroup),\n      movement: titleCase(prop.movement)\n    });\n  });\n  return temp;\n};\n\nconst getRoutineData = () => {\n  let temp = [];\n  routineJson.map(routine => {\n    routine.workouts.map(workout => {\n      temp.push({\n        routine: titleCase(routine.routineName),\n        workout: titleCase(workout.workout.name),\n        group: titleCase(workout.workout.musclegroup),\n        sets: workout.sets,\n        reps: workout.reps,\n        rest: workout.rest\n      });\n    });\n  });\n  return temp;\n};\n\nconst getWorkoutInfo = () => {\n  let temp = {\n    workouts: [],\n    movement: [],\n    musclegroup: []\n  };\n  workoutJson.map((prop, index) => {\n    if (!temp.workouts.includes(prop.name)) {\n      temp.workouts.push({\n        \"something\": prop.name\n      });\n    }\n\n    if (!temp.movement.includes(prop.movement)) {\n      temp.movement.push(prop.movement);\n    }\n\n    if (!temp.musclegroup.includes(prop.musclegroup)) {\n      temp.musclegroup.push(prop.musclegroup);\n    }\n  });\n  return temp;\n};\n\nexport default function GymContainer(props) {\n  const classes = useStyles(); // states \n\n  const [state, setState] = React.useState({\n    width: 0,\n    height: 0,\n    dataColumn: [{\n      title: 'Date',\n      field: 'date',\n      type: 'date'\n    }, {\n      title: 'Workout',\n      field: 'workout',\n      lookup: getWorkoutInfo.workouts\n    }, {\n      title: 'Muscle Group',\n      field: 'group'\n    }, {\n      title: 'Movement',\n      field: 'movement'\n    }, {\n      title: 'Reps',\n      field: 'rep',\n      type: 'numeric'\n    }, {\n      title: 'Weight',\n      field: 'weight',\n      type: 'numeric',\n      grouping: false\n    }],\n    data: getManageData(),\n    workoutColumn: [{\n      title: 'Name',\n      field: 'name',\n      grouping: false\n    }, {\n      title: 'Muscle Group',\n      field: 'group'\n    }, {\n      title: 'Movement',\n      field: 'movement'\n    }],\n    workoutData: getWorkoutData(),\n    routineColumn: [{\n      title: 'Routine',\n      field: 'routine',\n      defaultGroupOrder: 0\n    }, {\n      title: 'Workout',\n      field: 'workout'\n    }, {\n      title: 'Muscle Group',\n      field: 'group'\n    }, {\n      title: 'Sets',\n      field: 'sets',\n      type: 'numeric'\n    }, {\n      title: 'Reps',\n      field: 'reps',\n      type: 'numeric'\n    }, {\n      title: 'Rest',\n      field: 'rest',\n      type: 'numeric'\n    }],\n    routineData: getRoutineData(),\n    pageSize: 9\n  });\n\n  const handleChange = (event, newValue) => {\n    props.handleTabChange(newValue);\n  }; // styles \n\n\n  useLayoutEffect(() => {\n    if (matchesXLUp) {\n      return setState({ ...state,\n        pageSize: 15\n      });\n    } else if (matchesLgUp) {\n      return setState({ ...state,\n        pageSize: 9\n      });\n    } else if (matchesSmUp) {\n      return setState({ ...state,\n        pageSize: 5\n      });\n    }\n  }, []);\n  const theme = useTheme(styles);\n  const matchesSmUp = useMediaQuery(theme.breakpoints.between('sm', 'lg'));\n  const matchesLgUp = useMediaQuery(theme.breakpoints.between('lg', 'xl'));\n  const matchesXLUp = useMediaQuery(theme.breakpoints.up('xl'));\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: props.tabIndex,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n    className: classes.tab,\n    label: \"Manage Entries\"\n  }, a11yProps(0), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    className: classes.tab,\n    label: \"Manage One Time Max\"\n  }, a11yProps(1), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    className: classes.tab,\n    label: \"Manage Workouts\"\n  }, a11yProps(2), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    className: classes.tab,\n    label: \"Manage Routines\"\n  }, a11yProps(3), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: props.tabIndex,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    className: classes.manageDataTable,\n    columns: state.dataColumn,\n    data: state.data,\n    options: {\n      grouping: true,\n      showTitle: false,\n      pageSize: state.pageSize\n    },\n    icons: icons,\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          setState({ ...state,\n            data: newData\n          });\n          resolve();\n        }, 1000);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataUpdate = [...state.data];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setState({ ...state,\n            data: dataUpdate\n          });\n          resolve();\n        }, 1000);\n      }),\n      onRowDelete: oldData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataDelete = [...state.data];\n          const index = oldData.tableData.id;\n          dataDelete.splice(index, 1);\n          setState({ ...state,\n            data: dataDelete\n          });\n          resolve();\n        }, 1000);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    className: classes.tabpanel,\n    value: props.tabIndex,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TabPanel, {\n    value: props.tabIndex,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    className: classes.manageDataTable,\n    columns: state.workoutColumn,\n    data: state.workoutData,\n    options: {\n      grouping: true,\n      showTitle: false,\n      pageSize: state.pageSize\n    },\n    icons: icons,\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          setState({ ...state,\n            workoutData: newData\n          });\n          resolve();\n        }, 1000);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataUpdate = [...state.workoutData];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setState({ ...state,\n            workoutData: dataUpdate\n          });\n          resolve();\n        }, 1000);\n      }),\n      onRowDelete: oldData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataDelete = [...state.workoutData];\n          const index = oldData.tableData.id;\n          dataDelete.splice(index, 1);\n          setState({ ...state,\n            workoutData: dataDelete\n          });\n          resolve();\n        }, 1000);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: props.tabIndex,\n    index: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    className: classes.manageDataTable,\n    columns: state.routineColumn,\n    data: state.routineData,\n    options: {\n      grouping: false,\n      showTitle: false,\n      pageSize: state.pageSize\n    },\n    icons: icons,\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          setState({ ...state,\n            routineData: newData\n          });\n          resolve();\n        }, 1000);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataUpdate = [...state.routineData];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setState({ ...state,\n            routineData: dataUpdate\n          });\n          resolve();\n        }, 1000);\n      }),\n      onRowDelete: oldData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataDelete = [...state.routineData];\n          const index = oldData.tableData.id;\n          dataDelete.splice(index, 1);\n          setState({ ...state,\n            routineData: dataDelete\n          });\n          resolve();\n        }, 1000);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymDataManagement.js"],"names":["React","useRef","useLayoutEffect","PropTypes","titleCase","Grid","makeStyles","useTheme","Box","AppBar","Tabs","Tab","MaterialTable","useMediaQuery","styles","icons","GymGraph","routineJson","workoutData","workoutJson","useStyles","TabPanel","props","children","value","index","other","height","propTypes","node","any","isRequired","a11yProps","id","getManageData","temp","map","workout","data","prop","push","date","name","group","musclegroup","movement","rep","weight","getWorkoutData","getRoutineData","routine","workouts","routineName","sets","reps","rest","getWorkoutInfo","includes","GymContainer","classes","state","setState","useState","width","dataColumn","title","field","type","lookup","grouping","workoutColumn","routineColumn","defaultGroupOrder","routineData","pageSize","handleChange","event","newValue","handleTabChange","matchesXLUp","matchesLgUp","matchesSmUp","theme","breakpoints","between","up","container","tabIndex","tab","manageDataTable","showTitle","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","tableData","onRowDelete","dataDelete","splice","tabpanel"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useRef, useLayoutEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport {\n    titleCase \n} from '../../assets/styles/masterStyle.js';\n\n// import material ui core\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MaterialTable from 'material-table';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport styles from '../../assets/styles/views/gym/gymdatamanagementStyle.js';\n\nimport { icons } from '../../assets/styles/masterStyle.js';\nimport GymGraph from './GymGraph.js';\nimport routineJson from '../../assets/data/workoutRoutine.json';\n\n// data\nimport workoutData from '../../assets/data/gymData.json';\nimport workoutJson from '../../assets/data/workouts.json';\n\nconst useStyles = makeStyles(styles);\n\n// tabpanel setting \nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box style={{ height: \"100%\" }}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\n// Functions \nconst getManageData = () => {\n    let temp = [];\n    workoutData.map(workout => {\n        workout.data.map(prop => {\n            temp.push({\n                date: prop.date,\n                workout: titleCase(workout.workout.name),\n                group: titleCase(workout.workout.musclegroup),\n                movement: titleCase(workout.workout.movement),\n                rep: prop.rep,\n                weight: prop.weight\n            })\n        })\n    })\n    return temp;\n};\n\nconst getWorkoutData = () => {\n    let temp = [];\n    workoutJson.map(prop => {\n        temp.push({\n            name: titleCase(prop.name),\n            group: titleCase(prop.musclegroup),\n            movement: titleCase(prop.movement)\n        })\n    })\n    return temp;\n};\n\nconst getRoutineData = () => {\n    let temp = [];\n    routineJson.map(routine => {\n        routine.workouts.map(workout => {\n            temp.push({\n                routine: titleCase(routine.routineName),\n                workout: titleCase(workout.workout.name),\n                group: titleCase(workout.workout.musclegroup),\n                sets: workout.sets,\n                reps: workout.reps,\n                rest: workout.rest\n            })\n        })\n    })\n    return temp;\n};\n\nconst getWorkoutInfo = () => {\n    let temp = {\n        workouts: [],\n        movement: [],\n        musclegroup: []\n    };\n    workoutJson.map((prop, index) => {\n        if (!temp.workouts.includes(prop.name)) {\n            temp.workouts.push(\n                {\n                    \"something\": prop.name\n                });\n        }\n        if (!temp.movement.includes(prop.movement)) {\n            temp.movement.push(prop.movement);\n        }\n        if (!temp.musclegroup.includes(prop.musclegroup)) {\n            temp.musclegroup.push(prop.musclegroup);\n        }\n    })\n    return temp;\n};\n\nexport default function GymContainer(props) {\n    const classes = useStyles();\n\n    // states \n    const [state, setState] = React.useState({\n        width: 0, height: 0,\n        dataColumn: [\n            { title: 'Date', field: 'date', type: 'date' },\n            {\n                title: 'Workout', field: 'workout',\n                lookup: getWorkoutInfo.workouts\n            },\n            { title: 'Muscle Group', field: 'group' },\n            { title: 'Movement', field: 'movement' },\n            { title: 'Reps', field: 'rep', type: 'numeric' },\n            { title: 'Weight', field: 'weight', type: 'numeric', grouping: false }],\n        data: getManageData(),\n        workoutColumn: [\n            { title: 'Name', field: 'name', grouping: false },\n            { title: 'Muscle Group', field: 'group' },\n            { title: 'Movement', field: 'movement' },\n        ],\n        workoutData: getWorkoutData(),\n        routineColumn: [\n            { title: 'Routine', field: 'routine', defaultGroupOrder: 0 },\n            { title: 'Workout', field: 'workout' },\n            { title: 'Muscle Group', field: 'group' },\n            { title: 'Sets', field: 'sets', type: 'numeric' },\n            { title: 'Reps', field: 'reps', type: 'numeric' },\n            { title: 'Rest', field: 'rest', type: 'numeric' }\n        ],\n        routineData: getRoutineData(),\n        pageSize: 9\n    });\n\n    const handleChange = (event, newValue) => {\n        props.handleTabChange(newValue);\n    };\n\n    // styles \n    useLayoutEffect(() => {\n        if (matchesXLUp) {\n            return setState({ ...state, pageSize: 15 });\n        } else if (matchesLgUp) {\n            return setState({ ...state, pageSize: 9 });\n        } else if (matchesSmUp) {\n            return setState({ ...state, pageSize: 5 });\n        }\n    }, []);\n\n    const theme = useTheme(styles);\n    const matchesSmUp = useMediaQuery(theme.breakpoints.between('sm', 'lg'));\n    const matchesLgUp = useMediaQuery(theme.breakpoints.between('lg', 'xl'));\n    const matchesXLUp = useMediaQuery(theme.breakpoints.up('xl'));\n\n    return (\n        <Grid\n            container\n            className={classes.container}\n            spacing={5}\n        >\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={props.tabIndex}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    <Tab className={classes.tab} label=\"Manage Entries\" {...a11yProps(0)} />\n                    <Tab className={classes.tab} label=\"Manage One Time Max\" {...a11yProps(1)} />\n                    <Tab className={classes.tab} label=\"Manage Workouts\" {...a11yProps(2)} />\n                    <Tab className={classes.tab} label=\"Manage Routines\" {...a11yProps(3)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={props.tabIndex} index={0} >\n                <MaterialTable\n                    className={classes.manageDataTable}\n                    columns={state.dataColumn}\n                    data={state.data}\n                    options={{\n                        grouping: true,\n                        showTitle: false,\n                        pageSize: state.pageSize\n                    }}\n                    icons={icons}\n                    editable={{\n                        onRowAdd: newData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    setState({ ...state, data: newData });\n\n                                    resolve();\n                                }, 1000)\n                            }),\n                        onRowUpdate: (newData, oldData) =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const dataUpdate = [...state.data];\n                                    const index = oldData.tableData.id;\n                                    dataUpdate[index] = newData;\n                                    setState({ ...state, data: dataUpdate });\n\n                                    resolve();\n                                }, 1000)\n                            }),\n                        onRowDelete: oldData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const dataDelete = [...state.data];\n                                    const index = oldData.tableData.id;\n                                    dataDelete.splice(index, 1);\n                                    setState({ ...state, data: dataDelete });\n\n                                    resolve()\n                                }, 1000)\n                            }),\n                    }}\n                />\n            </TabPanel>\n            <TabPanel className={classes.tabpanel} value={props.tabIndex} index={1} >\n            </TabPanel>\n            <TabPanel value={props.tabIndex} index={2}>\n                <MaterialTable\n                    className={classes.manageDataTable}\n                    columns={state.workoutColumn}\n                    data={state.workoutData}\n                    options={{\n                        grouping: true,\n                        showTitle: false,\n                        pageSize: state.pageSize\n                    }}\n                    icons={icons}\n                    editable={{\n                        onRowAdd: newData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    setState({ ...state, workoutData: newData });\n\n                                    resolve();\n                                }, 1000)\n                            }),\n                        onRowUpdate: (newData, oldData) =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const dataUpdate = [...state.workoutData];\n                                    const index = oldData.tableData.id;\n                                    dataUpdate[index] = newData;\n                                    setState({ ...state, workoutData: dataUpdate });\n\n                                    resolve();\n                                }, 1000)\n                            }),\n                        onRowDelete: oldData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const dataDelete = [...state.workoutData];\n                                    const index = oldData.tableData.id;\n                                    dataDelete.splice(index, 1);\n                                    setState({ ...state, workoutData: dataDelete });\n\n                                    resolve()\n                                }, 1000)\n                            }),\n                    }}\n                />\n            </TabPanel>\n            <TabPanel value={props.tabIndex} index={3}>\n                <MaterialTable\n                    className={classes.manageDataTable}\n                    columns={state.routineColumn}\n                    data={state.routineData}\n                    options={{\n                        grouping: false,\n                        showTitle: false,\n                        pageSize: state.pageSize\n                    }}\n                    icons={icons}\n                    editable={{\n                        onRowAdd: newData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    setState({ ...state, routineData: newData });\n\n                                    resolve();\n                                }, 1000)\n                            }),\n                        onRowUpdate: (newData, oldData) =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const dataUpdate = [...state.routineData];\n                                    const index = oldData.tableData.id;\n                                    dataUpdate[index] = newData;\n                                    setState({ ...state, routineData: dataUpdate });\n\n                                    resolve();\n                                }, 1000)\n                            }),\n                        onRowDelete: oldData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const dataDelete = [...state.routineData];\n                                    const index = oldData.tableData.id;\n                                    dataDelete.splice(index, 1);\n                                    setState({ ...state, routineData: dataDelete });\n\n                                    resolve()\n                                }, 1000)\n                            }),\n                    }}\n                />\n            </TabPanel>\n        </Grid>);\n}"]},"metadata":{},"sourceType":"module"}