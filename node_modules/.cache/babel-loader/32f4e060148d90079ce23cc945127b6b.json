{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymSelection.js\";\nimport React from 'react';\nimport { titleCase } from '../../assets/styles/masterStyle.js'; // import files for the date range picker \n\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport moment from 'moment'; // import material ui \n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport workoutData from '../../assets/data/gymData.json';\nimport styles from '../../assets/styles/views/gym/gymselectionStyle.js';\nconst useStyles = makeStyles(styles);\nexport default function GymSelection(props) {\n  const classes = useStyles();\n  const options = workoutData.map(option => {\n    return {\n      name: titleCase(option.workout.name),\n      group: titleCase(option.workout.musclegroup),\n      ...option\n    };\n  });\n\n  const handleAutoComplete = (event, values) => {\n    props.handleDataSelection(values);\n  };\n\n  const handleCallback = (start, end) => {\n    props.handleDateChange(start, end);\n  }; // styles\n\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    className: classes.autocomplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: classes.daterangecontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DateRangePicker, {\n    initialSettings: {\n      showDropdowns: true,\n      startDate: props.start.toDate(),\n      endDate: props.end.toDate(),\n      ranges: {\n        'Last 7 Days': [moment().subtract(6, 'days').toDate(), moment().toDate()],\n        'Last 30 Days': [moment().subtract(29, 'days').toDate(), moment().toDate()],\n        'This Month': [moment().startOf('month').toDate(), moment().endOf('month').toDate()],\n        'Last Month': [moment().subtract(1, 'month').startOf('month').toDate(), moment().subtract(1, 'month').endOf('month').toDate()]\n      }\n    },\n    onCallback: handleCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    type: \"text\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymSelection.js"],"names":["React","titleCase","DateRangePicker","moment","makeStyles","Autocomplete","TextField","Grid","workoutData","styles","useStyles","GymSelection","props","classes","options","map","option","name","workout","group","musclegroup","handleAutoComplete","event","values","handleDataSelection","handleCallback","start","end","handleDateChange","container","autocomplete","daterangecontainer","showDropdowns","startDate","toDate","endDate","ranges","subtract","startOf","endOf","height","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    titleCase\n} from '../../assets/styles/masterStyle.js';\n\n// import files for the date range picker \nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport moment from 'moment';\n\n// import material ui \nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nimport workoutData from '../../assets/data/gymData.json'\n\nimport styles from '../../assets/styles/views/gym/gymselectionStyle.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function GymSelection(props) {\n    const classes = useStyles();\n\n    const options = workoutData.map((option) => {\n        return {\n            name: titleCase(option.workout.name), group: titleCase(option.workout.musclegroup),\n            ...option\n        };\n    });\n\n    const handleAutoComplete = (event, values) => {\n        props.handleDataSelection(values)\n    }\n\n    const handleCallback = (start, end) => {\n        props.handleDateChange(start, end);\n    };\n\n    // styles\n\n    return (\n        <Grid container className={classes.container} spacing={5}>\n            <Grid item xs={8} className={classes.autocomplete}>\n               \n            </Grid>\n            <Grid item xs={4} className={classes.daterangecontainer}>\n                <DateRangePicker initialSettings={{\n                    showDropdowns: true,\n                    startDate: props.start.toDate(),\n                    endDate: props.end.toDate(),\n                    ranges: {\n                        'Last 7 Days': [\n                            moment().subtract(6, 'days').toDate(),\n                            moment().toDate(),\n                        ],\n                        'Last 30 Days': [\n                            moment().subtract(29, 'days').toDate(),\n                            moment().toDate(),\n                        ],\n                        'This Month': [\n                            moment().startOf('month').toDate(),\n                            moment().endOf('month').toDate(),\n                        ],\n                        'Last Month': [\n                            moment().subtract(1, 'month').startOf('month').toDate(),\n                            moment().subtract(1, 'month').endOf('month').toDate(),\n                        ],\n                    },\n                }}\n                    onCallback={handleCallback}\n                >\n                    <input style={{ height: \"100%\", width: \"100%\" }} type=\"text\" className={\"form-control\"} />\n                </DateRangePicker>\n            </Grid>\n        </Grid>\n    );\n}"]},"metadata":{},"sourceType":"module"}