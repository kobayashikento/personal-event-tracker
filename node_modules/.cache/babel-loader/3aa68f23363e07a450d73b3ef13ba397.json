{"ast":null,"code":"import _toConsumableArray from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{forwardRef}from'react';import{makeStyles,withStyles}from'@material-ui/styles';import Paper from'@material-ui/core/Paper';import FormControl from'@material-ui/core/FormControl';import InputLabel from'@material-ui/core/InputLabel';import Select from'@material-ui/core/Select';import DateFnsUtils from'@date-io/date-fns';import{MuiPickersUtilsProvider,KeyboardDatePicker}from'@material-ui/pickers';// material ui icons \nimport DeleteForeverIcon from'@material-ui/icons/DeleteForever';import AddBoxIcon from'@material-ui/icons/AddBox';import Check from'@material-ui/icons/Check';import Clear from'@material-ui/icons/Clear';import MaterialTable from'material-table';import styles from'../../assets/styles/components/forms/gyminputformStyle.js';import workouts from'../../assets/data/workouts.json';import routines from'../../assets/data/workoutRoutine.json';var useStyle=makeStyles(styles);export default function GymInputForm(props){//props workout = workoutRoutine object\nvar classes=useStyle();// states \nvar _React$useState=React.useState(new Date()),_React$useState2=_slicedToArray(_React$useState,2),selectedDate=_React$useState2[0],setSelectedDate=_React$useState2[1];var _React$useState3=React.useState({workouts:props.workouts,routine:props.routine.routineName}),_React$useState4=_slicedToArray(_React$useState3,2),state=_React$useState4[0],setState=_React$useState4[1];var handleChange=function handleChange(event){var name=event.target.name;setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},name,event.target.value)));};var handleDateChange=function handleDateChange(date){setSelectedDate(date);};// styles\nvar StyleInputLabel=withStyles({root:{fontSize:\"1rem\"}})(InputLabel);var StyledSelect=withStyles({root:{textTransform:\"capitalize\"}})(Select);// settings for the material table\nvar tableIcons={Delete:forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(DeleteForeverIcon,Object.assign({},props,{ref:ref}));}),Add:forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(AddBoxIcon,Object.assign({},props,{ref:ref}));}),Check:forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(Check,Object.assign({},props,{ref:ref}));}),Clear:forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(Clear,Object.assign({},props,{ref:ref}));})};var tableColumns=[{title:'Set',field:'set',editable:'never'},{title:'Reps',field:'reps',type:'numeric'},{title:'Weight',field:'weight',type:'numeric'}];var tableData=[];for(var i=1;i<=state.workouts.sets;i++){tableData.push({set:i,reps:0,weight:0});}var _React$useState5=React.useState(tableData),_React$useState6=_slicedToArray(_React$useState5,2),data=_React$useState6[0],setData=_React$useState6[1];return/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(\"div\",{className:classes.select},/*#__PURE__*/React.createElement(MuiPickersUtilsProvider,{utils:DateFnsUtils},/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formcontrol},/*#__PURE__*/React.createElement(StyleInputLabel,null,\"Workout\"),/*#__PURE__*/React.createElement(StyledSelect,{native:true,value:state.workouts.workout.name,onChange:handleChange,label:\"Workout\",name:\"workout\"},/*#__PURE__*/React.createElement(\"option\",null,state.workouts.workout.name),workouts.map(function(workout,index){if(workout.name!==state.workouts.workout.name){return/*#__PURE__*/React.createElement(\"option\",{key:index},workout.name);}}))),/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formcontrol},/*#__PURE__*/React.createElement(StyleInputLabel,null,\"Routine\"),/*#__PURE__*/React.createElement(StyledSelect,{native:true,value:state.routine,onChange:handleChange,label:\"Workout\",name:\"routine\"},/*#__PURE__*/React.createElement(\"option\",null,state.routine),routines.map(function(routine,index){if(routine.routineName!==state.routine){return/*#__PURE__*/React.createElement(\"option\",{key:index},routine.routineName);}}))),/*#__PURE__*/React.createElement(KeyboardDatePicker,{disableToolbar:true,variant:\"inline\",format:\"MM/dd/yyyy\",margin:\"normal\",id:\"date-picker-inline\",label:\"Date\",value:selectedDate,onChange:handleDateChange,KeyboardButtonProps:{'aria-label':'change date'},InputProps:{className:classes.datepicker}}))),/*#__PURE__*/React.createElement(MaterialTable,{icons:tableIcons,columns:tableColumns,data:data,options:{search:false,showTitle:false,filtering:false,sorting:false,paging:false},editable:{onRowAdd:function onRowAdd(newData){new Promise(function(resolve,reject){setTimeout(function(){setData([].concat(_toConsumableArray(data),[newData]));resolve();},1000);});},onRowDelete:function onRowDelete(oldData){new Promise(function(resolve,reject){setTimeout(function(){var dataDelete=_toConsumableArray(data);var index=oldData.tableData.id;dataDelete.splice(index,1);setData(_toConsumableArray(dataDelete));resolve();},1000);});}},cellEditable:{onCellEditApproved:function onCellEditApproved(newValue,oldValue,rowData,columnDef){return new Promise(function(resolve,reject){setTimeout(resolve,1000);});}}}));}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/src/views/DashBoard/GymInputForm.js"],"names":["React","forwardRef","makeStyles","withStyles","Paper","FormControl","InputLabel","Select","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","DeleteForeverIcon","AddBoxIcon","Check","Clear","MaterialTable","styles","workouts","routines","useStyle","GymInputForm","props","classes","useState","Date","selectedDate","setSelectedDate","routine","routineName","state","setState","handleChange","event","name","target","value","handleDateChange","date","StyleInputLabel","root","fontSize","StyledSelect","textTransform","tableIcons","Delete","ref","Add","tableColumns","title","field","editable","type","tableData","i","sets","push","set","reps","weight","data","setData","paper","select","formcontrol","workout","map","index","className","datepicker","search","showTitle","filtering","sorting","paging","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowDelete","oldData","dataDelete","id","splice","onCellEditApproved","newValue","oldValue","rowData","columnDef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { forwardRef } from 'react';\n\nimport { makeStyles, withStyles } from '@material-ui/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\n// material ui icons \nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport Check from '@material-ui/icons/Check';\nimport Clear from '@material-ui/icons/Clear';\nimport MaterialTable from 'material-table'\n\nimport styles from '../../assets/styles/components/forms/gyminputformStyle.js';\n\nimport workouts from '../../assets/data/workouts.json';\nimport routines from '../../assets/data/workoutRoutine.json';\n\nconst useStyle = makeStyles(styles);\n\nexport default function GymInputForm(props) {\n    //props workout = workoutRoutine object\n    const classes = useStyle();\n\n    // states \n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n    const [state, setState] = React.useState({\n        workouts: props.workouts,\n        routine: props.routine.routineName\n    });\n    const handleChange = (event) => {\n        const name = event.target.name;\n        setState({ ...state, [name]: event.target.value });\n    };\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n    };\n\n    // styles\n    const StyleInputLabel = withStyles({\n        root: {\n            fontSize: \"1rem\"\n        },\n    })(InputLabel)\n    const StyledSelect = withStyles({\n        root: {\n            textTransform: \"capitalize\"\n        }\n    })(Select)\n\n    // settings for the material table\n    const tableIcons = {\n        Delete: forwardRef((props, ref) => <DeleteForeverIcon {...props} ref={ref} />),\n        Add: forwardRef((props, ref) => <AddBoxIcon {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    };\n    const tableColumns = [\n        { title: 'Set', field: 'set', editable: 'never' },\n        { title: 'Reps', field: 'reps', type: 'numeric' },\n        { title: 'Weight', field: 'weight', type: 'numeric' }\n    ];\n    const tableData = []\n    for (var i = 1; i <= state.workouts.sets; i++) {\n        tableData.push({ set: i, reps: 0, weight: 0 })\n    }\n    const [data, setData] = React.useState(tableData)\n\n    return (\n        <Paper className={classes.paper}>\n            <div className={classes.select}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <FormControl variant=\"outlined\" className={classes.formcontrol}>\n                        <StyleInputLabel >Workout</StyleInputLabel>\n                        <StyledSelect\n                            native\n                            value={state.workouts.workout.name}\n                            onChange={handleChange}\n                            label=\"Workout\"\n                            name=\"workout\"\n                        >\n                            <option >{state.workouts.workout.name}</option>\n                            {workouts.map((workout, index) => {\n                                if (workout.name !== state.workouts.workout.name) {\n                                    return (\n                                        <option key={index}>{workout.name}</option>\n                                    )\n                                }\n                            })}\n                        </StyledSelect>\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className={classes.formcontrol}>\n                        <StyleInputLabel >Routine</StyleInputLabel>\n                        <StyledSelect\n                            native\n                            value={state.routine}\n                            onChange={handleChange}\n                            label=\"Workout\"\n                            name=\"routine\"\n                        >\n                            <option >{state.routine}</option>\n                            {routines.map((routine, index) => {\n                                if (routine.routineName !== state.routine) {\n                                    return (\n                                        <option key={index}>{routine.routineName}</option>\n                                    )\n                                }\n                            })}\n                        </StyledSelect>\n                    </FormControl>\n                    <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"MM/dd/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"Date\"\n                        value={selectedDate}\n                        onChange={handleDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                        InputProps={{ className: classes.datepicker }}\n                    />\n                </MuiPickersUtilsProvider>\n            </div>\n            <MaterialTable\n                icons={tableIcons}\n                columns={tableColumns}\n                data={data}\n                options={{\n                    search: false,\n                    showTitle: false,\n                    filtering: false,\n                    sorting: false,\n                    paging: false\n                }}\n                editable={{\n                    onRowAdd: newData => {\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n                                resolve();\n                            }, 1000)\n                        })\n                    },\n                    onRowDelete: oldData => {\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n                                resolve()\n                            }, 1000)\n                        })\n                    },\n                }}\n                cellEditable={{\n                    onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\n                        return new Promise((resolve, reject) => {\n                            setTimeout(resolve, 1000);\n                        });\n                    }\n                }}\n            />\n        </Paper>\n    );\n}"]},"metadata":{},"sourceType":"module"}