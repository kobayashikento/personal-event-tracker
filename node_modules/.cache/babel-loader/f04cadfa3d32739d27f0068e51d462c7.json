{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymGraph.js\";\nimport React from 'react'; // import recharts\n\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'; // import material ui core \n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport styles from '../../assets/styles/views/dashboard/dashgraphStyle.js';\nconst useStyles = makeStyles(styles);\nexport default function DashGraph(props) {\n  const classes = useStyles(); // states\n\n  const [state, setState] = React.useState({});\n\n  const titleCase = str => {\n    var splitStr = str.toLowerCase().split(' ');\n\n    for (var i = 0; i < splitStr.length; i++) {\n      splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n\n    return splitStr.join(' ');\n  };\n\n  const getData = () => {\n    if (props.data.length === 0) {\n      return [{\n        \"date\": \"2020-01-11\",\n        \"weight\": 0\n      }, {\n        \"date\": \"2020-01-12\",\n        \"weight\": 0\n      }, {\n        \"date\": \"2020-01-13\",\n        \"weight\": 0\n      }];\n    } else {\n      return \"passed\";\n    }\n  };\n\n  const getLabel = () => {\n    if (props.data.length === 0) {\n      return \"\";\n    } else {\n      return \"passed\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    ref: node => node && console.log(node.offsetWidth),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    height: \"80%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: getData(),\n    margin: {\n      top: 30,\n      right: 50,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    dataKey: \"weight\",\n    domain: ['auto', 'auto'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    height: 36,\n    wrapperStyle: {\n      top: 0,\n      left: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: getLabel(),\n    type: \"monotone\",\n    dataKey: \"weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymGraph.js"],"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","makeStyles","Paper","Button","styles","useStyles","DashGraph","props","classes","state","setState","useState","titleCase","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","getData","data","getLabel","paper","node","console","log","offsetWidth","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// import recharts\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\n// import material ui core \nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport styles from '../../assets/styles/views/dashboard/dashgraphStyle.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function DashGraph(props) {\n    const classes = useStyles();\n\n    // states\n    const [state, setState] = React.useState({\n        \n    });\n\n    const titleCase = (str) => {\n        var splitStr = str.toLowerCase().split(' ');\n        for (var i = 0; i < splitStr.length; i++) {\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n        }\n        return splitStr.join(' ');\n    }\n\n    const getData = () => {\n        if (props.data.length === 0) {\n            return ([\n                {\n                    \"date\": \"2020-01-11\",\n                    \"weight\": 0\n                },\n                {\n                    \"date\": \"2020-01-12\",\n                    \"weight\": 0\n                },\n                {\n                    \"date\": \"2020-01-13\",\n                    \"weight\": 0\n                },\n            ]);\n        } else { return \"passed\" }\n    }\n\n    const getLabel = () => {\n        if (props.data.length === 0) {\n            return (\"\");\n        } else { return \"passed\" }\n    }\n\n    return (\n        <Paper className={classes.paper} ref={node => node && console.log(node.offsetWidth)} >\n            <ResponsiveContainer height=\"80%\">\n                <LineChart data={getData()}\n                    margin={{ top: 30, right: 50, left: 20, bottom: 5 }}>\n                    <XAxis dataKey=\"date\" />\n                    <YAxis dataKey=\"weight\" domain={['auto', 'auto']} />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Legend height={36} wrapperStyle={{ top: 0, left: 25 }} />\n                    <Line name={getLabel()} type=\"monotone\" dataKey=\"weight\" />\n                </LineChart>\n            </ResponsiveContainer>\n        </Paper>\n    );\n}"]},"metadata":{},"sourceType":"module"}