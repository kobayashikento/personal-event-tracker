{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/DashBoard/DashBoardView.js\";\nimport React from 'react'; // import material ui cores \n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom'; // import nivo \n\nimport { BoxLegendSvg } from '@nivo/legends';\nimport { ThemeProvider, SvgWrapper } from '@nivo/core'; // import dashbaord componenets files \n\nimport Calendar from '../../components/ProgressCalendar.js';\nimport styles from '../../assets/jss/views/dashboardStyle.js';\nimport DashList from '../../components/list/DashList.js';\nimport { activities } from '../../assets/jss/masterStyle.js'; // import function used to generate the arrays for the calendar\n\nimport dashFunc from './dashFunctions.js';\nconst useStyles = makeStyles(styles);\nexport default function DashBoardView() {\n  const classes = useStyles();\n  const [calendarIndex, setCalendarIndex] = React.useState(0); // set states\n\n  const defaultChecked = () => {\n    var arr = [];\n    activities.forEach(ele => arr.push(true));\n    return arr;\n  };\n\n  const [checked, setChecked] = React.useState(defaultChecked());\n  const [isActive, setActive] = React.useState(false);\n\n  const handleItemClicked = index => {\n    setCalendarIndex(index);\n    var newSetCehcked = [];\n\n    for (var i = 0; i < activities.length; i++) {\n      if (i === 0 && i === index) {\n        activities.forEach(ele => newSetCehcked.push(true));\n        setActive(false);\n      } else if (i === index) {\n        newSetCehcked.push(true);\n        setActive(true);\n      } else {\n        newSetCehcked.push(false);\n      }\n    }\n\n    setChecked(newSetCehcked);\n  };\n\n  function allActDisplay() {\n    {\n      activities.map((prop, index) => {\n        return /*#__PURE__*/React.createElement(Zoom, {\n          in: isActive,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          sm: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          elevation: 3,\n          className: classes[prop.id + \"Background\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          className: classes.statTitle,\n          variant: \"h5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }\n        }, prop.name), /*#__PURE__*/React.createElement(Typography, {\n          className: classes.statTitle,\n          variant: \"h5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }\n        }, dashFunc.getAllActivity()[index].length), /*#__PURE__*/React.createElement(Typography, {\n          className: classes.statTitle,\n          variant: \"h6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }\n        }, \"Days\"))));\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-evenly\",\n    alignItems: \"center\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"allActDisplay();\", /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 10,\n    className: isActive ? classes.moveCal : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paperCalendar,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.calTitle,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"Daily Activity\"), /*#__PURE__*/React.createElement(ThemeProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SvgWrapper, {\n    height: 70,\n    width: 400,\n    margin: {\n      left: 0,\n      right: 0,\n      top: 10,\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(BoxLegendSvg, {\n    anchor: \"center\",\n    data: activities[calendarIndex].legends,\n    containerWidth: 400,\n    containerHeight: 70,\n    height: 100,\n    width: 400,\n    direction: \"row\",\n    itemWidth: 90,\n    itemHeight: 20,\n    itemsSpacing: 15,\n    padding: 10,\n    symbolSize: 20,\n    symbolShape: \"square\",\n    fontSize: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Calendar, {\n    margin: {\n      top: 40,\n      right: 40,\n      bottom: 40,\n      left: 40\n    },\n    colors: activities[calendarIndex].color,\n    align: \"top\",\n    translateY: -40,\n    itemCount: 0,\n    data: dashFunc.getAllActivity()[calendarIndex],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    sm: 2,\n    className: isActive ? classes.moveSidebar : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DashList, {\n    handleChange: index => handleItemClicked(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/DashBoard/DashBoardView.js"],"names":["React","makeStyles","Paper","Grid","Typography","Zoom","BoxLegendSvg","ThemeProvider","SvgWrapper","Calendar","styles","DashList","activities","dashFunc","useStyles","DashBoardView","classes","calendarIndex","setCalendarIndex","useState","defaultChecked","arr","forEach","ele","push","checked","setChecked","isActive","setActive","handleItemClicked","index","newSetCehcked","i","length","allActDisplay","map","prop","id","statTitle","name","getAllActivity","container","moveCal","paperCalendar","calTitle","left","right","top","bottom","legends","color","moveSidebar"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// import material ui cores \nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\n\n// import nivo \nimport { BoxLegendSvg } from '@nivo/legends';\nimport { ThemeProvider, SvgWrapper } from '@nivo/core';\n\n\n// import dashbaord componenets files \nimport Calendar from '../../components/ProgressCalendar.js';\nimport styles from '../../assets/jss/views/dashboardStyle.js';\nimport DashList from '../../components/list/DashList.js';\nimport {\n    activities\n} from '../../assets/jss/masterStyle.js';\n\n// import function used to generate the arrays for the calendar\nimport dashFunc from './dashFunctions.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function DashBoardView() {\n    const classes = useStyles();\n\n    const [calendarIndex, setCalendarIndex] = React.useState(0);\n\n    // set states\n    const defaultChecked = () => {\n        var arr = [];\n        activities.forEach(ele => arr.push(true));\n        return arr;\n    }\n    const [checked, setChecked] = React.useState(defaultChecked());\n    const [isActive, setActive] = React.useState(false);\n\n    const handleItemClicked = (index) => {\n        setCalendarIndex(index);\n        var newSetCehcked = [];\n        for (var i = 0; i < activities.length; i++) {\n            if (i === 0 && i === index) {\n                activities.forEach(ele => newSetCehcked.push(true));\n                setActive(false);\n            } else if (i === index) {\n                newSetCehcked.push(true);\n                setActive(true);\n            } else { newSetCehcked.push(false) }\n        }\n        setChecked(newSetCehcked);\n    }\n\n    function allActDisplay(){\n        {activities.map((prop, index) => {\n            return (\n                <Zoom\n                    in={isActive}\n                    key={index}\n                >\n                    <Grid\n                        item xs={6} sm={3}\n                    >\n                        <Paper\n                            elevation={3}\n                            className={\n                                classes[prop.id + \"Background\"]\n                            }\n                        >\n                            <Typography className={classes.statTitle} variant=\"h5\">{prop.name}</Typography>\n                            <Typography className={classes.statTitle} variant=\"h5\">{dashFunc.getAllActivity()[index].length}</Typography>\n                            <Typography className={classes.statTitle} variant=\"h6\">Days</Typography>\n                        </Paper>\n                    </Grid>\n                </Zoom>\n            );\n        })}\n    }\n\n    return (\n        <div className={classes.container}>\n            <Grid\n                container\n                justify=\"space-evenly\"\n                alignItems=\"center\"\n                spacing={4}\n            >\n               allActDisplay();\n                <Grid\n                    item\n                    xs={10} sm={10}\n                    className={\n                        isActive? classes.moveCal:null\n                    }\n                >\n                    <Paper\n                        className={classes.paperCalendar}\n                        elevation={3}\n                    >\n                        <Typography className={classes.calTitle} variant=\"h5\">Daily Activity</Typography>\n                        <ThemeProvider>\n                            <SvgWrapper\n                                height={70}\n                                width={400}\n                                margin={{ left: 0, right: 0, top: 10, bottom: 0 }}\n                            >\n                                <BoxLegendSvg\n                                    anchor=\"center\"\n                                    data={activities[calendarIndex].legends}\n                                    containerWidth={400}\n                                    containerHeight={70}\n                                    height={100}\n                                    width={400}\n                                    direction=\"row\"\n                                    itemWidth={90}\n                                    itemHeight={20}\n                                    itemsSpacing={15}\n                                    padding={10}\n                                    symbolSize={20}\n                                    symbolShape=\"square\"\n                                    fontSize=\"30px\"\n                                />\n                            </SvgWrapper>\n                        </ThemeProvider>\n                        <Calendar\n                            margin={{ top: 40, right: 40, bottom: 40, left: 40 }}\n                            colors={activities[calendarIndex].color}\n                            align=\"top\"\n                            translateY={-40}\n                            itemCount={0}\n                            data={dashFunc.getAllActivity()[calendarIndex]}\n                        />\n                    </Paper>\n                </Grid>\n                <Grid\n                    item\n                    xs={2} sm={2}\n                    className={\n                        isActive? classes.moveSidebar:null\n                    }\n                >\n                    <Paper elevation={3}>\n                        <DashList\n                            handleChange={(index) => handleItemClicked(index)}\n                        />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div >\n    );\n}"]},"metadata":{},"sourceType":"module"}