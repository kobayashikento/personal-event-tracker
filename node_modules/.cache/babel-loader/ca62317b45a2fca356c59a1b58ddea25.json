{"ast":null,"code":"function probPlayPiano() {\n  //80% chance of playing the piano \n  if (Math.floor(Math.random() * 10) > 3) {\n    return true;\n  } else {\n    return false;\n  }\n} // takes in the count of days 0-6(7days) since day 3 and 6 are reset days and returns the \n// acitivty number\n\n\nfunction blue() {\n  if (daysCounter === 3 || daysCounter === 6) {\n    if (probPlayPiano()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  } else {\n    if (probPlayPiano()) {\n      return 3;\n    } else {\n      return 2;\n    }\n  }\n}\n\nfunction green() {\n  if (daysCounter === 6) {\n    daysCounter = 0;\n    return blue();\n  } else {\n    return blue();\n  }\n} //0 = no activity \n//1 = piano \n//2 = gym\n//3 = piano and gym\n\n\nvar daysCounter = 0;\nexport default function generateCalendar() {\n  var data = [];\n  var now = new Date();\n  var d = new Date('2020-01-01');\n\n  for (d; d <= now; d.setDate(d.getDate() + 1)) {\n    const dateTimeFormat = new Intl.DateTimeFormat(\"en\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n    });\n    const [{\n      value: month\n    },, {\n      value: day\n    },, {\n      value: year\n    }] = dateTimeFormat.formatToParts(d);\n    daysCounter++;\n  }\n\n  return data;\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/assets/misc/generateEvents.js"],"names":["probPlayPiano","Math","floor","random","blue","daysCounter","green","generateCalendar","data","now","Date","d","setDate","getDate","dateTimeFormat","Intl","DateTimeFormat","year","month","day","value","formatToParts"],"mappings":"AAAA,SAASA,aAAT,GAAyB;AACrB;AACA,MAAKC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,GAAmC,CAAvC,EAA0C;AACtC,WAAO,IAAP;AACH,GAFD,MAEO;AAAE,WAAO,KAAP;AAAe;AAC3B,C,CAED;AACA;;;AACA,SAASC,IAAT,GAAgB;AACZ,MAAIC,WAAW,KAAK,CAAhB,IAAqBA,WAAW,KAAK,CAAzC,EAA4C;AACxC,QAAIL,aAAa,EAAjB,EAAqB;AACjB,aAAO,CAAP;AACH,KAFD,MAEO;AAAE,aAAO,CAAP;AAAU;AACtB,GAJD,MAIO;AACH,QAAIA,aAAa,EAAjB,EAAqB;AACjB,aAAO,CAAP;AACH,KAFD,MAEO;AAAE,aAAO,CAAP;AAAU;AACtB;AACJ;;AAED,SAASM,KAAT,GAAiB;AACb,MAAID,WAAW,KAAK,CAApB,EAAuB;AACnBA,IAAAA,WAAW,GAAG,CAAd;AACA,WAAOD,IAAI,EAAX;AACH,GAHD,MAGO;AAAE,WAAOA,IAAI,EAAX;AAAe;AAC3B,C,CAGD;AACA;AACA;AACA;;;AACA,IAAIC,WAAW,GAAG,CAAlB;AACA,eAAe,SAASE,gBAAT,GAA4B;AACvC,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,MAAIC,CAAC,GAAG,IAAID,IAAJ,CAAS,YAAT,CAAR;;AACA,OAAKC,CAAL,EAASA,CAAC,IAAIF,GAAd,EAAmBE,CAAC,CAACC,OAAF,CAAUD,CAAC,CAACE,OAAF,KAAc,CAAxB,CAAnB,EAA+C;AAC3C,UAAMC,cAAc,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,IAAxB,EAA8B;AACjDC,MAAAA,IAAI,EAAE,SAD2C;AAEjDC,MAAAA,KAAK,EAAE,SAF0C;AAGjDC,MAAAA,GAAG,EAAE;AAH4C,KAA9B,CAAvB;AAKE,UAAM,CACJ;AAAEC,MAAAA,KAAK,EAAEF;AAAT,KADI,GAGJ;AAAEE,MAAAA,KAAK,EAAED;AAAT,KAHI,GAKJ;AAAEC,MAAAA,KAAK,EAAEH;AAAT,KALI,IAMFH,cAAc,CAACO,aAAf,CAA6BV,CAA7B,CANJ;AAOFN,IAAAA,WAAW;AACd;;AACD,SAAOG,IAAP;AACH","sourcesContent":["function probPlayPiano() {\n    //80% chance of playing the piano \n    if ((Math.floor(Math.random() * 10)) > 3) {\n        return true;\n    } else { return false; }\n}\n\n// takes in the count of days 0-6(7days) since day 3 and 6 are reset days and returns the \n// acitivty number\nfunction blue() {\n    if (daysCounter === 3 || daysCounter === 6) {\n        if (probPlayPiano()) {\n            return 1;\n        } else { return 0 }\n    } else {\n        if (probPlayPiano()) {\n            return 3;\n        } else { return 2 }\n    }\n}\n\nfunction green() {\n    if (daysCounter === 6) {\n        daysCounter = 0;\n        return blue();\n    } else { return blue() }\n}\n\n\n//0 = no activity \n//1 = piano \n//2 = gym\n//3 = piano and gym\nvar daysCounter = 0;\nexport default function generateCalendar() {\n    var data = [];\n    var now = new Date();\n    var d = new Date('2020-01-01')\n    for (d ; d <= now; d.setDate(d.getDate() + 1)) {\n        const dateTimeFormat = new Intl.DateTimeFormat(\"en\", {\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n          });\n          const [\n            { value: month },\n            ,\n            { value: day },\n            ,\n            { value: year },\n          ] = dateTimeFormat.formatToParts(d);\n        daysCounter++;\n    }\n    return data;\n}"]},"metadata":{},"sourceType":"module"}