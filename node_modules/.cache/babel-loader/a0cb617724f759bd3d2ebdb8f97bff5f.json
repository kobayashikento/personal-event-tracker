{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/components/Sidebar.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames'; // import material-ui/cores from MUI \n\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Hidden, Drawer } from '@material-ui/core'; // import styles from MUI\n\nimport { makeStyles } from '@material-ui/core/styles'; // import files \n\nimport styles from '../assets/jss/components/sidebarStyle.js';\nconst useStyles = makeStyles(styles);\nexport default function SideBar(props) {\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false); // set states, index corresponds to the list index \n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  }; // handle onclick \n\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  }; // reccusively create the list items for the drawer\n  // var drawerItems = (\n  //     <List className={classes.list}>\n  //         {props.routes.map((prop, index) => {\n  //             return (\n  //                 // create the href for the list item\n  //                 <Link\n  //                     to={prop.path}\n  //                     className={classes.item}\n  //                     key={index}\n  //                 >\n  //                     <ListItem\n  //                         button\n  //                         selected={selectedIndex === index}\n  //                         className={\n  //                             classNames(classes.drawerButton)\n  //                         }\n  //                         key={prop.name}\n  //                         onClick={(event) => handleListItemClick(event, index)}\n  //                     >\n  //                         <prop.icon\n  //                             className={classes.buttonIcon}\n  //                             fontSize=\"large\"\n  //                         />\n  //                         <ListItemText\n  //                             disableTypography\n  //                             className={classes.buttonText}\n  //                             primary={prop.name}\n  //                         />\n  //                     </ListItem>\n  //                 </Link>\n  //             );\n  //         })}\n  //     </List>\n  // );\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    onClose: handleDrawerToggle,\n    variant: \"permanent\",\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.sidebarTitle,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Record Keeper\"), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }), drawerItems)));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/components/Sidebar.js"],"names":["React","Link","classNames","Typography","List","ListItem","Divider","ListItemText","Hidden","Drawer","makeStyles","styles","useStyles","SideBar","props","classes","mobileOpen","setMobileOpen","useState","selectedIndex","setSelectedIndex","handleDrawerToggle","handleListItemClick","event","index","wrapper","paper","drawerPaper","keepMounted","sidebarTitle","drawerItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,mBAA/B,C,CAEA;;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACC,MAAD,CAA5B;AAEA,eAAe,SAASE,OAAT,CAAiBC,KAAjB,EAAwB;AACnC,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AAEA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BjB,KAAK,CAACkB,QAAN,CAAe,KAAf,CAApC,CAHmC,CAKnC;;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCpB,KAAK,CAACkB,QAAN,CAAe,CAAf,CAA1C;;AAEA,QAAMG,kBAAkB,GAAG,MAAM;AAC7BJ,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH,GAFD,CARmC,CAYnC;;;AACA,QAAMM,mBAAmB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1CJ,IAAAA,gBAAgB,CAACI,KAAD,CAAhB;AACH,GAFD,CAbmC,CAiBnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACU,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,cAAc,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAEX,OAAO,CAACY;AAAjB,KADb;AAEI,IAAA,OAAO,EAAEN,kBAFb;AAGI,IAAA,OAAO,EAAC,WAHZ;AAII,IAAA,UAAU,EAAE;AACRO,MAAAA,WAAW,EAAE,IADL,CACW;;AADX,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI,oBAAC,UAAD;AACI,IAAA,SAAS,EAAEb,OAAO,CAACc,YADvB;AAEI,IAAA,OAAO,EAAC,IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARJ,eAcI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,EAeKC,WAfL,CADJ,CADJ,CADJ;AAuBH","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// import material-ui/cores from MUI \nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Hidden, Drawer } from '@material-ui/core';\n\n// import styles from MUI\nimport { makeStyles } from '@material-ui/core/styles';\n\n// import files \nimport styles from '../assets/jss/components/sidebarStyle.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function SideBar(props) {\n    const classes = useStyles();\n\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    // set states, index corresponds to the list index \n    const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    }\n\n    // handle onclick \n    const handleListItemClick = (event, index) => {\n        setSelectedIndex(index);\n    };\n\n    // reccusively create the list items for the drawer\n    // var drawerItems = (\n    //     <List className={classes.list}>\n    //         {props.routes.map((prop, index) => {\n    //             return (\n    //                 // create the href for the list item\n    //                 <Link\n    //                     to={prop.path}\n    //                     className={classes.item}\n    //                     key={index}\n    //                 >\n    //                     <ListItem\n    //                         button\n    //                         selected={selectedIndex === index}\n    //                         className={\n    //                             classNames(classes.drawerButton)\n    //                         }\n    //                         key={prop.name}\n    //                         onClick={(event) => handleListItemClick(event, index)}\n    //                     >\n    //                         <prop.icon\n    //                             className={classes.buttonIcon}\n    //                             fontSize=\"large\"\n    //                         />\n    //                         <ListItemText\n    //                             disableTypography\n    //                             className={classes.buttonText}\n    //                             primary={prop.name}\n    //                         />\n    //                     </ListItem>\n    //                 </Link>\n    //             );\n    //         })}\n    //     </List>\n    // );\n\n    return (\n        <div className={classes.wrapper}>\n            <Hidden smDown implementation=\"css\">\n                <Drawer\n                    classes={{ paper: classes.drawerPaper }}\n                    onClose={handleDrawerToggle}\n                    variant=\"permanent\"\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                >\n                    <Typography\n                        className={classes.sidebarTitle}\n                        variant=\"h6\"\n                    >\n                        Record Keeper\n                </Typography>\n                    <Divider variant=\"middle\" />\n                    {drawerItems}\n                </Drawer>\n            </Hidden>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}