{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymContainer.js\";\nimport React from 'react';\nimport { useRef, useLayoutEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MaterialTable from 'material-table';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport styles from '../../assets/styles/views/gym/gymcontainerStyle.js';\nimport { icons } from '../../assets/styles/masterStyle.js';\nimport GymGraph from './GymGraph.js';\nimport routineJson from '../../assets/data/workoutRoutine.json'; // data\n\nimport workoutData from '../../assets/data/gymData.json';\nimport workoutJson from '../../assets/data/workouts.json';\nconst useStyles = makeStyles(styles);\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n} // Functions \n\n\nconst titleCase = str => {\n  let splitStr = str.toLowerCase().split(' ');\n\n  for (var i = 0; i < splitStr.length; i++) {\n    splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n  }\n\n  return splitStr.join(' ');\n};\n\nconst getManageData = () => {\n  let temp = [];\n  workoutData.map(workout => {\n    workout.data.map(prop => {\n      temp.push({\n        date: prop.date,\n        workout: titleCase(workout.workout.name),\n        group: titleCase(workout.workout.musclegroup),\n        movement: titleCase(workout.workout.movement),\n        rep: prop.rep,\n        weight: prop.weight\n      });\n    });\n  });\n  return temp;\n};\n\nconst getWorkoutData = () => {\n  let temp = [];\n  workoutJson.map(prop => {\n    temp.push({\n      name: titleCase(prop.name),\n      group: titleCase(prop.musclegroup),\n      movement: titleCase(prop.movement)\n    });\n  });\n  return temp;\n};\n\nconst getRoutineData = () => {\n  let temp = [];\n  routineJson.map(routine => {\n    routine.workouts.map(workout => {\n      temp.push({\n        routine: titleCase(routine.routineName),\n        workout: titleCase(workout.workout.name),\n        group: titleCase(workout.workout.musclegroup),\n        sets: workout.sets,\n        reps: workout.reps,\n        rest: workout.rest\n      });\n    });\n  });\n  return temp;\n};\n\nconst getWorkoutInfo = () => {\n  let temp = {\n    workouts: [],\n    movement: [],\n    musclegroup: []\n  };\n  workoutJson.map((prop, index) => {\n    if (!temp.workouts.includes(prop.name)) {\n      temp.workouts.push({\n        \"something\": prop.name\n      });\n    }\n\n    if (!temp.movement.includes(prop.movement)) {\n      temp.movement.push(prop.movement);\n    }\n\n    if (!temp.musclegroup.includes(prop.musclegroup)) {\n      temp.musclegroup.push(prop.musclegroup);\n    }\n  });\n  return temp;\n};\n\nexport default function GymContainer(props) {\n  const classes = useStyles();\n  const targetRef = useRef(); // states \n\n  const [state, setState] = React.useState({\n    width: 0,\n    height: 0,\n    dataColumn: [{\n      title: 'Date',\n      field: 'date',\n      type: 'date'\n    }, {\n      title: 'Workout',\n      field: 'workout',\n      lookup: getWorkoutInfo.workouts\n    }, {\n      title: 'Muscle Group',\n      field: 'group'\n    }, {\n      title: 'Movement',\n      field: 'movement'\n    }, {\n      title: 'Reps',\n      field: 'rep',\n      type: 'numeric'\n    }, {\n      title: 'Weight',\n      field: 'weight',\n      type: 'numeric',\n      grouping: false\n    }],\n    data: getManageData(),\n    workoutColumn: [{\n      title: 'Name',\n      field: 'name',\n      grouping: false\n    }, {\n      title: 'Muscle Group',\n      field: 'group'\n    }, {\n      title: 'Movement',\n      field: 'movement'\n    }],\n    workoutData: getWorkoutData(),\n    routineColumn: [{\n      title: 'Routine',\n      field: 'routine',\n      defaultGroupOrder: 0\n    }, {\n      title: 'Workout',\n      field: 'workout'\n    }, {\n      title: 'Muscle Group',\n      field: 'group'\n    }, {\n      title: 'Sets',\n      field: 'sets',\n      type: 'numeric'\n    }, {\n      title: 'Reps',\n      field: 'reps',\n      type: 'numeric'\n    }, {\n      title: 'Rest',\n      field: 'rest',\n      type: 'numeric'\n    }],\n    routineData: getRoutineData()\n  });\n\n  const handleChange = (event, newValue) => {\n    props.handleTabChange(newValue);\n  }; // styles \n\n\n  useLayoutEffect(() => {\n    if (targetRef.current) {\n      setState({ ...state,\n        width: targetRef.current.offsetWidth,\n        height: targetRef.current.offsetHeight\n      });\n    }\n  }, []);\n  const theme = useTheme(styles);\n  const matchesSmUp = useMediaQuery(theme.breakpoints.between('sm', 'lg'));\n  const matchesLgUp = useMediaQuery(theme.breakpoints.between('lg', 'xl'));\n  const matchesXLUp = useMediaQuery(theme.breakpoints.up('xl'));\n\n  const getPageSize = () => {\n    if (matchesXLUp) {\n      return 15;\n    } else if (matchesLgUp) {\n      return 9;\n    } else if (matchesSmUp) {\n      return 5;\n    } else {\n      return 5;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    className: props.fullView ? classes.paper : classes.paperHidden,\n    ref: targetRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, console.log(props.tabIndex), /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: props.tabIndex,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n    className: classes.tab,\n    label: \"Statistics\"\n  }, a11yProps(0), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    className: classes.tab,\n    label: \"Manage Data\"\n  }, a11yProps(1), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    className: classes.tab,\n    label: \"Manage Workouts\"\n  }, a11yProps(2), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    className: classes.tab,\n    label: \"Manage Routines\"\n  }, a11yProps(3), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(TabPanel, {\n    className: classes.tabpanel,\n    value: props.tabIndex,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GymGraph, {\n    data: props.selectedData,\n    start: props.start,\n    end: props.end,\n    theme: props.theme,\n    width: state.width,\n    height: state.height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: props.tabIndex,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    className: classes.manageDataTable,\n    columns: state.dataColumn,\n    data: state.data,\n    options: {\n      grouping: true,\n      showTitle: false,\n      pageSize: getPageSize()\n    },\n    icons: icons,\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          setState({ ...state,\n            data: newData\n          });\n          resolve();\n        }, 1000);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataUpdate = [...state.data];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setState({ ...state,\n            data: dataUpdate\n          });\n          resolve();\n        }, 1000);\n      }),\n      onRowDelete: oldData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataDelete = [...state.data];\n          const index = oldData.tableData.id;\n          dataDelete.splice(index, 1);\n          setState({ ...state,\n            data: dataDelete\n          });\n          resolve();\n        }, 1000);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: props.tabIndex,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    className: classes.manageDataTable,\n    columns: state.workoutColumn,\n    data: state.workoutData,\n    options: {\n      grouping: true,\n      showTitle: false,\n      pageSize: 8\n    },\n    icons: icons,\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          setState({ ...state,\n            workoutData: newData\n          });\n          resolve();\n        }, 1000);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataUpdate = [...state.workoutData];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setState({ ...state,\n            workoutData: dataUpdate\n          });\n          resolve();\n        }, 1000);\n      }),\n      onRowDelete: oldData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataDelete = [...state.workoutData];\n          const index = oldData.tableData.id;\n          dataDelete.splice(index, 1);\n          setState({ ...state,\n            workoutData: dataDelete\n          });\n          resolve();\n        }, 1000);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: props.tabIndex,\n    index: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    className: classes.manageDataTable,\n    columns: state.routineColumn,\n    data: state.routineData,\n    options: {\n      grouping: false,\n      showTitle: false,\n      pageSize: 8\n    },\n    icons: icons,\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          setState({ ...state,\n            routineData: newData\n          });\n          resolve();\n        }, 1000);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataUpdate = [...state.routineData];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setState({ ...state,\n            routineData: dataUpdate\n          });\n          resolve();\n        }, 1000);\n      }),\n      onRowDelete: oldData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataDelete = [...state.routineData];\n          const index = oldData.tableData.id;\n          dataDelete.splice(index, 1);\n          setState({ ...state,\n            routineData: dataDelete\n          });\n          resolve();\n        }, 1000);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymContainer.js"],"names":["React","useRef","useLayoutEffect","PropTypes","Paper","makeStyles","useTheme","Box","AppBar","Tabs","Tab","MaterialTable","useMediaQuery","styles","icons","GymGraph","routineJson","workoutData","workoutJson","useStyles","TabPanel","props","children","value","index","other","height","propTypes","node","any","isRequired","a11yProps","id","titleCase","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","getManageData","temp","map","workout","data","prop","push","date","name","group","musclegroup","movement","rep","weight","getWorkoutData","getRoutineData","routine","workouts","routineName","sets","reps","rest","getWorkoutInfo","includes","GymContainer","classes","targetRef","state","setState","useState","width","dataColumn","title","field","type","lookup","grouping","workoutColumn","routineColumn","defaultGroupOrder","routineData","handleChange","event","newValue","handleTabChange","current","offsetWidth","offsetHeight","theme","matchesSmUp","breakpoints","between","matchesLgUp","matchesXLUp","up","getPageSize","fullView","paper","paperHidden","console","log","tabIndex","tab","tabpanel","selectedData","start","end","manageDataTable","showTitle","pageSize","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","tableData","onRowDelete","dataDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useRef, useLayoutEffect } from 'react'\nimport PropTypes from 'prop-types';\n\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MaterialTable from 'material-table';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport styles from '../../assets/styles/views/gym/gymcontainerStyle.js';\n\nimport { icons } from '../../assets/styles/masterStyle.js';\nimport GymGraph from './GymGraph.js';\nimport routineJson from '../../assets/data/workoutRoutine.json';\n\n// data\nimport workoutData from '../../assets/data/gymData.json';\nimport workoutJson from '../../assets/data/workouts.json';\n\nconst useStyles = makeStyles(styles);\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box style={{ height: \"100%\" }}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\n// Functions \nconst titleCase = (str) => {\n    let splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    return splitStr.join(' ');\n};\n\nconst getManageData = () => {\n    let temp = [];\n    workoutData.map(workout => {\n        workout.data.map(prop => {\n            temp.push({\n                date: prop.date,\n                workout: titleCase(workout.workout.name),\n                group: titleCase(workout.workout.musclegroup),\n                movement: titleCase(workout.workout.movement),\n                rep: prop.rep,\n                weight: prop.weight\n            })\n        })\n    })\n    return temp;\n};\n\nconst getWorkoutData = () => {\n    let temp = [];\n    workoutJson.map(prop => {\n        temp.push({\n            name: titleCase(prop.name),\n            group: titleCase(prop.musclegroup),\n            movement: titleCase(prop.movement)\n        })\n    })\n    return temp;\n};\n\nconst getRoutineData = () => {\n    let temp = [];\n    routineJson.map(routine => {\n        routine.workouts.map(workout => {\n            temp.push({\n                routine: titleCase(routine.routineName),\n                workout: titleCase(workout.workout.name),\n                group: titleCase(workout.workout.musclegroup),\n                sets: workout.sets,\n                reps: workout.reps,\n                rest: workout.rest\n            })\n        })\n    })\n    return temp;\n};\n\nconst getWorkoutInfo = () => {\n    let temp = {\n        workouts: [],\n        movement: [],\n        musclegroup: []\n    };\n    workoutJson.map((prop, index) => {\n        if (!temp.workouts.includes(prop.name)) {\n            temp.workouts.push(\n                {\n                    \"something\": prop.name\n                });\n        }\n        if (!temp.movement.includes(prop.movement)) {\n            temp.movement.push(prop.movement);\n        }\n        if (!temp.musclegroup.includes(prop.musclegroup)) {\n            temp.musclegroup.push(prop.musclegroup);\n        }\n    })\n    return temp;\n};\n\nexport default function GymContainer(props) {\n    const classes = useStyles();\n    const targetRef = useRef();\n\n    // states \n    const [state, setState] = React.useState({\n        width: 0, height: 0,\n        dataColumn: [\n            { title: 'Date', field: 'date', type: 'date' },\n            {\n                title: 'Workout', field: 'workout',\n                lookup: getWorkoutInfo.workouts\n            },\n            { title: 'Muscle Group', field: 'group' },\n            { title: 'Movement', field: 'movement' },\n            { title: 'Reps', field: 'rep', type: 'numeric' },\n            { title: 'Weight', field: 'weight', type: 'numeric', grouping: false }],\n        data: getManageData(),\n        workoutColumn: [\n            { title: 'Name', field: 'name', grouping: false },\n            { title: 'Muscle Group', field: 'group' },\n            { title: 'Movement', field: 'movement' },\n        ],\n        workoutData: getWorkoutData(),\n        routineColumn: [\n            { title: 'Routine', field: 'routine', defaultGroupOrder: 0 },\n            { title: 'Workout', field: 'workout' },\n            { title: 'Muscle Group', field: 'group' },\n            { title: 'Sets', field: 'sets', type: 'numeric' },\n            { title: 'Reps', field: 'reps', type: 'numeric' },\n            { title: 'Rest', field: 'rest', type: 'numeric' }\n        ],\n        routineData: getRoutineData()\n    });\n\n    const handleChange = (event, newValue) => {\n        props.handleTabChange(newValue);\n    };\n\n    // styles \n    useLayoutEffect(() => {\n        if (targetRef.current) {\n            setState({\n                ...state,\n                width: targetRef.current.offsetWidth,\n                height: targetRef.current.offsetHeight\n            });\n        }\n    }, []);\n\n    const theme = useTheme(styles);\n    const matchesSmUp = useMediaQuery(theme.breakpoints.between('sm', 'lg'));\n    const matchesLgUp = useMediaQuery(theme.breakpoints.between('lg', 'xl'));\n    const matchesXLUp = useMediaQuery(theme.breakpoints.up('xl'));\n    const getPageSize = () => {\n        if (matchesXLUp){\n            return 15;\n        } else if (matchesLgUp){\n            return 9;\n        } else if (matchesSmUp) {\n            return 5;\n        } else { return 5 }\n    };\n\n    return (\n        <Paper elevation={0} className={props.fullView ? classes.paper : classes.paperHidden} ref={targetRef}>\n            {console.log(props.tabIndex)}\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={props.tabIndex}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    <Tab className={classes.tab} label=\"Statistics\" {...a11yProps(0)} />\n                    <Tab className={classes.tab} label=\"Manage Data\" {...a11yProps(1)} />\n                    <Tab className={classes.tab} label=\"Manage Workouts\" {...a11yProps(2)} />\n                    <Tab className={classes.tab} label=\"Manage Routines\" {...a11yProps(3)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel className={classes.tabpanel} value={props.tabIndex} index={0} >\n                <GymGraph\n                    data={props.selectedData}\n                    start={props.start}\n                    end={props.end}\n                    theme={props.theme}\n                    width={state.width}\n                    height={state.height}\n                />\n            </TabPanel>\n            <TabPanel value={props.tabIndex} index={1} >\n                <MaterialTable\n                    className={classes.manageDataTable}\n                    columns={state.dataColumn}\n                    data={state.data}\n                    options={{\n                        grouping: true,\n                        showTitle: false,\n                        pageSize: getPageSize()\n                    }}\n                    icons={icons}\n                    editable={{\n                        onRowAdd: newData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    setState({ ...state, data: newData });\n\n                                    resolve();\n                                }, 1000)\n                            }),\n                        onRowUpdate: (newData, oldData) =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const dataUpdate = [...state.data];\n                                    const index = oldData.tableData.id;\n                                    dataUpdate[index] = newData;\n                                    setState({ ...state, data: dataUpdate });\n\n                                    resolve();\n                                }, 1000)\n                            }),\n                        onRowDelete: oldData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const dataDelete = [...state.data];\n                                    const index = oldData.tableData.id;\n                                    dataDelete.splice(index, 1);\n                                    setState({ ...state, data: dataDelete });\n\n                                    resolve()\n                                }, 1000)\n                            }),\n                    }}\n                />\n            </TabPanel>\n            <TabPanel value={props.tabIndex} index={2}>\n            <MaterialTable\n                    className={classes.manageDataTable}\n                    columns={state.workoutColumn}\n                    data={state.workoutData}\n                    options={{\n                        grouping: true,\n                        showTitle: false,\n                        pageSize: 8\n                    }}\n                    icons={icons}\n                    editable={{\n                        onRowAdd: newData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    setState({ ...state, workoutData: newData });\n\n                                    resolve();\n                                }, 1000)\n                            }),\n                        onRowUpdate: (newData, oldData) =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const dataUpdate = [...state.workoutData];\n                                    const index = oldData.tableData.id;\n                                    dataUpdate[index] = newData;\n                                    setState({ ...state, workoutData: dataUpdate });\n\n                                    resolve();\n                                }, 1000)\n                            }),\n                        onRowDelete: oldData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const dataDelete = [...state.workoutData];\n                                    const index = oldData.tableData.id;\n                                    dataDelete.splice(index, 1);\n                                    setState({ ...state, workoutData: dataDelete });\n\n                                    resolve()\n                                }, 1000)\n                            }),\n                    }}\n                />\n            </TabPanel>\n            <TabPanel value={props.tabIndex} index={3}>\n            <MaterialTable\n                    className={classes.manageDataTable}\n                    columns={state.routineColumn}\n                    data={state.routineData}\n                    options={{\n                        grouping: false,\n                        showTitle: false,\n                        pageSize: 8\n                    }}\n                    icons={icons}\n                    editable={{\n                        onRowAdd: newData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    setState({ ...state, routineData: newData });\n\n                                    resolve();\n                                }, 1000)\n                            }),\n                        onRowUpdate: (newData, oldData) =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const dataUpdate = [...state.routineData];\n                                    const index = oldData.tableData.id;\n                                    dataUpdate[index] = newData;\n                                    setState({ ...state, routineData: dataUpdate });\n\n                                    resolve();\n                                }, 1000)\n                            }),\n                        onRowDelete: oldData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const dataDelete = [...state.routineData];\n                                    const index = oldData.tableData.id;\n                                    dataDelete.splice(index, 1);\n                                    setState({ ...state, routineData: dataDelete });\n\n                                    resolve()\n                                }, 1000)\n                            }),\n                    }}\n                />\n            </TabPanel>\n        </Paper>\n    );\n}"]},"metadata":{},"sourceType":"module"}