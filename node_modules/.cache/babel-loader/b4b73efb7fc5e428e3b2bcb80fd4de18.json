{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/DashBoardView.js\";\nimport React from 'react'; // import material ui cores \n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'; // import dashbaord componenets files \n\nimport Calendar from '../components/ProgressCalendar.js';\nimport styles from '../assets/jss/views/dashboardStyle.js';\nimport CalendarList from '../components/list/DashList.js'; // generate random events for the calendar \n\nimport data from '../assets/data/dashEvents.json';\nconst useStyles = makeStyles(styles); // function that takes in the events json file and seperates the events  \n// into the same events\n\nfunction getEvents() {\n  var events = [];\n  var numAct = [];\n  data.forEach(event => {\n    if (!numAct.includes(event.value)) {\n      numAct.push(event.value);\n      events.push([]);\n    } else {\n      events[numAct.indexOf(event.value)].push(event);\n    }\n  });\n  return events;\n}\n\nconst handleItemClicked = index => {\n  //do stuff\n  setCalendarData({\n    something: 10\n  });\n};\n\nexport default function DashBoardView() {\n  const classes = useStyles();\n  const [calendarData, setCalendarData] = React.useState([]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-evenly\",\n    alignItems: \"center\",\n    className: classes.grid,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paperCalendar,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.calTitle,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Daily Activity\"), getEvents().map((prop, index) => {\n    /*#__PURE__*/\n    React.createElement(Calendar, {\n      margin: {\n        top: 60,\n        right: 40,\n        bottom: 40,\n        left: 40\n      },\n      colors: ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560'],\n      align: \"top\",\n      translateY: -40,\n      itemTextColor: \"transparent\",\n      itemCount: 0,\n      data: prop[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 34\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CalendarList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/DashBoardView.js"],"names":["React","makeStyles","Paper","Grid","Typography","Calendar","styles","CalendarList","data","useStyles","getEvents","events","numAct","forEach","event","includes","value","push","indexOf","handleItemClicked","index","setCalendarData","something","DashBoardView","classes","calendarData","useState","container","grid","paperCalendar","calTitle","map","prop","top","right","bottom","left"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// import material ui cores \nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n// import dashbaord componenets files \nimport Calendar from '../components/ProgressCalendar.js';\nimport styles from '../assets/jss/views/dashboardStyle.js';\nimport CalendarList from '../components/list/DashList.js';\n\n// generate random events for the calendar \nimport data from '../assets/data/dashEvents.json';\n\nconst useStyles = makeStyles(styles);\n\n// function that takes in the events json file and seperates the events  \n// into the same events\nfunction getEvents() {\n    var events = [];\n    var numAct = [];\n    data.forEach(event => {\n        if (!numAct.includes(event.value)) {\n            numAct.push(event.value)\n            events.push([])\n        } else {\n            events[numAct.indexOf(event.value)].push(event)\n        }\n    })\n    return events;\n}\n\nconst handleItemClicked = (index) => {\n    //do stuff\n    setCalendarData({something: 10})\n}\n\nexport default function DashBoardView() {\n    const classes = useStyles();\n    const [calendarData, setCalendarData] = React.useState([]);\n\n    return (\n        <div className={classes.container}>\n            <Grid\n                container\n                justify=\"space-evenly\"\n                alignItems=\"center\"\n                className={classes.grid}\n                spacing={4}\n            >\n                <Grid item xs={10} sm={10}>\n                    <Paper className={classes.paperCalendar} elevation={3}>\n                        <Typography className={classes.calTitle} variant=\"h6\">Daily Activity</Typography>\n                            {getEvents().map((prop,index)=>{\n                                 <Calendar\n                                 margin={{ top: 60, right: 40, bottom: 40, left: 40 }}\n                                 colors={['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']}\n                                 align=\"top\"\n                                 translateY={-40}\n                                 itemTextColor=\"transparent\"\n                                 itemCount={0}\n                                 data={prop[index]}\n                             />\n                            })}\n                    </Paper>\n                </Grid>\n                <Grid item xs={2} sm={2}>\n                    <Paper elevation={3}>\n                        <CalendarList />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}