{"ast":null,"code":"import _objectSpread from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Link}from'react-router-dom';// import recharts\nimport{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';// import material ui core \nimport{makeStyles}from'@material-ui/core/styles';import Paper from'@material-ui/core/Paper';import Button from'@material-ui/core/Button';import styles from'../../assets/styles/views/dashboard/dashgraphStyle.js';var useStyles=makeStyles(styles);export default function DashGraph(props){var classes=useStyles();var targetRef=React.useRef();var titleCase=function titleCase(str){var splitStr=str.toLowerCase().split(' ');for(var i=0;i<splitStr.length;i++){splitStr[i]=splitStr[i].charAt(0).toUpperCase()+splitStr[i].substring(1);}return splitStr.join(' ');};// states \nvar _React$useState=React.useState({width:0,height:0}),_React$useState2=_slicedToArray(_React$useState,2),state=_React$useState2[0],setState=_React$useState2[1];React.useLayoutEffect(function(){if(targetRef.current){setState(_objectSpread(_objectSpread({},state),{},{width:targetRef.current.offsetWidth,height:targetRef.current.offsetHeight}));}},[]);return/*#__PURE__*/React.createElement(Paper,{className:classes.paper,ref:targetRef},/*#__PURE__*/React.createElement(LineChart,{width:state.width,height:state.width,data:props.gymData.data,margin:{top:56,right:48,left:27,bottom:-16}},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"date\"}),/*#__PURE__*/React.createElement(YAxis,{dataKey:\"weight\",domain:['auto','auto']}),/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Legend,{height:36,wrapperStyle:{top:16,left:24}}),/*#__PURE__*/React.createElement(Line,{name:titleCase(props.gymData.workout.name),type:\"monotone\",dataKey:\"weight\",stroke:props.theme.colors.primary})),/*#__PURE__*/React.createElement(Link,{to:\"/main-menu/gym-statistics\",style:{textDecoration:'none'}},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){props.handleListItemClick(1);},color:\"secondary\",variant:\"outlined\",className:classes.button},\"More Details\")));}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/src/views/DashBoard/DashGraph.js"],"names":["React","Link","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","makeStyles","Paper","Button","styles","useStyles","DashGraph","props","classes","targetRef","useRef","titleCase","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","useState","width","height","state","setState","useLayoutEffect","current","offsetWidth","offsetHeight","paper","gymData","data","top","right","left","bottom","workout","name","theme","colors","primary","textDecoration","handleListItemClick","button"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// import recharts\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\n// import material ui core \nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport styles from '../../assets/styles/views/dashboard/dashgraphStyle.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function DashGraph(props) {\n    const classes = useStyles();\n    const targetRef = React.useRef();\n    \n    const titleCase = (str) => {\n        var splitStr = str.toLowerCase().split(' ');\n        for (var i = 0; i < splitStr.length; i++) {\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n        }\n        return splitStr.join(' ');\n    }\n    // states \n    const [state, setState] = React.useState({width: 0, height: 0});\n    React.useLayoutEffect(() => {\n        if (targetRef.current) {\n            setState({\n                ...state,\n                width: targetRef.current.offsetWidth,\n                height: targetRef.current.offsetHeight\n            });\n        }\n    }, []);\n\n    return (\n        <Paper className={classes.paper} ref={targetRef}>\n            <LineChart width={state.width} height={state.width} data={props.gymData.data}\n                margin={{ top: 56, right: 48, left: 27, bottom: -16 }}>\n                <XAxis dataKey=\"date\" />\n                <YAxis dataKey=\"weight\" domain={['auto', 'auto']} />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend height={36} wrapperStyle={{ top: 16, left: 24 }} />\n                <Line name={titleCase(props.gymData.workout.name)} type=\"monotone\" dataKey=\"weight\" stroke={props.theme.colors.primary} />\n            </LineChart>\n            <Link\n                to={\"/main-menu/gym-statistics\"}\n                style={{ textDecoration: 'none' }} \n            >\n                <Button onClick={() => {props.handleListItemClick(1)}} color=\"secondary\" variant=\"outlined\" className={classes.button}>More Details</Button>\n            </Link>\n        </Paper>\n    );\n}"]},"metadata":{},"sourceType":"module"}