{"ast":null,"code":"// import React from 'react';\n// import { ResponsiveLine } from '@nivo/line';\n// export default function MyResponsiveLine() {\n//     return (\n//         <ResponsiveLine\n//             data={[\n//                 {\n//                     id: 'fake corp. A',\n//                     data: [\n//                         { x: '2018-01-01', y: 7 },\n//                         { x: '2018-01-02', y: 5 },\n//                         { x: '2018-01-03', y: 11 },\n//                         { x: '2018-01-04', y: 9 },\n//                         { x: '2018-01-05', y: 12 },\n//                         { x: '2018-01-06', y: 16 },\n//                         { x: '2018-01-07', y: 13 },\n//                         { x: '2018-01-08', y: 13 },\n//                     ],\n//                 },\n//                 {\n//                     id: 'fake corp. B',\n//                     data: [\n//                         { x: '2018-01-04', y: 14 },\n//                         { x: '2018-01-05', y: 14 },\n//                         { x: '2018-01-06', y: 15 },\n//                         { x: '2018-01-07', y: 11 },\n//                         { x: '2018-01-08', y: 10 },\n//                         { x: '2018-01-09', y: 12 },\n//                         { x: '2018-01-10', y: 9 },\n//                         { x: '2018-01-11', y: 7 },\n//                     ],\n//                 },\n//             ]}\n//             margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n//             xScale={{\n//                 type: 'time',\n//                 format: '%Y-%m-%d',\n//                 useUTC: false,\n//                 precision: 'day',\n//             }}\n//             xFormat=\"time:%Y-%m-%d\"\n//             yScale={{\n//                 type: 'linear',\n//                 stacked: Boolean('stacked', false),\n//             }}\n//             axisTop={null}\n//             axisRight={null}\n//             axisBottom={{\n//                 format: '%b %d',\n//                 tickValues: 'every 2 days',\n//                 legend: 'time scale',\n//                 legendOffset: -12,\n//             }}\n//             axisLeft={{\n//                 legend: 'linear scale',\n//                 legendOffset: 12,\n//             }}\n//             colors={{ scheme: 'nivo' }}\n//             pointSize={10}\n//             pointColor={{ theme: 'background' }}\n//             pointBorderWidth={2}\n//             pointBorderColor={{ from: 'serieColor' }}\n//             pointLabel=\"y\"\n//             pointLabelYOffset={-12}\n//             useMesh={true}\n//             legends={[\n//                 {\n//                     anchor: 'bottom-right',\n//                     direction: 'column',\n//                     justify: false,\n//                     translateX: 100,\n//                     translateY: 0,\n//                     itemsSpacing: 0,\n//                     itemDirection: 'left-to-right',\n//                     itemWidth: 80,\n//                     itemHeight: 20,\n//                     itemOpacity: 0.75,\n//                     symbolSize: 12,\n//                     symbolShape: 'circle',\n//                     symbolBorderColor: 'rgba(0, 0, 0, .5)',\n//                     effects: [\n//                         {\n//                             on: 'hover',\n//                             style: {\n//                                 itemBackground: 'rgba(0, 0, 0, .03)',\n//                                 itemOpacity: 1\n//                             }\n//                         }\n//                     ]\n//                 }\n//             ]}\n//         />\n//     );\n// }","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/components/LineGraph.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\n// import { ResponsiveLine } from '@nivo/line';\n\n// export default function MyResponsiveLine() {\n//     return (\n//         <ResponsiveLine\n//             data={[\n//                 {\n//                     id: 'fake corp. A',\n//                     data: [\n//                         { x: '2018-01-01', y: 7 },\n//                         { x: '2018-01-02', y: 5 },\n//                         { x: '2018-01-03', y: 11 },\n//                         { x: '2018-01-04', y: 9 },\n//                         { x: '2018-01-05', y: 12 },\n//                         { x: '2018-01-06', y: 16 },\n//                         { x: '2018-01-07', y: 13 },\n//                         { x: '2018-01-08', y: 13 },\n//                     ],\n//                 },\n//                 {\n//                     id: 'fake corp. B',\n//                     data: [\n//                         { x: '2018-01-04', y: 14 },\n//                         { x: '2018-01-05', y: 14 },\n//                         { x: '2018-01-06', y: 15 },\n//                         { x: '2018-01-07', y: 11 },\n//                         { x: '2018-01-08', y: 10 },\n//                         { x: '2018-01-09', y: 12 },\n//                         { x: '2018-01-10', y: 9 },\n//                         { x: '2018-01-11', y: 7 },\n//                     ],\n//                 },\n//             ]}\n//             margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n//             xScale={{\n//                 type: 'time',\n//                 format: '%Y-%m-%d',\n//                 useUTC: false,\n//                 precision: 'day',\n//             }}\n//             xFormat=\"time:%Y-%m-%d\"\n//             yScale={{\n//                 type: 'linear',\n//                 stacked: Boolean('stacked', false),\n//             }}\n//             axisTop={null}\n//             axisRight={null}\n//             axisBottom={{\n//                 format: '%b %d',\n//                 tickValues: 'every 2 days',\n//                 legend: 'time scale',\n//                 legendOffset: -12,\n//             }}\n//             axisLeft={{\n//                 legend: 'linear scale',\n//                 legendOffset: 12,\n//             }}\n//             colors={{ scheme: 'nivo' }}\n//             pointSize={10}\n//             pointColor={{ theme: 'background' }}\n//             pointBorderWidth={2}\n//             pointBorderColor={{ from: 'serieColor' }}\n//             pointLabel=\"y\"\n//             pointLabelYOffset={-12}\n//             useMesh={true}\n//             legends={[\n//                 {\n//                     anchor: 'bottom-right',\n//                     direction: 'column',\n//                     justify: false,\n//                     translateX: 100,\n//                     translateY: 0,\n//                     itemsSpacing: 0,\n//                     itemDirection: 'left-to-right',\n//                     itemWidth: 80,\n//                     itemHeight: 20,\n//                     itemOpacity: 0.75,\n//                     symbolSize: 12,\n//                     symbolShape: 'circle',\n//                     symbolBorderColor: 'rgba(0, 0, 0, .5)',\n//                     effects: [\n//                         {\n//                             on: 'hover',\n//                             style: {\n//                                 itemBackground: 'rgba(0, 0, 0, .03)',\n//                                 itemOpacity: 1\n//                             }\n//                         }\n//                     ]\n//                 }\n//             ]}\n//         />\n//     );\n// }"]},"metadata":{},"sourceType":"module"}