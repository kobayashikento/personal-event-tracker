{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymView.js\";\nimport React from 'react'; // import material ui cores \n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'; // generate random events for the calendar \n\nimport data from '../../assets/data/dashEvents.json';\nimport styles from '../../assets/styles/views/gym/gymStyle.js';\nimport moment from 'moment';\nimport GymSelection from './GymSelection.js';\nimport GymContainer from './GymContainer.js';\nconst useStyles = makeStyles(styles);\nexport default function GymView(props) {\n  const classes = useStyles(); //states \n\n  const [state, setState] = React.useState({\n    selectedData: [],\n    selectedStartDate: moment().subtract(29, 'days'),\n    selectedEndDate: moment(),\n    fullView: true\n  }); // react state for tabs \n\n  const handleDataSelection = data => {\n    setState({ ...state,\n      selectedData: data\n    });\n  };\n\n  const handleDateChange = (start, end) => {\n    setState({ ...state,\n      selectedStartDate: start,\n      selectedEndDate: end\n    });\n  };\n\n  React.useEffect(() => {\n    if (state.tabIndex === 0) {\n      setState({ ...state,\n        fullView: true\n      });\n    } else {\n      setState({ ...state,\n        fullView: false\n      });\n    }\n  }, [state.tabIndex]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: state.fullView ? 7 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GymContainer, {\n    tabIndex: props.tabIndex,\n    handleTabChange: value => props.handleTabChange(value),\n    selectedData: state.selectedData,\n    start: state.selectedStartDate,\n    end: state.selectedEndDate,\n    theme: props.theme,\n    fullView: state.fullView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GymSelection, {\n    handleDataSelection: data => handleDataSelection(data),\n    theme: props.theme,\n    start: state.selectedStartDate,\n    end: state.selectedEndDate,\n    handleDateChange: (start, end) => handleDateChange(start, end),\n    fullView: state.fullView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymView.js"],"names":["React","makeStyles","Paper","Grid","Typography","data","styles","moment","GymSelection","GymContainer","useStyles","GymView","props","classes","state","setState","useState","selectedData","selectedStartDate","subtract","selectedEndDate","fullView","handleDataSelection","handleDateChange","start","end","useEffect","tabIndex","container","value","handleTabChange","theme"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// import material ui cores \nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n// generate random events for the calendar \nimport data from '../../assets/data/dashEvents.json';\n\nimport styles from '../../assets/styles/views/gym/gymStyle.js';\n\nimport moment from 'moment';\n\nimport GymSelection from './GymSelection.js';\nimport GymContainer from './GymContainer.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function GymView(props) {\n    const classes = useStyles();\n\n    //states \n    const [state, setState] = React.useState({\n        selectedData: [],\n        selectedStartDate: moment().subtract(29, 'days'),\n        selectedEndDate: moment(),\n        fullView: true\n    })\n\n    // react state for tabs \n    const handleDataSelection = (data) => {\n        setState({ ...state, selectedData: data })\n    };\n    const handleDateChange = (start, end) => {\n        setState({ ...state, selectedStartDate: start, selectedEndDate: end })\n    };\n    React.useEffect(() => {\n        if (state.tabIndex === 0) {\n            setState({ ...state, fullView: true })\n        } else {\n            setState({ ...state, fullView: false })\n        }\n    }, [state.tabIndex]);\n\n    return (\n        <Grid\n            container\n            className={classes.container}\n            spacing={6}\n        >\n            <Grid item xs={(state.fullView) ? 7 : 12} >\n                <GymContainer\n                    tabIndex={props.tabIndex}\n                    handleTabChange={(value) => props.handleTabChange(value)}\n                    selectedData={state.selectedData}\n                    start={state.selectedStartDate}\n                    end={state.selectedEndDate}\n                    theme={props.theme}\n                    fullView={state.fullView}\n                />\n            </Grid>\n\n            <Grid item xs={5}>\n                <GymSelection\n                    handleDataSelection={(data) => handleDataSelection(data)}\n                    theme={props.theme}\n                    start={state.selectedStartDate}\n                    end={state.selectedEndDate}\n                    handleDateChange={(start, end) => handleDateChange(start, end)}\n                    fullView={state.fullView}\n                />\n            </Grid>\n        </Grid>\n    );\n}"]},"metadata":{},"sourceType":"module"}