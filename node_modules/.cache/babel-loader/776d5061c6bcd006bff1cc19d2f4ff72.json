{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/DashBoard/DashBoardView.js\";\nimport React from 'react'; // import material ui cores \n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport Divider from '@material-ui/core/Divider'; // import nivo \n\nimport { BoxLegendSvg } from '@nivo/legends';\nimport { ThemeProvider, SvgWrapper } from '@nivo/core'; // import dashbaord componenets files \n\nimport Calendar from '../../components/ProgressCalendar.js';\nimport DashList from '../../components/list/DashList.js';\nimport Overview from '../../components/container/OverviewContainer.js';\nimport styles from '../../assets/styles/views/dashboardStyle.js'; // import function used to generate the arrays for the calendar\n\nimport dashFunc from './dashFunctions.js';\nconst useStyles = makeStyles(styles);\nexport default function DashBoardView() {\n  const classes = useStyles();\n  const [calendarIndex, setCalendarIndex] = React.useState(0); // set states\n\n  const [isActive, setActive] = React.useState(false);\n  const [activeIndex, setactiveIndex] = React.useState(0);\n\n  const handleItemClicked = index => {\n    setCalendarIndex(index);\n\n    for (var i = 0; i < activities.length; i++) {\n      if (i === 0 && i === index) {\n        setActive(false);\n        setactiveIndex(0);\n      } else if (i === index) {\n        setActive(true);\n        setactiveIndex(i);\n      } else {}\n    }\n  };\n\n  var allActDisplay = activities.map((prop, index) => {\n    return /*#__PURE__*/React.createElement(Zoom, {\n      in: !isActive,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      elevation: 3,\n      className: classes[prop.id + \"Background\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.statTitle,\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, prop.name), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.statTitle,\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, dashFunc.getAllActivity()[index].length), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.statTitle,\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, \"Days\"))));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tall-rect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wide-rect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })))\n  /* <Grid\n      container\n      justify=\"space-evenly\"\n      alignItems=\"center\"\n      spacing={4}\n  >\n      {isActive ?\n          <Overview\n              totalDays={dashFunc.getAllActivity()[activeIndex].length}\n              name={activities[activeIndex].name}\n              avgDays={null}\n          /> \n          : allActDisplay}\n      <Grid\n          item\n          xs={10} sm={10}\n          className={\n              isActive ? classes.moveCal : null\n          }\n      >\n          <Paper\n              className={classes.paperCalendar}\n              elevation={3}\n          >\n              <Typography className={classes.calTitle} variant=\"h5\">Daily Activity</Typography>\n              <ThemeProvider>\n                  <SvgWrapper\n                      height={70}\n                      width={400}\n                      margin={{ left: 0, right: 0, top: 10, bottom: 0 }}\n                  >\n                      <BoxLegendSvg\n                          anchor=\"center\"\n                          data={activities[calendarIndex].legends}\n                          containerWidth={400}\n                          containerHeight={70}\n                          height={100}\n                          width={400}\n                          direction=\"row\"\n                          itemWidth={90}\n                          itemHeight={20}\n                          itemsSpacing={15}\n                          padding={10}\n                          symbolSize={20}\n                          symbolShape=\"square\"\n                          fontSize=\"30px\"\n                      />\n                  </SvgWrapper>\n              </ThemeProvider>\n              <Calendar\n                  margin={{ top: 40, right: 40, bottom: 40, left: 40 }}\n                  colors={activities[calendarIndex].color}\n                  align=\"top\"\n                  translateY={-40}\n                  itemCount={0}\n                  data={dashFunc.getAllActivity()[calendarIndex]}\n              />\n          </Paper>\n      </Grid>\n      <Grid\n          item\n          xs={2} sm={2}\n          className={\n              isActive ? classes.moveSidebar : null\n          }\n      >\n          <Paper elevation={3}>\n              <DashList\n                  handleChange={(index) => handleItemClicked(index)}\n              />\n          </Paper>\n      </Grid>\n  </Grid> */\n  ;\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/DashBoard/DashBoardView.js"],"names":["React","makeStyles","Paper","Grid","Typography","Zoom","Divider","BoxLegendSvg","ThemeProvider","SvgWrapper","Calendar","DashList","Overview","styles","dashFunc","useStyles","DashBoardView","classes","calendarIndex","setCalendarIndex","useState","isActive","setActive","activeIndex","setactiveIndex","handleItemClicked","index","i","activities","length","allActDisplay","map","prop","id","statTitle","name","getAllActivity","container","title"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// import material ui cores \nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport Divider from '@material-ui/core/Divider';\n\n// import nivo \nimport { BoxLegendSvg } from '@nivo/legends';\nimport { ThemeProvider, SvgWrapper } from '@nivo/core';\n\n// import dashbaord componenets files \nimport Calendar from '../../components/ProgressCalendar.js';\nimport DashList from '../../components/list/DashList.js';\nimport Overview from '../../components/container/OverviewContainer.js';\n\nimport styles from '../../assets/styles/views/dashboardStyle.js';\n\n// import function used to generate the arrays for the calendar\nimport dashFunc from './dashFunctions.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function DashBoardView() {\n    const classes = useStyles();\n\n    const [calendarIndex, setCalendarIndex] = React.useState(0);\n\n    // set states\n    const [isActive, setActive] = React.useState(false);\n    const [activeIndex, setactiveIndex] = React.useState(0);\n\n    const handleItemClicked = (index) => {\n        setCalendarIndex(index);\n        for (var i = 0; i < activities.length; i++) {\n            if (i === 0 && i === index) {\n                setActive(false);\n                setactiveIndex(0);\n            } else if (i === index) {\n                setActive(true);\n                setactiveIndex(i);\n            } else { }\n        }\n    }\n\n    var allActDisplay = (\n        activities.map((prop, index) => {\n            return (\n                <Zoom in={!isActive} key={index}>\n                    <Grid item xs={6} sm={3}>\n                        <Paper\n                            elevation={3}\n                            className={\n                                classes[prop.id + \"Background\"]\n                            }\n                        >\n                            <Typography className={classes.statTitle} variant=\"h5\">{prop.name}</Typography>\n                            <Typography className={classes.statTitle} variant=\"h5\">{dashFunc.getAllActivity()[index].length}</Typography>\n                            <Typography className={classes.statTitle} variant=\"h6\">Days</Typography>\n                        </Paper>\n                    </Grid>\n                </Zoom>\n            );\n        })\n    );\n\n\n    return (\n        <div className={classes.container}>\n            <Typography className={classes.title} variant=\"h5\">Dashboard</Typography>\n            <Divider />\n            <section>\n                <div className=\"flex-col-2\">\n                    <div className=\"tall-rect\">\n\n                    </div>\n                    <div className=\"wide-rect\">\n\n                    </div>\n                </div>\n                <div className=\"square\">\n\n                </div>\n            </section>\n        </div>\n        /* <Grid\n            container\n            justify=\"space-evenly\"\n            alignItems=\"center\"\n            spacing={4}\n        >\n            {isActive ?\n                <Overview\n                    totalDays={dashFunc.getAllActivity()[activeIndex].length}\n                    name={activities[activeIndex].name}\n                    avgDays={null}\n                /> \n                : allActDisplay}\n            <Grid\n                item\n                xs={10} sm={10}\n                className={\n                    isActive ? classes.moveCal : null\n                }\n            >\n                <Paper\n                    className={classes.paperCalendar}\n                    elevation={3}\n                >\n                    <Typography className={classes.calTitle} variant=\"h5\">Daily Activity</Typography>\n                    <ThemeProvider>\n                        <SvgWrapper\n                            height={70}\n                            width={400}\n                            margin={{ left: 0, right: 0, top: 10, bottom: 0 }}\n                        >\n                            <BoxLegendSvg\n                                anchor=\"center\"\n                                data={activities[calendarIndex].legends}\n                                containerWidth={400}\n                                containerHeight={70}\n                                height={100}\n                                width={400}\n                                direction=\"row\"\n                                itemWidth={90}\n                                itemHeight={20}\n                                itemsSpacing={15}\n                                padding={10}\n                                symbolSize={20}\n                                symbolShape=\"square\"\n                                fontSize=\"30px\"\n                            />\n                        </SvgWrapper>\n                    </ThemeProvider>\n                    <Calendar\n                        margin={{ top: 40, right: 40, bottom: 40, left: 40 }}\n                        colors={activities[calendarIndex].color}\n                        align=\"top\"\n                        translateY={-40}\n                        itemCount={0}\n                        data={dashFunc.getAllActivity()[calendarIndex]}\n                    />\n                </Paper>\n            </Grid>\n            <Grid\n                item\n                xs={2} sm={2}\n                className={\n                    isActive ? classes.moveSidebar : null\n                }\n            >\n                <Paper elevation={3}>\n                    <DashList\n                        handleChange={(index) => handleItemClicked(index)}\n                    />\n                </Paper>\n            </Grid>\n        </Grid> */\n    );\n}"]},"metadata":{},"sourceType":"module"}