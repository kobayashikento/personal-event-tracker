{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymStatistics.js\";\nimport React from 'react';\nimport { useRef, useLayoutEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MaterialTable from 'material-table';\nimport Grid from '@material-ui/core/Grid';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport styles from '../../assets/styles/views/gym/gymcontainerStyle.js';\nimport { icons } from '../../assets/styles/masterStyle.js';\nimport GymGraph from './GymGraph.js';\nimport routineJson from '../../assets/data/workoutRoutine.json'; // data\n\nimport workoutData from '../../assets/data/gymData.json';\nimport workoutJson from '../../assets/data/workouts.json';\nimport GymSelection from './GymSelection.js';\nconst useStyles = makeStyles(styles);\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n} // Functions \n\n\nconst titleCase = str => {\n  let splitStr = str.toLowerCase().split(' ');\n\n  for (var i = 0; i < splitStr.length; i++) {\n    splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n  }\n\n  return splitStr.join(' ');\n};\n\nexport default function GymStatistics(props) {\n  const classes = useStyles(); // states \n\n  const targetRef = useRef(); //states \n\n  const [state, setState] = React.useState({\n    selectedData: [],\n    selectedStartDate: moment().subtract(29, 'days'),\n    selectedEndDate: moment(),\n    width: 0,\n    height: 0,\n    tabIndex: 0\n  }); // react state for tabs \n\n  const handleDataSelection = data => {\n    setState({ ...state,\n      selectedData: data\n    });\n  };\n\n  const handleDateChange = (start, end) => {\n    setState({ ...state,\n      selectedStartDate: start,\n      selectedEndDate: end\n    });\n  };\n\n  const handleTabChange = index => [setState({ ...state,\n    tabIndex: index\n  })];\n\n  useLayoutEffect(() => {\n    if (targetRef.current) {\n      setState({ ...state,\n        width: targetRef.current.offsetWidth,\n        height: targetRef.current.offsetHeight\n      });\n    }\n  }, []);\n\n  const createTabPanel = () => {\n    return /*#__PURE__*/React.createElement(Paper, {\n      elevation: 0,\n      className: classes.paperHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      color: \"default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      value: props.tabIndex,\n      onChange: handleTabChange,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"scrollable\",\n      scrollButtons: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n      className: classes.tab,\n      label: \"Workout Statistics\"\n    }, a11yProps(0), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n      className: classes.tab,\n      label: \"One Time Rep Statistics\"\n    }, a11yProps(1), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n      className: classes.tab,\n      label: \"Manage Workouts\"\n    }, a11yProps(2), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n      className: classes.tab,\n      label: \"Manage Routines\"\n    }, a11yProps(3), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(TabPanel, {\n      className: classes.tabpanel,\n      value: props.tabIndex,\n      index: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GymGraph, {\n      data: props.selectedData,\n      start: props.start,\n      end: props.end,\n      theme: props.theme,\n      width: props.width,\n      height: props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(TabPanel, {\n      value: props.tabIndex,\n      index: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TabPanel, {\n      value: props.tabIndex,\n      index: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TabPanel, {\n      value: props.tabIndex,\n      index: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    ref: targetRef,\n    className: classes.gymContainer,\n    item: true,\n    xs: props.tabIndex === 0 ? 8 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, createTabPanel()), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.gymSelection,\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GymSelection, {\n    handleDataSelection: data => handleDataSelection(data),\n    theme: props.theme,\n    start: state.selectedStartDate,\n    end: state.selectedEndDate,\n    handleDateChange: (start, end) => handleDateChange(start, end),\n    tabIndex: props.tabIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/views/Gym/GymStatistics.js"],"names":["React","useRef","useLayoutEffect","PropTypes","moment","Paper","makeStyles","useTheme","Box","AppBar","Tabs","Tab","MaterialTable","Grid","useMediaQuery","styles","icons","GymGraph","routineJson","workoutData","workoutJson","GymSelection","useStyles","TabPanel","props","children","value","index","other","height","propTypes","node","any","isRequired","a11yProps","id","titleCase","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","GymStatistics","classes","targetRef","state","setState","useState","selectedData","selectedStartDate","subtract","selectedEndDate","width","tabIndex","handleDataSelection","data","handleDateChange","start","end","handleTabChange","current","offsetWidth","offsetHeight","createTabPanel","paperHidden","tab","tabpanel","theme","container","gymContainer","gymSelection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,OAAOC,MAAP,MAAmB,oDAAnB;AAEA,SAASC,KAAT,QAAsB,oCAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,WAAP,MAAwB,uCAAxB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AAEA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,MAAMC,SAAS,GAAGhB,UAAU,CAACS,MAAD,CAA5B;;AAEA,SAASQ,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0B,OAAGC;AAA7B,MAAuCJ,KAA7C;AACA,sBACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,MAAM,EAAEE,KAAK,KAAKC,KAFtB;AAGI,IAAA,EAAE,EAAG,4BAA2BA,KAAM,EAH1C;AAII,uBAAkB,uBAAsBA,KAAM;AAJlD,KAKQC,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOKF,KAAK,KAAKC,KAAV,iBACG,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,QADL,CARR,CADJ;AAeH;;AAEDF,QAAQ,CAACO,SAAT,GAAqB;AACjBL,EAAAA,QAAQ,EAAEtB,SAAS,CAAC4B,IADH;AAEjBJ,EAAAA,KAAK,EAAExB,SAAS,CAAC6B,GAAV,CAAcC,UAFJ;AAGjBP,EAAAA,KAAK,EAAEvB,SAAS,CAAC6B,GAAV,CAAcC;AAHJ,CAArB;;AAMA,SAASC,SAAT,CAAmBP,KAAnB,EAA0B;AACtB,SAAO;AACHQ,IAAAA,EAAE,EAAG,uBAAsBR,KAAM,EAD9B;AAEH,qBAAkB,4BAA2BA,KAAM;AAFhD,GAAP;AAIH,C,CAED;;;AACA,MAAMS,SAAS,GAAIC,GAAD,IAAS;AACvB,MAAIC,QAAQ,GAAGD,GAAG,CAACE,WAAJ,GAAkBC,KAAlB,CAAwB,GAAxB,CAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCH,IAAAA,QAAQ,CAACG,CAAD,CAAR,GAAcH,QAAQ,CAACG,CAAD,CAAR,CAAYE,MAAZ,CAAmB,CAAnB,EAAsBC,WAAtB,KAAsCN,QAAQ,CAACG,CAAD,CAAR,CAAYI,SAAZ,CAAsB,CAAtB,CAApD;AACH;;AACD,SAAOP,QAAQ,CAACQ,IAAT,CAAc,GAAd,CAAP;AACH,CAND;;AAQA,eAAe,SAASC,aAAT,CAAuBvB,KAAvB,EAA8B;AACzC,QAAMwB,OAAO,GAAG1B,SAAS,EAAzB,CADyC,CAEzC;;AACA,QAAM2B,SAAS,GAAGhD,MAAM,EAAxB,CAHyC,CAIzC;;AACA,QAAM,CAACiD,KAAD,EAAQC,QAAR,IAAoBnD,KAAK,CAACoD,QAAN,CAAe;AACrCC,IAAAA,YAAY,EAAE,EADuB;AAErCC,IAAAA,iBAAiB,EAAElD,MAAM,GAAGmD,QAAT,CAAkB,EAAlB,EAAsB,MAAtB,CAFkB;AAGrCC,IAAAA,eAAe,EAAEpD,MAAM,EAHc;AAIrCqD,IAAAA,KAAK,EAAE,CAJ8B;AAI3B5B,IAAAA,MAAM,EAAE,CAJmB;AAKrC6B,IAAAA,QAAQ,EAAE;AAL2B,GAAf,CAA1B,CALyC,CAazC;;AACA,QAAMC,mBAAmB,GAAIC,IAAD,IAAU;AAClCT,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYG,MAAAA,YAAY,EAAEO;AAA1B,KAAD,CAAR;AACH,GAFD;;AAGA,QAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACrCZ,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYI,MAAAA,iBAAiB,EAAEQ,KAA/B;AAAsCN,MAAAA,eAAe,EAAEO;AAAvD,KAAD,CAAR;AACH,GAFD;;AAGA,QAAMC,eAAe,GAAIrC,KAAD,IAAU,CAC9BwB,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWQ,IAAAA,QAAQ,EAAE/B;AAArB,GAAD,CADsB,CAAlC;;AAGAzB,EAAAA,eAAe,CAAC,MAAM;AAClB,QAAI+C,SAAS,CAACgB,OAAd,EAAuB;AACnBd,MAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELO,QAAAA,KAAK,EAAER,SAAS,CAACgB,OAAV,CAAkBC,WAFpB;AAGLrC,QAAAA,MAAM,EAAEoB,SAAS,CAACgB,OAAV,CAAkBE;AAHrB,OAAD,CAAR;AAKH;AACJ,GARc,EAQZ,EARY,CAAf;;AAUA,QAAMC,cAAc,GAAG,MAAM;AACzB,wBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AAAqB,MAAA,SAAS,EAAEpB,OAAO,CAACqB,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAE7C,KAAK,CAACkC,QADjB;AAEI,MAAA,QAAQ,EAAEM,eAFd;AAGI,MAAA,cAAc,EAAC,SAHnB;AAII,MAAA,SAAS,EAAC,SAJd;AAKI,MAAA,OAAO,EAAC,YALZ;AAMI,MAAA,aAAa,EAAC,MANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAEhB,OAAO,CAACsB,GAAxB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAA4DpC,SAAS,CAAC,CAAD,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARJ,eASI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAEc,OAAO,CAACsB,GAAxB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAAiEpC,SAAS,CAAC,CAAD,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OATJ,eAUI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAEc,OAAO,CAACsB,GAAxB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAAyDpC,SAAS,CAAC,CAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAVJ,eAWI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAEc,OAAO,CAACsB,GAAxB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAAyDpC,SAAS,CAAC,CAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAXJ,CADJ,CADJ,eAgBI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAEc,OAAO,CAACuB,QAA7B;AAAuC,MAAA,KAAK,EAAE/C,KAAK,CAACkC,QAApD;AAA8D,MAAA,KAAK,EAAE,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAElC,KAAK,CAAC6B,YADhB;AAEI,MAAA,KAAK,EAAE7B,KAAK,CAACsC,KAFjB;AAGI,MAAA,GAAG,EAAEtC,KAAK,CAACuC,GAHf;AAII,MAAA,KAAK,EAAEvC,KAAK,CAACgD,KAJjB;AAKI,MAAA,KAAK,EAAEhD,KAAK,CAACiC,KALjB;AAMI,MAAA,MAAM,EAAEjC,KAAK,CAACK,MANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAhBJ,eA0BI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEL,KAAK,CAACkC,QAAvB;AAAiC,MAAA,KAAK,EAAE,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BJ,eA6BI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAElC,KAAK,CAACkC,QAAvB;AAAiC,MAAA,KAAK,EAAE,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BJ,eAgCI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAElC,KAAK,CAACkC,QAAvB;AAAiC,MAAA,KAAK,EAAE,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCJ,CADJ;AAsCH,GAvCD;;AAwCA,sBACI,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,SAAS,EAAEV,OAAO,CAACyB,SAFvB;AAGI,IAAA,OAAO,EAAE,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAExB,SAAX;AAAsB,IAAA,SAAS,EAAED,OAAO,CAAC0B,YAAzC;AAAuD,IAAA,IAAI,MAA3D;AAA4D,IAAA,EAAE,EAAGlD,KAAK,CAACkC,QAAN,KAAmB,CAApB,GAAyB,CAAzB,GAA6B,EAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKU,cAAc,EADnB,CALJ,eAQI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEpB,OAAO,CAAC2B,YAAzB;AAAuC,IAAA,IAAI,MAA3C;AAA4C,IAAA,EAAE,EAAE,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,mBAAmB,EAAGf,IAAD,IAAUD,mBAAmB,CAACC,IAAD,CADtD;AAEI,IAAA,KAAK,EAAEpC,KAAK,CAACgD,KAFjB;AAGI,IAAA,KAAK,EAAEtB,KAAK,CAACI,iBAHjB;AAII,IAAA,GAAG,EAAEJ,KAAK,CAACM,eAJf;AAKI,IAAA,gBAAgB,EAAE,CAACM,KAAD,EAAQC,GAAR,KAAgBF,gBAAgB,CAACC,KAAD,EAAQC,GAAR,CALtD;AAMI,IAAA,QAAQ,EAAEvC,KAAK,CAACkC,QANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARJ,CADJ;AAqBH","sourcesContent":["import React from 'react'\nimport { useRef, useLayoutEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MaterialTable from 'material-table';\nimport Grid from '@material-ui/core/Grid';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport styles from '../../assets/styles/views/gym/gymcontainerStyle.js';\n\nimport { icons } from '../../assets/styles/masterStyle.js';\nimport GymGraph from './GymGraph.js';\nimport routineJson from '../../assets/data/workoutRoutine.json';\n\n// data\nimport workoutData from '../../assets/data/gymData.json';\nimport workoutJson from '../../assets/data/workouts.json';\n\nimport GymSelection from './GymSelection.js';\n\nconst useStyles = makeStyles(styles);\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box style={{ height: \"100%\" }}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\n// Functions \nconst titleCase = (str) => {\n    let splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    return splitStr.join(' ');\n};\n\nexport default function GymStatistics(props) {\n    const classes = useStyles();\n    // states \n    const targetRef = useRef();\n    //states \n    const [state, setState] = React.useState({\n        selectedData: [],\n        selectedStartDate: moment().subtract(29, 'days'),\n        selectedEndDate: moment(),\n        width: 0, height: 0,\n        tabIndex: 0\n    })\n\n    // react state for tabs \n    const handleDataSelection = (data) => {\n        setState({ ...state, selectedData: data })\n    };\n    const handleDateChange = (start, end) => {\n        setState({ ...state, selectedStartDate: start, selectedEndDate: end })\n    };\n    const handleTabChange = (index) =>[\n        setState({...state, tabIndex: index})\n    ];\n    useLayoutEffect(() => {\n        if (targetRef.current) {\n            setState({\n                ...state,\n                width: targetRef.current.offsetWidth,\n                height: targetRef.current.offsetHeight\n            });\n        }\n    }, [])\n\n    const createTabPanel = () => {\n        return (\n            <Paper elevation={0} className={classes.paperHidden} >\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                        value={props.tabIndex}\n                        onChange={handleTabChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"auto\"\n                    >\n                        <Tab className={classes.tab} label=\"Workout Statistics\" {...a11yProps(0)} />\n                        <Tab className={classes.tab} label=\"One Time Rep Statistics\" {...a11yProps(1)} />\n                        <Tab className={classes.tab} label=\"Manage Workouts\" {...a11yProps(2)} />\n                        <Tab className={classes.tab} label=\"Manage Routines\" {...a11yProps(3)} />\n                    </Tabs>\n                </AppBar>\n                <TabPanel className={classes.tabpanel} value={props.tabIndex} index={0} >\n                    <GymGraph\n                        data={props.selectedData}\n                        start={props.start}\n                        end={props.end}\n                        theme={props.theme}\n                        width={props.width}\n                        height={props.height}\n                    />\n                </TabPanel>\n                <TabPanel value={props.tabIndex} index={1} >\n\n                </TabPanel>\n                <TabPanel value={props.tabIndex} index={2}>\n\n                </TabPanel>\n                <TabPanel value={props.tabIndex} index={3}>\n\n                </TabPanel>\n            </Paper>\n        );\n    }\n    return (\n        <Grid\n            container\n            className={classes.container}\n            spacing={6}\n        >\n            <Grid ref={targetRef} className={classes.gymContainer} item xs={(props.tabIndex === 0) ? 8 : 12} >\n                {createTabPanel()}\n            </Grid>\n            <Grid className={classes.gymSelection} item xs={4}>\n                <GymSelection\n                    handleDataSelection={(data) => handleDataSelection(data)}\n                    theme={props.theme}\n                    start={state.selectedStartDate}\n                    end={state.selectedEndDate}\n                    handleDateChange={(start, end) => handleDateChange(start, end)}\n                    tabIndex={props.tabIndex}\n                />\n            </Grid>\n        </Grid>\n    );\n}"]},"metadata":{},"sourceType":"module"}