{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/components/CountDownTimer.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport styles from '../assets/styles/components/countdowntimeStyle.js';\nconst useStyles = makeStyles(styles);\nexport default function CountDownTimer(props) {\n  const classes = useStyles(); // states \n\n  const [timer, setTimer] = React.useState(new Date().setHours(0, 4, 0));\n  const [didStart, setStart] = React.useState(false);\n\n  const handleStart = () => {\n    setStart(!didStart);\n  };\n\n  const id = React.useRef(null);\n\n  const clear = () => {\n    window.clearInterval(id.current);\n  };\n\n  React.useEffect(() => {\n    while (didStart && timer.getMinutes != 0 && timer.getSeconds != 0) {\n      id.current = window.setInterval(() => {\n        setTimer(timer => timer - 1000);\n      }, 1000);\n    }\n\n    return () => clear();\n  }, [didStart]);\n  React.useEffect(() => {\n    if (timer.get === 0) {\n      clear();\n    }\n  }, [timer]);\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 1,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    ampm: false,\n    openTo: \"minutes\",\n    views: [\"minutes\", \"seconds\"],\n    format: \"mm:ss\",\n    label: \"Countdown Timer\",\n    value: timer,\n    onChange: setTimer,\n    variant: \"dialog\",\n    inputVariant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), !didStart ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Start\") : /*#__PURE__*/React.createElement(Button, {\n    onClick: handleStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Stop\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Reset\"));\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/components/CountDownTimer.js"],"names":["React","makeStyles","TimePicker","MuiPickersUtilsProvider","DateFnsUtils","Paper","Button","styles","useStyles","CountDownTimer","props","classes","timer","setTimer","useState","Date","setHours","didStart","setStart","handleStart","id","useRef","clear","window","clearInterval","current","useEffect","getMinutes","getSeconds","setInterval","get","paper"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { makeStyles } from '@material-ui/styles'\nimport { TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport styles from '../assets/styles/components/countdowntimeStyle.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function CountDownTimer(props) {\n    const classes = useStyles();\n    // states \n    const [timer, setTimer] = React.useState(new Date().setHours(0, 4, 0));\n    const [didStart, setStart] = React.useState(false);\n    const handleStart = () => {\n        setStart(!didStart);\n    }\n\n    const id = React.useRef(null);\n    const clear = () => {\n        window.clearInterval(id.current);\n    };\n\n    React.useEffect(() => {\n        while (didStart && timer.getMinutes != 0 && timer.getSeconds != 0) {\n            id.current = window.setInterval(() => {\n                setTimer((timer) => timer - 1000);\n            }, 1000);\n        }\n        return () => clear()\n    }, [didStart]);\n\n    React.useEffect(() => {\n        if (timer.get === 0) {\n            clear();\n        }\n    }, [timer]);\n\n    return (\n        <Paper elevation={1} className={classes.paper}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <TimePicker\n                    ampm={false}\n                    openTo=\"minutes\"\n                    views={[\"minutes\", \"seconds\"]}\n                    format=\"mm:ss\"\n                    label=\"Countdown Timer\"\n                    value={timer}\n                    onChange={setTimer}\n                    variant=\"dialog\"\n                    inputVariant=\"outlined\"\n                />\n\n            </MuiPickersUtilsProvider>\n            {!didStart ?\n                <Button onClick={handleStart}>Start</Button> :\n                <Button onClick={handleStart}>Stop</Button>\n            }\n            <Button>Reset</Button>\n        </Paper>\n    );\n}"]},"metadata":{},"sourceType":"module"}