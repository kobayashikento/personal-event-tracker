{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/src/components/list/DrawerList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames'; // import material ui \n\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse'; // import styles from MUI\n\nimport { makeStyles } from '@material-ui/core/styles'; // import files \n\nimport styles from '../../assets/styles/components/list/drawerlistStyle.js';\nimport { gymRoutes } from '../../routes.js';\nconst useStyles = makeStyles(styles);\nexport default function DrawerList(props) {\n  const classes = useStyles(); // states\n\n  const [open, setOpen] = React.useState(true);\n\n  const handleListItemClick = (event, index) => {\n    props.handleListItemClick(index);\n  };\n\n  const handleGymIndexChanege = (event, index) => {\n    props.setGymSelectedIndex(index);\n  };\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var gymLinks = gymRoutes.map((prop, index) => {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: prop.path,\n      className: classes.item,\n      key: prop.name + index,\n      style: {\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      className: classNames(classes.drawerButtonNested),\n      onClick: event => handleGymIndexChanege(event, index),\n      selected: props.gymSelectedIndex === index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: prop.name,\n      disableTypography: true,\n      className: classes.buttonText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    })));\n  });\n\n  const gymdrawerItems = (index, Icon, name, path) => {\n    if (name === \"Gym\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        selected: props.selectedIndex === index,\n        className: classNames(classes.drawerButtonItem),\n        key: name,\n        onClick: handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: classes.buttonIcon,\n        fontSize: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ListItemText, {\n        disableTypography: true,\n        className: classes.buttonText,\n        primary: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }), open ? /*#__PURE__*/React.createElement(ExpandMore, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(ExpandLess, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(Collapse, {\n        in: open,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        component: \"div\",\n        disablePadding: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, gymLinks)));\n    } else if (name === \"Statistics\" || name === \"GymManage\") {} else {\n      return /*#__PURE__*/React.createElement(Link, {\n        to: path,\n        className: classes.item,\n        key: index,\n        style: {\n          textDecoration: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        selected: props.selectedIndex === index,\n        className: classNames(classes.drawerButton),\n        style: {\n          color: props.theme.colors.primarytext\n        },\n        key: name,\n        onClick: event => handleListItemClick(event, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: classes.buttonIcon,\n        fontSize: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ListItemText, {\n        className: classes.buttonText,\n        primary: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      })));\n    }\n  }; //reccusively create the list items for the drawer\n\n\n  var drawerItems = /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, props.routes.map((prop, index) => {\n    return gymdrawerItems(index, prop.icon, prop.name, prop.path);\n  }));\n  return drawerItems;\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/src/components/list/DrawerList.js"],"names":["React","Link","classNames","List","ListItemText","ListItem","DragHandleIcon","ExpandLess","ExpandMore","Collapse","makeStyles","styles","gymRoutes","useStyles","DrawerList","props","classes","open","setOpen","useState","handleListItemClick","event","index","handleGymIndexChanege","setGymSelectedIndex","handleClick","gymLinks","map","prop","path","item","name","textDecoration","drawerButtonNested","gymSelectedIndex","buttonText","gymdrawerItems","Icon","selectedIndex","drawerButtonItem","buttonIcon","drawerButton","color","theme","colors","primarytext","drawerItems","list","routes","icon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// import material ui \nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\n\n// import styles from MUI\nimport { makeStyles } from '@material-ui/core/styles';\n\n// import files \nimport styles from '../../assets/styles/components/list/drawerlistStyle.js';\n\nimport { gymRoutes } from '../../routes.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function DrawerList(props) {\n    const classes = useStyles();\n\n    // states\n    const [open, setOpen] = React.useState(true);\n    const handleListItemClick = (event, index) => {\n        props.handleListItemClick(index);\n    };\n    const handleGymIndexChanege = (event, index) => {\n        props.setGymSelectedIndex(index);\n    }\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    var gymLinks = (\n        gymRoutes.map((prop, index) => {\n            return (\n                <Link\n                    to={prop.path}\n                    className={classes.item}\n                    key={prop.name + index}\n                    style={{ textDecoration: \"none\" }}\n                >\n                    <ListItem\n                        button\n                        className={classNames(classes.drawerButtonNested)}\n                        onClick={(event) => handleGymIndexChanege(event, index)}\n                        selected={props.gymSelectedIndex === index}\n                    >\n                        <ListItemText\n                            primary={prop.name}\n                            disableTypography\n                            className={classes.buttonText}\n                        />\n                    </ListItem>\n                </Link>\n            );\n        })\n    );\n\n    const gymdrawerItems = (index, Icon, name, path) => {\n        if (name === \"Gym\") {\n            return (\n                <React.Fragment key={index} >\n                    < ListItem\n                        button\n                        selected={props.selectedIndex === index}\n                        className={classNames(classes.drawerButtonItem)}\n                        key={name}\n                        onClick={handleClick}\n                    >\n                        <Icon\n                            className={classes.buttonIcon}\n                            fontSize=\"default\"\n                        />\n                        <ListItemText\n                            disableTypography\n                            className={classes.buttonText}\n                            primary={name}\n                        />\n                        {open ? <ExpandMore /> : <ExpandLess />}\n                    </ListItem >\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            {gymLinks}\n                        </List>\n                    </Collapse>\n                </React.Fragment>\n            );\n        } else if (name === \"Statistics\" || name === \"GymManage\") {\n        } else {\n            return (\n                <Link\n                    to={path}\n                    className={classes.item}\n                    key={index}\n                    style={{ textDecoration: \"none\" }}\n                >\n                    <ListItem\n                        button\n                        selected={props.selectedIndex === index}\n                        className={classNames(classes.drawerButton)}\n                        style={{color: props.theme.colors.primarytext}}\n                        key={name}\n                        onClick={(event) => handleListItemClick(event, index)}\n                    >\n                        <Icon\n                            className={classes.buttonIcon}\n                            fontSize=\"default\"\n                        />\n                        <ListItemText\n                            className={classes.buttonText}\n                            primary={name}\n                        />\n                    </ListItem>\n                </Link>\n            );\n        }\n    };\n\n    //reccusively create the list items for the drawer\n    var drawerItems = (\n        <List className={classes.list}>\n            {props.routes.map((prop, index) => {\n                return (\n                    gymdrawerItems(index, prop.icon, prop.name, prop.path)\n                );\n            })}\n        </List >\n    );\n\n    return (\n        drawerItems\n    );\n}"]},"metadata":{},"sourceType":"module"}