{"ast":null,"code":"import _slicedToArray from\"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Link}from'react-router-dom';import classNames from'classnames';// import material ui \nimport List from'@material-ui/core/List';import ListItemText from'@material-ui/core/ListItemText';import ListItem from'@material-ui/core/ListItem';import DragHandleIcon from'@material-ui/icons/DragHandle';import ExpandLess from'@material-ui/icons/ExpandLess';import ExpandMore from'@material-ui/icons/ExpandMore';import Collapse from'@material-ui/core/Collapse';// import styles from MUI\nimport{makeStyles}from'@material-ui/core/styles';// import files \nimport styles from'../../assets/styles/components/list/drawerlistStyle.js';import{gymRoutes}from'../../routes.js';var useStyles=makeStyles(styles);export default function DrawerList(props){var classes=useStyles();// states\nvar _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var handleListItemClick=function handleListItemClick(event,index){props.handleListItemClick(index);};var handleGymIndexChanege=function handleGymIndexChanege(event,index){props.setGymSelectedIndex(index);};var handleClick=function handleClick(){setOpen(!open);};var gymLinks=gymRoutes.map(function(prop,index){return/*#__PURE__*/React.createElement(Link,{to:prop.path,className:classes.item,key:prop.name+index,style:{textDecoration:\"none\"}},/*#__PURE__*/React.createElement(ListItem,{button:true,style:{color:props.theme.colors.primarytext},className:classNames(classes.drawerButtonNested),onClick:function onClick(event){return handleGymIndexChanege(event,index);},selected:props.gymSelectedIndex===index},/*#__PURE__*/React.createElement(ListItemText,{primary:prop.name,className:classes.buttonText})));});var gymdrawerItems=function gymdrawerItems(index,Icon,name,path){if(name===\"Gym\"){return/*#__PURE__*/React.createElement(React.Fragment,{key:index},/*#__PURE__*/React.createElement(ListItem,{button:true,selected:props.selectedIndex===index,className:classNames(classes.drawerButtonItem),key:name,style:{color:props.theme.colors.primarytext},onClick:handleClick},/*#__PURE__*/React.createElement(Icon,{className:classes.buttonIcon,fontSize:\"default\"}),/*#__PURE__*/React.createElement(ListItemText,{className:classes.buttonText,primary:name}),open?/*#__PURE__*/React.createElement(ExpandMore,null):/*#__PURE__*/React.createElement(ExpandLess,null)),/*#__PURE__*/React.createElement(Collapse,{in:open,timeout:\"auto\",unmountOnExit:true},/*#__PURE__*/React.createElement(List,{component:\"div\",disablePadding:true},gymLinks)));}else if(name===\"Statistics\"||name===\"GymManage\"){}else{return/*#__PURE__*/React.createElement(Link,{to:path,className:classes.item,key:index,style:{textDecoration:\"none\"}},/*#__PURE__*/React.createElement(ListItem,{button:true,selected:props.selectedIndex===index,className:classNames(classes.drawerButton),style:{color:props.theme.colors.primarytext},key:name,onClick:function onClick(event){return handleListItemClick(event,index);}},/*#__PURE__*/React.createElement(Icon,{className:classes.buttonIcon,fontSize:\"default\"}),/*#__PURE__*/React.createElement(ListItemText,{className:classes.buttonText,primary:name})));}};//reccusively create the list items for the drawer\nvar drawerItems=/*#__PURE__*/React.createElement(List,{className:classes.list},props.routes.map(function(prop,index){return gymdrawerItems(index,prop.icon,prop.name,prop.path);}));return drawerItems;}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/src/components/list/DrawerList.js"],"names":["React","Link","classNames","List","ListItemText","ListItem","DragHandleIcon","ExpandLess","ExpandMore","Collapse","makeStyles","styles","gymRoutes","useStyles","DrawerList","props","classes","useState","open","setOpen","handleListItemClick","event","index","handleGymIndexChanege","setGymSelectedIndex","handleClick","gymLinks","map","prop","path","item","name","textDecoration","color","theme","colors","primarytext","drawerButtonNested","gymSelectedIndex","buttonText","gymdrawerItems","Icon","selectedIndex","drawerButtonItem","buttonIcon","drawerButton","drawerItems","list","routes","icon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// import material ui \nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\n\n// import styles from MUI\nimport { makeStyles } from '@material-ui/core/styles';\n\n// import files \nimport styles from '../../assets/styles/components/list/drawerlistStyle.js';\n\nimport { gymRoutes } from '../../routes.js';\n\nconst useStyles = makeStyles(styles);\n\nexport default function DrawerList(props) {\n    const classes = useStyles();\n\n    // states\n    const [open, setOpen] = React.useState(true);\n    const handleListItemClick = (event, index) => {\n        props.handleListItemClick(index);\n    };\n    const handleGymIndexChanege = (event, index) => {\n        props.setGymSelectedIndex(index);\n    }\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    var gymLinks = (\n        gymRoutes.map((prop, index) => {\n            return (\n                <Link\n                    to={prop.path}\n                    className={classes.item}\n                    key={prop.name + index}\n                    style={{ textDecoration: \"none\" }}\n                >\n                    <ListItem\n                        button\n                        style={{ color: props.theme.colors.primarytext }}\n                        className={classNames(classes.drawerButtonNested)}\n                        onClick={(event) => handleGymIndexChanege(event, index)}\n                        selected={props.gymSelectedIndex === index}\n                    >\n                        <ListItemText\n                            primary={prop.name}\n                            className={classes.buttonText}\n                        />\n                    </ListItem>\n                </Link>\n            );\n        })\n    );\n\n    const gymdrawerItems = (index, Icon, name, path) => {\n        if (name === \"Gym\") {\n            return (\n                <React.Fragment key={index} >\n                    < ListItem\n                        button\n                        selected={props.selectedIndex === index}\n                        className={classNames(classes.drawerButtonItem)}\n                        key={name}\n                        style={{ color: props.theme.colors.primarytext }}\n                        onClick={handleClick}\n                    >\n                        <Icon\n                            className={classes.buttonIcon}\n                            fontSize=\"default\"\n                        />\n                        <ListItemText\n                            className={classes.buttonText}\n                            primary={name}\n                        />\n                        {open ? <ExpandMore /> : <ExpandLess />}\n                    </ListItem >\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            {gymLinks}\n                        </List>\n                    </Collapse>\n                </React.Fragment>\n            );\n        } else if (name === \"Statistics\" || name === \"GymManage\") {\n        } else {\n            return (\n                <Link\n                    to={path}\n                    className={classes.item}\n                    key={index}\n                    style={{ textDecoration: \"none\" }}\n                >\n                    <ListItem\n                        button\n                        selected={props.selectedIndex === index}\n                        className={classNames(classes.drawerButton)}\n                        style={{ color: props.theme.colors.primarytext }}\n                        key={name}\n                        onClick={(event) => handleListItemClick(event, index)}\n                    >\n                        <Icon\n                            className={classes.buttonIcon}\n                            fontSize=\"default\"\n                        />\n                        <ListItemText\n                            className={classes.buttonText}\n                            primary={name}\n                        />\n                    </ListItem>\n                </Link>\n            );\n        }\n    };\n\n    //reccusively create the list items for the drawer\n    var drawerItems = (\n        <List className={classes.list}>\n            {props.routes.map((prop, index) => {\n                return (\n                    gymdrawerItems(index, prop.icon, prop.name, prop.path)\n                );\n            })}\n        </List >\n    );\n\n    return (\n        drawerItems\n    );\n}"]},"metadata":{},"sourceType":"module"}