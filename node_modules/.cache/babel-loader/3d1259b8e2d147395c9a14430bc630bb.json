{"ast":null,"code":"var _jsxFileName = \"/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/components/LineGraph.js\";\nimport React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nexport default function MyResponsiveLine() {\n  return /*#__PURE__*/React.createElement(ResponsiveLine, {\n    data: [{\n      id: 'fake corp. A',\n      data: [{\n        x: '2018-01-01',\n        y: 7\n      }, {\n        x: '2018-01-02',\n        y: 5\n      }, {\n        x: '2018-01-03',\n        y: 11\n      }, {\n        x: '2018-01-04',\n        y: 9\n      }, {\n        x: '2018-01-05',\n        y: 12\n      }, {\n        x: '2018-01-06',\n        y: 16\n      }, {\n        x: '2018-01-07',\n        y: 13\n      }, {\n        x: '2018-01-08',\n        y: 13\n      }]\n    }, {\n      id: 'fake corp. B',\n      data: [{\n        x: '2018-01-04',\n        y: 14\n      }, {\n        x: '2018-01-05',\n        y: 14\n      }, {\n        x: '2018-01-06',\n        y: 15\n      }, {\n        x: '2018-01-07',\n        y: 11\n      }, {\n        x: '2018-01-08',\n        y: 10\n      }, {\n        x: '2018-01-09',\n        y: 12\n      }, {\n        x: '2018-01-10',\n        y: 9\n      }, {\n        x: '2018-01-11',\n        y: 7\n      }]\n    }],\n    margin: {\n      top: 50,\n      right: 110,\n      bottom: 50,\n      left: 60\n    },\n    xScale: {\n      type: 'time',\n      format: '%Y-%m-%d',\n      useUTC: false,\n      precision: 'day'\n    },\n    xFormat: \"time:%Y-%m-%d\",\n    yScale: {\n      type: 'linear',\n      stacked: Boolean('stacked', false)\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      format: '%b %d',\n      tickValues: 'every 2 days',\n      legend: 'time scale',\n      legendOffset: -12\n    },\n    axisLeft: {\n      legend: 'linear scale',\n      legendOffset: 12\n    },\n    colors: {\n      scheme: 'nivo'\n    },\n    pointSize: 10,\n    pointColor: {\n      theme: 'background'\n    },\n    pointBorderWidth: 2,\n    pointBorderColor: {\n      from: 'serieColor'\n    },\n    pointLabel: \"y\",\n    pointLabelYOffset: -12,\n    useMesh: true,\n    legends: [{\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 100,\n      translateY: 0,\n      itemsSpacing: 0,\n      itemDirection: 'left-to-right',\n      itemWidth: 80,\n      itemHeight: 20,\n      itemOpacity: 0.75,\n      symbolSize: 12,\n      symbolShape: 'circle',\n      symbolBorderColor: 'rgba(0, 0, 0, .5)',\n      effects: [{\n        on: 'hover',\n        style: {\n          itemBackground: 'rgba(0, 0, 0, .03)',\n          itemOpacity: 1\n        }\n      }]\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/Users/kentokobaysahi/Documents/GitHub/personal-event-tracker/personal-event-tracker/src/components/LineGraph.js"],"names":["React","ResponsiveLine","MyResponsiveLine","id","data","x","y","top","right","bottom","left","type","format","useUTC","precision","stacked","Boolean","tickValues","legend","legendOffset","scheme","theme","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\n\nexport default function MyResponsiveLine() {\n    return (\n        <ResponsiveLine\n            data={[\n                {\n                    id: 'fake corp. A',\n                    data: [\n                        { x: '2018-01-01', y: 7 },\n                        { x: '2018-01-02', y: 5 },\n                        { x: '2018-01-03', y: 11 },\n                        { x: '2018-01-04', y: 9 },\n                        { x: '2018-01-05', y: 12 },\n                        { x: '2018-01-06', y: 16 },\n                        { x: '2018-01-07', y: 13 },\n                        { x: '2018-01-08', y: 13 },\n                    ],\n                },\n                {\n                    id: 'fake corp. B',\n                    data: [\n                        { x: '2018-01-04', y: 14 },\n                        { x: '2018-01-05', y: 14 },\n                        { x: '2018-01-06', y: 15 },\n                        { x: '2018-01-07', y: 11 },\n                        { x: '2018-01-08', y: 10 },\n                        { x: '2018-01-09', y: 12 },\n                        { x: '2018-01-10', y: 9 },\n                        { x: '2018-01-11', y: 7 },\n                    ],\n                },\n            ]}\n            margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n            xScale={{\n                type: 'time',\n                format: '%Y-%m-%d',\n                useUTC: false,\n                precision: 'day',\n            }}\n            xFormat=\"time:%Y-%m-%d\"\n            yScale={{\n                type: 'linear',\n                stacked: Boolean('stacked', false),\n            }}\n            axisTop={null}\n            axisRight={null}\n            axisBottom={{\n                format: '%b %d',\n                tickValues: 'every 2 days',\n                legend: 'time scale',\n                legendOffset: -12,\n            }}\n            axisLeft={{\n                legend: 'linear scale',\n                legendOffset: 12,\n            }}\n            colors={{ scheme: 'nivo' }}\n            pointSize={10}\n            pointColor={{ theme: 'background' }}\n            pointBorderWidth={2}\n            pointBorderColor={{ from: 'serieColor' }}\n            pointLabel=\"y\"\n            pointLabelYOffset={-12}\n            useMesh={true}\n            legends={[\n                {\n                    anchor: 'bottom-right',\n                    direction: 'column',\n                    justify: false,\n                    translateX: 100,\n                    translateY: 0,\n                    itemsSpacing: 0,\n                    itemDirection: 'left-to-right',\n                    itemWidth: 80,\n                    itemHeight: 20,\n                    itemOpacity: 0.75,\n                    symbolSize: 12,\n                    symbolShape: 'circle',\n                    symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                    effects: [\n                        {\n                            on: 'hover',\n                            style: {\n                                itemBackground: 'rgba(0, 0, 0, .03)',\n                                itemOpacity: 1\n                            }\n                        }\n                    ]\n                }\n            ]}\n        />\n    );\n}"]},"metadata":{},"sourceType":"module"}